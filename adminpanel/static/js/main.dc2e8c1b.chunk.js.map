{"version":3,"sources":["_helpers/history.js","_helpers/auth-header.js","_components/PrivateRoute.jsx","_components/common/AppHeader.js","_components/common/AppFooter.js","_components/common/Home.js","_constants/common.js","_components/customer/CustomerList.js","_components/customer/CustomerEdit.js","_components/customer/CustomerResetPassword.js","_components/employee/EmployeeSignIn.js","_components/employee/EmployeeInvite.js","_components/employee/EmployeeInviteAccept.js","_components/employee/EmployeeEdit.js","_components/employee/EmployeeList.js","_components/employee/EmployeeResetPassword.js","_components/financial/FinancialLicensee.js","_components/financial/FinancialTrailer.js","_components/licensee/LicenseeList.js","_components/licensee/LicenseeSignup.js","_components/licensee/LicenseeEdit.js","_components/licensee/LicenseeEmployeeEdit.js","_components/licensee/LicenseeEmployeeInvite.js","_components/licensee/LicenseeEmployeeInviteAccept.js","_components/licensee/LicenseeEmployeeList.js","_components/licensee/LicenseeEmployeeResetPassword.js","_components/licensee_rentalitems/TrailerEdit.js","_components/licensee_rentalitems/TrailerList.js","_components/licensee_rentalitems/UpsellItemEdit.js","_components/licensee_rentalitems/UpsellItemList.js","_components/licensee_rentalitems/BlockTrailerList.js","_components/licensee_rentalitems/BlockTrailerEdit.js","_components/licensee_rentalitems/TrailerInsurance.js","_components/licensee_rentalitems/TrailerServicing.js","_components/payments/PaymentInward.js","_components/payments/PaymentOutward.js","_components/adminrentalitem/RentalItemTypeEdit.js","_components/adminrentalitem/RentalItemTypeList.js","_components/adminrentalitem/TrailerTypeEdit.js","_components/adminrentalitem/TrailerTypeList.js","_components/adminrentalitem/UpsellItemTypeEdit.js","_components/adminrentalitem/UpsellItemTypeList.js","_components/rental/RentalList.js","App.js","index.js"],"names":["history","createBrowserHistory","authHeader","token","JSON","parse","localStorage","getItem","PrivateRoute","Component","component","rest","render","props","expiryDate","user","isValidUser","console","log","Date","getTime","removeItem","location","to","pathname","state","from","useStyles","makeStyles","theme","appBar","background","root","display","title","margin","headerLink","spacing","color","navButton","paddingLeft","paddingRight","navButtonGroupRight","position","right","StyledMenu","withStyles","paper","border","backgroundColor","borderRadius","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","palette","common","black","white","MenuItem","AppHeader","classes","useHistory","showLoggedInMenu","React","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","attributes","handleClose","isOpen","menuId","getNamedItem","value","className","AppBar","Toolbar","variant","Typography","id","name","submenu","link","map","menu","key","Button","aria-controls","aria-haspopup","onClick","keepMounted","open","onClose","subMenu","e","push","ListItemText","primary","menuButton","footer","left","bottom","width","footerText","footerLink","AppFooter","align","href","getFullYear","Home","country","states","businessType","days","hours","hoursStart","hoursEnd","mcc","productDescription","licenseeEmployeeType","apiUrl","marginBottom","table","minWidth","visuallyHidden","clip","height","overflow","padding","top","fetchCustomersAPI","saveCustomerLicenseApproval","generateOTPAPI","verifyOTPAPI","resendInviteAPI","forgotPasswordAPI","TableActionButton","CustomersList","userData","useLocation","acl","CUSTOMERS","includes","replace","setRows","setTotalCount","otpVerifyDetailsStart","customerId","mobile","dialogState","setDialogState","otp","setOTP","otpVerifySucess","setOTPVerifySucess","otpVerifyDetails","setOTPVerifyDetails","tableRef","createRef","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","label","type","onChange","target","DialogActions","requestOptions","method","headers","body","stringify","fetch","then","res","json","current","onQueryChange","setTimeout","catch","error","columns","field","rowData","userRef","email","isEmailVerified","isMobileVerified","photo","rel","driverLicense","card","expiry","scan","verified","accepted","data","query","rowsPerPage","pageSize","page","Promise","resolve","reject","customerList","totalCount","newRows","currentRows","actions","icon","tooltip","disabled","_id","isAccepted","address","platform","isFreeAction","options","actionsColumnIndex","selectEmpty","marginTop","getCustomer","addCustomer","updateCustomer","CustomerEdit","useParams","customerStart","text","pincode","coordinates","dob","moment","subtract","format","add","scanLink","photoLink","driverLicenseScan","loadOnce","customer","setCustomer","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","customerObj","join","err","formValidErrorMessage","a","preventDefault","formData","FormData","append","reqObj","saveCustomerReqURL","Container","maxWidth","CssBaseline","form","noValidate","required","autoComplete","helperText","Box","aria-label","FormControl","InputLabel","Select","labelId","stateIndex","FormHelperText","accept","multiple","files","FormGroup","FormControlLabel","control","Checkbox","checked","submit","strongRegex","RegExp","resetPasswordUrl","CustomerResetPassword","URLSearchParams","search","get","password","setPassword","repassword","setRePassword","formValidError","setFormValidError","setFormValidErrorMessage","validatePasswords","messagePasswordInvalidFormat","doPasswordsMatch","isPasswordsValid","test","isRePasswordValid","errorPassword","copyFormValidError","copyFormValidErrorMessage","errorRePassword","signInUrl","flexDirection","alignItems","avatar","secondary","main","EmployeeSignIn","setEmail","setItem","employeeObj","aclSettingsAdmin","aclSettingsLicensee","employeeInviteUrl","InviteEmployee","ADMINEMPLOYEE","aclSettings","setAclSettings","setACL","privilegeTypes","Object","keys","initACL","forEach","privilegeType","aclType","toUpperCase","setting","settingIndex","length","isACPPresent","newAcl","newAclType","filter","handleACLChange","saveEmployee","EmployeeInviteAccept","setMobile","setName","getEmployee","updateEmployee","updateEmployeeByAdmin","EmployeeEdit","employeeId","employee","setEmployee","isOwner","joinedACL","fetchEmployeesAPI","EmployeeList","TRAILER","adminEmployeeRef","employeeList","acceptedInvite","employeeResetPasswordUrl","fetchFinancialLicenseeAPI","FinancialLicensee","licenseeName","total","totalByLicenseeList","financialsObj","fetchFinancialTrailerAPI","FinancialTrailer","rentedItem","rentedItemName","totalByItemList","fetchLicenseeAPI","saveProofOfIncorporationApproval","LicenseeList","LICENSEE","licenseeId","licenseeRef","proofOfIncorporation","licenseeList","addLicensee","LicenseeSignup","licenseeStart","licensee","city","radius","bsbNumber","availability","workingDays","workingHours","workingHoursStart","workingHoursEnd","stripeAccountId","stripeAccountVerified","accountNumber","tosAcceptanceDate","tosAcceptanceIP","taxId","logoLink","proofOfIncorporationLink","logo","additionalDocumentLink","additionalDocument","licenseeSignup","setLicenseeSignup","success","licenseeObj","businessTypeIndex","parseInt","day","dayIndex","url","getLicensee","putLicensee","LicenseeEdit","workingHoursSplit","split","substring","getLicenseeEmployee","putLicenseeEmployee","LicenseeEmployeeEdit","LICENSEEEMPLOYEE","isDeleted","formatExpiryDate","inputDate","inputComp","inputDateString","deleteEmployeeAPI","employeeRef","fetchTrailerTypesAPI","getLicenseeTrailer","saveLicenseeTrailer","getReadableDuration","durationIn","durationHours","Math","floor","durationDays","TrailerEdit","trailerId","rentalItemTypesList","rentalItemType","itemtype","trailerStart","description","size","capacity","tare","features","rentalCharges","dlrCharges","isFeatured","photosLinks","photos","adminRentalItemId","vin","age","adminTrailers","setAdminTrailers","trailer","setTrailer","trailersList","adminTrailer","trailerObj","i","encType","find","adminTrailerIndex","multiline","Grid","container","item","sm","newFeatures","feature","featureIndex","pickUp","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","charge","chargeIndex","duration","charges","door2Door","photoIndex","fetchTrailersAPI","setTrailerAvailabilityAPI","TrailerList","trailerRef","style","rowStyle","maxHeight","getAdminUpsellItems","getLicenseeTrailers","getLicenseeUpsellItem","saveLicenseeUpsellItem","UpsellEdit","upsellItemId","UPSELL","upsellItemStart","quantity","trailers","setTrailers","adminUpsellItems","setAdminUpsellItems","upsellItem","setUpsellItem","upsellItemsList","adminUpsellItem","upsellItemObj","rates","adminUpsellItemIndex","trailerIndex","fetchUpsellItemsAPI","setUpsellItemAvailabilityAPI","UpsellItemsList","upsellItemRef","getBlockTrailer","getTrailers","getUpsellItems","RentalItemDetails","rentalItem","itemType","itemId","upsellItems","upsellitem","BlockTrailerList","BLOCK","setUpsellItems","blockingRef","startDate","endDate","items","itemIndex","blockingList","saveBlockTrailer","BlockTrailerEdit","blockingId","blockingStart","startTime","endTime","blockingData","setBlockingData","blockingObj","starTime","newItems","Fragment","upsellItemIndex","fetchInsuranceAPI","saveInsuranceApproval","TrailerInsurance","itemName","document","insuranceList","insuranceId","fetchServicingAPI","saveServicingApproval","TrailerServicing","servicingList","servicingId","fetchCustomerPaymentsAPI","CustomerPayment","customerName","totalPaid","transactionIdAuth","transactionAuthDate","authTransactionAction","transactionIdAction","transactionActionDate","customerPaymentsList","fetchLicenseePayoutsAPI","LicenseePayout","totalAmount","stripePayoutStatus","createdAt","updatedAt","licenseePayoutsList","saveRentalItemType","RentalItemTypeEdit","rentalItemId","code","setRentalItemType","rentalItemTypeObj","fetchRentalItemTypesAPI","RentalItemTypesList","rows","rentalItemTypes","rentalItemTypeRef","getTrailer","saveTrailer","rentalItemTypesTrailersList","file","itemTypeIndex","trailerTypeRef","cellStyle","verticalAlign","getUpsellItem","saveUpsellItem","rentalItemTypesUpsellList","fetchUpsellItemTypesAPI","upsellItemTypeRef","fetchRentalsAPI","saveRentalApproval","approvalStatusEnum","0","1","2","paperCenter","textAlign","Rentals","requestType","setRequestType","ButtonGroup","rentalPeriodStart","rentalPeriodEnd","isApproved","requestList","requestBody","rentalId","approvalStatus","extensionId","scheduleId","mainContainerStyle","paddingTop","paddingBottom","flexGrow","App","exact","path","CustomerList","EmployeeInvite","EmployeeResetPassword","LicenseeEmployeeInvite","LicenseeEmployeeInviteAccept","LicenseeEmployeeList","LicenseeEmployeeResetPassword","LicenseeTrailerList","LicenseeTrailerEdit","LicenseeUpsellItemList","LicenseeUpsellItemEdit","LicenseeTrailerInsurance","LicenseeTrailerServicing","PaymentInward","PaymentOutward","RentalList","RentalItemTypeList","TrailerTypeEdit","TrailerTypeList","UpsellItemTypeEdit","UpsellItemTypeList","getElementById"],"mappings":"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","file":"static/js/main.dc2e8c1b.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export function authHeader() {\n    // return authorization header with jwt token\n    let token = JSON.parse(localStorage.getItem('token'));\n\n    if (token) {\n        // return { 'Authorization': 'Bearer ' + user.token };\n        return { 'Authorization': token };\n    } else {\n        return {};\n    }\n}","import React from 'react';\r\nimport { \r\n    Route, \r\n    Redirect,\r\n    useLocation\r\n} from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => { \r\n    return (\r\n        <Route {...rest} render={ props => {\r\n                const expiryDate = localStorage.getItem('expiry');\r\n                const user = localStorage.getItem('user');\r\n                const token = localStorage.getItem('token');\r\n                \r\n                const isValidUser = (user && user !== 'undefined') && (token && token !== 'undefined');\r\n                console.log(\"isValidUser\", isValidUser, \"user\", user, \"token\", token);\r\n                \r\n                if(isValidUser && expiryDate && expiryDate > (new Date()).getTime()) {\r\n                    return (<Component {...props} />);\r\n                }\r\n                localStorage.removeItem('expiry');\r\n                localStorage.removeItem('user');\r\n                localStorage.removeItem('token');\r\n\r\n                console.log(\"props.location\", props.location);\r\n                if(props.location !== \"/adminpanel/\") {\r\n                    return (<Redirect to={{ pathname: '/adminpanel/signin', state: { from: props.location } }} />);\r\n                }\r\n                /* (localStorage.getItem('user')\r\n                    ? <Component {...props} />\r\n                    : <Redirect to={{ pathname: '/signin/signin', state: { from: props.location } }} />) */\r\n            }\r\n        } />\r\n    )\r\n}","import React, { useState, Fragment } from 'react';\n\nimport { \n    AppBar, \n    Toolbar, \n    IconButton, \n    Typography, \n    Button,\n\n    CssBaseline,\n    Drawer,\n    Hidden,\n    List,\n    ListItem,\n    ListItemText,\n\n    Menu,\n    MenuItem\n} from '@material-ui/core';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport { \n    makeStyles,\n    withStyles\n} from '@material-ui/core/styles';\n\nimport {\n    Link,\n    useLocation,\n    useHistory,\n    useParams\n} from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../../App.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        background: '#000000',\n        // zIndex: theme.zIndex.drawer + 1\n    },\n    root: {\n        display: 'flex',\n        // flexGrow: 1,\n    },\n    title: {\n        margin: '10px 30px 10px 10px' ,\n    },\n    headerLink: {\n        margin: theme.spacing(2),\n        color: '#FFFFFF'\n    },\n    navButton: {\n        paddingLeft: '10px',\n        paddingRight: '10px'\n    },\n    navButtonGroupRight: {\n        position: 'absolute',\n        right: '10px'\n    }\n}));\n\nconst StyledMenu = withStyles({\n        paper: {\n            border: '1px solid #000000',\n            backgroundColor: '#000000',\n            borderRadius: 0\n        }\n    })((props) => (\n        <Menu\n            elevation={0}\n            getContentAnchorEl={null}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n            }}\n            {...props}\n        />\n    ));\n  \nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n        '&:focus': {\n            backgroundColor: theme.palette.common.black,\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n    root: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n        '&:hover': {\n            backgroundColor: theme.palette.common.white,\n            '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n                color: theme.palette.common.black,\n            }\n        }\n    },\n}))(MenuItem);\n\nfunction AppHeader() {\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    let showLoggedInMenu = true;\n    let expiryDate = localStorage.getItem('expiry');\n    if(!expiryDate || expiryDate <= (new Date()).getTime()) {\n        showLoggedInMenu = false;\n    }\n\n    const leftMenuList = [\n        {\n            id: \"customer-menu\",\n            name: \"Customer\",\n\n            submenu: [\n                {\n                    name: \"Customer List\",\n                    link: \"/adminpanel/customers\"\n                }\n            ]\n        },\n        {\n            id: \"licensee-menu\",\n            name: \"Licensee\",\n\n            submenu: [\n                {\n                    name: \"Licensee List\",\n                    link: \"/adminpanel/licensees\"\n                },\n                {\n                    name: \"Trailer Insurance List\",\n                    link: \"/adminpanel/licensee/insurance\"\n                },\n                {\n                    name: \"Trailer Servicing List\",\n                    link: \"/adminpanel/licensee/servicing\"\n                }\n            ]\n        },\n        {\n            id: \"payments-menu\",\n            name: \"Payments\",\n\n            submenu: [\n                {\n                    name: \"Inward Payments\",\n                    link: \"/adminpanel/payments/inward\"\n                },\n                {\n                    name: \"Outward Payments\",\n                    link: \"/adminpanel/payments/outward\"\n                }\n            ]\n        },\n        {\n            id: \"financial-menu\",\n            name: \"Financials\",\n\n            submenu: [\n                {\n                    name: \"Financials per Licensee\",\n                    link: \"/adminpanel/financial/licensee\"\n                },\n                {\n                    name: \"Financials per Rental Item\",\n                    link: \"/adminpanel/financial/renteditem\"\n                }\n            ]\n        },\n        {\n            id: \"rentals-menu\",\n            name: \"Rentals\",\n\n            submenu: [\n                {\n                    name: \"Rentals List\",\n                    link: \"/adminpanel/rentals\"\n                }\n            ]\n        },\n        {\n            id: \"rental-item-menu\",\n            name: \"Rental Item\",\n\n            submenu: [\n                {\n                    name: \"Rental Item Types\",\n                    link: \"/adminpanel/rentalitemtypes\"\n                },\n                {\n                    name: \"Trailer Types\",\n                    link: \"/adminpanel/trailertypes\"\n                },\n                {\n                    name: \"Upsell Items Types\",\n                    link: \"/adminpanel/upsellItemtypes\"\n                }\n            ]\n        },\n        {\n            id: \"employee-menu\",\n            name: \"Admin Employee\",\n\n            submenu: [\n                {\n                    name: \"Invite Employee\",\n                    link: \"/adminpanel/employee/invite\"\n                },\n                {\n                    name: \"Employee List\",\n                    link: \"/adminpanel/employee/list\"\n                }\n            ]\n        }\n    ];\n    \n    const rightMenuList = [\n        {\n            id: \"profile-menu\",\n            name: \"Profile\",\n\n            submenu: [\n                /* {\n                    name: \"My Profile\",\n                    link: \"/adminpanel/profile\"\n                }, */\n                {\n                    name: \"Edit Profile\",\n                    link: \"/adminpanel/employee/edit\"\n                },\n                {\n                    name: \"Logout\",\n                    link: \"/adminpanel/logout\"\n                }\n            ]\n        }\n    ];\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        console.log(\"event.currentTarget\", event.currentTarget, event.currentTarget.attributes);\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    function isOpen(menuId) {\n        if(anchorEl === null) {\n            return false;\n        }\n        const anchorElemMenuId = anchorEl.attributes.getNamedItem('aria-controls').value;\n        return (anchorElemMenuId === menuId);\n    }\n\n    \n\n    return (\n        <div className={classes.root}>\n\n            <AppBar position=\"static\" className={classes.appBar}>\n\n                <Toolbar variant=\"dense\">\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Trailer 2 You\n                    </Typography>\n\n                    { showLoggedInMenu &&\n\n                        \n                        <div>\n                            {\n                                leftMenuList.map( menu => {\n                                    return (\n                                        <Fragment key={menu.name}>\n                                            <Button\n                                                className={classes.navButton}\n                                                aria-controls={menu.id}\n                                                aria-haspopup=\"true\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleClick}\n                                            >\n                                                {menu.name}\n                                            </Button>\n\n                                            <StyledMenu\n                                                id={menu.id}\n                                                anchorEl={anchorEl}\n                                                keepMounted\n                                                open={isOpen(menu.id)}\n                                                onClose={handleClose}\n                                            >\n                                                {\n                                                    menu.submenu.map( subMenu => {\n                                                        return (\n                                                            <StyledMenuItem \n                                                                key={subMenu.name}\n                                                                onClick={(e) => {\n                                                                    history.push(`${subMenu.link}`);\n                                                                    handleClose();\n                                                                }}> \n                                                                <ListItemText primary={subMenu.name} />\n                                                            </StyledMenuItem>\n                                                        )\n                                                    })\n                                                }\n                                                \n                                            </StyledMenu>\n                                        </Fragment>\n                                    )\n                                })\n                            }\n                        </div>\n                    \n                    }\n\n                    { showLoggedInMenu && \n                        <div className={classes.navButtonGroupRight}>        \n\n                            {\n                                rightMenuList.map( menu => {\n                                    return (\n                                        <Fragment key={menu.name}>\n                                            <Button\n                                                className={classes.navButton}\n                                                aria-controls={menu.id}\n                                                aria-haspopup=\"true\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={handleClick}\n                                            >\n                                                {menu.name}\n                                            </Button>\n\n                                            <StyledMenu\n                                                id={menu.id}\n                                                anchorEl={anchorEl}\n                                                keepMounted\n                                                open={isOpen(menu.id)}\n                                                onClose={handleClose}\n                                            >\n                                                {\n                                                    menu.submenu.map( subMenu => {\n                                                        return (\n                                                            <StyledMenuItem \n                                                                key={subMenu.name}\n                                                                onClick={(e) => {\n                                                                    history.push(`${subMenu.link}`);\n                                                                    handleClose();\n                                                                }}>\n                                                                <ListItemText primary={subMenu.name} />\n                                                            </StyledMenuItem>\n                                                        )\n                                                    })\n                                                }\n                                                \n                                            </StyledMenu>\n                                        </Fragment>\n                                    )\n                                })\n                            }\n\n                        </div>\n                    }\n\n                </Toolbar>\n\n            </AppBar>\n\n        </div>\n    );\n} \n\nexport default AppHeader;","import React from 'react';\n\nimport { \n    AppBar, \n    Toolbar, \n    IconButton, \n    Typography, \n    Button\n} from '@material-ui/core';\n\nimport { \n    makeStyles \n} from '@material-ui/core/styles';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n    },\n    footer: {\n        position: 'fixed',\n        left: '0',\n        bottom: '0',\n        width: '100%'\n    },\n    footerText: {\n        color: '#FFFFFF'\n    },\n    footerLink: {\n        margin: theme.spacing(2),\n        color: '#FFFFFF'\n    }\n}));\n\nfunction AppFooter() {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footer}>\n            <AppBar position=\"static\">\n                <Typography variant=\"body2\" align=\"center\" className={classes.footerText}>\n                    {'Copyright © '}\n                    <a color=\"inherit\" href=\"https://trailer2you.com/\" className={classes.footerText}>\n                        Trailer2You\n                    </a>{' '}\n                    {new Date().getFullYear()}\n                </Typography>\n            </AppBar>\n        </footer>\n    );\n} \n\nexport default AppFooter;","import React from 'react';\nimport '../../App.css';\n\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n\n      Home\n        \n    </div>\n  );\n}\n\nexport default Home;\n","export const common = {\n    country: \"India\",\n    states: [\n        \"New South Wales\",\n        \"Victoria\",\n        \"Tasmania\",\n        \"Queensland\",\n        \"South Australia\",\n        \"Western Australia\"\n    ],\n    businessType: [\"individual\", \"company\"],\n    \n    days: [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"],\n    hours: \"1000-1900\",\n    hoursStart: \"10:00\",\n    hoursEnd: \"19:00\",\n\n    mcc: \"7513\",\n    productDescription: \"Trailer Rental\",\n    licenseeEmployeeType: [\"employee\", \"owner\", \"representative\", \"director\", \"executive\"],\n    // apiUrl: 'http://localhost:5000'\n    apiUrl: 'http://trailer2you.herokuapp.com'\n};","import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\n\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst apiUrl = common.apiUrl;\nconst fetchCustomersAPI = `${apiUrl}/admin/customers`;\nconst saveCustomerLicenseApproval = `${apiUrl}/admin/customer/verify/driverLicense`;\nconst generateOTPAPI = `${apiUrl}/admin/customer/otp/resend`;\nconst verifyOTPAPI = `${apiUrl}/admin/customer/otp/verify`;\nconst resendInviteAPI = `${apiUrl}/admin/customer/email/verify/resend`;\nconst forgotPasswordAPI = `${apiUrl}/admin/customer/password/forgot`;\nconst resetPasswordAPI = `${apiUrl}/admin/customer/password/reset`;\n\n\nfunction TableActionButton(props) {\n    console.log(\"TableActionButton\", props);\n    return (\n        <span>{props.title}</span>\n    );\n}\n\nexport default function CustomersList(props) {\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.CUSTOMERS.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n\n    //-------------------------------------------------------------------------\n    \n    const otpVerifyDetailsStart = {\n        customerId: \"\",\n        mobile: \"\",\n        country: common.country\n    };\n\n    const [dialogState, setDialogState] = useState(false);\n    const [otp, setOTP] = useState(\"\");\n    const [otpVerifySucess, setOTPVerifySucess] = useState(\"\");\n    const [otpVerifyDetails, setOTPVerifyDetails] = useState(otpVerifyDetailsStart);\n\n    function handleClickOpen() {\n        setDialogState(true);\n    }\n    \n    function handleClose() {\n        setDialogState(false);\n    }\n\n    function handleVerifyOTP() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                customerId: otpVerifyDetails.customerId, \n                mobile: otpVerifyDetails.mobile, \n                // mobile: \"919664815262\",\n                country: otpVerifyDetails.country,\n                otp: otp \n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(verifyOTPAPI, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${verifyOTPAPI} Response`, res);\n            // rowData.driverLicense.verified = true;\n            // rowData.driverLicense.accepted = true;\n            if(tableRef.current) {\n                tableRef.current.onQueryChange();\n            }\n\n            setOTPVerifySucess(\"OTP Verified Successfully\")\n            setOTPVerifyDetails(otpVerifyDetailsStart);\n            setTimeout(() => {\n                handleClose();\n            }, 5000);\n            \n        })\n        .catch( error => {\n            console.log(`${verifyOTPAPI} Error`, error);\n        });\n    }\n\n    //-------------------------------------------------------------------------\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={`t2y-list t2y-customerlist ${classes.root}`}>\n\n            <Dialog open={dialogState} \n                    onClose={handleClose} \n                    aria-labelledby=\"form-dialog-title\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}>\n                <DialogTitle id=\"form-dialog-title\">OTP Verification</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please Enter OTP\n                    </DialogContentText>\n                    { \n                        (otpVerifySucess !== \"\") &&\n                        <DialogContentText>{otpVerifySucess}</DialogContentText>\n                    }\n                    <TextField\n                        autoFocus\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"OTP\"\n                        type=\"otp\"\n                        value={otp}\n                        onChange={ (e) => { \n                            setOTP( e.target.value );\n                        } }\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleVerifyOTP} color=\"primary\">\n                        Verify\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <MaterialTable \n                title=\"Customers\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'userRef', \n                        render: rowData => {\n                            return rowData.userRef\n                        } \n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return rowData.name\n                        } \n                    },\n                    { \n                        title: 'Email', \n                        field: 'email', \n                        render: rowData => {\n                            return rowData.email\n                        } \n                    },\n                    { \n                        title: 'Email Verified', \n                        field: 'isEmailVerified', \n                        render: rowData => {\n                            return rowData.isEmailVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Mobile', \n                        field: 'mobile', \n                        render: rowData => {\n                            return rowData.mobile\n                        } \n                    },\n                    { \n                        title: 'Mobile Verified', \n                        field: 'isMobileVerified', \n                        render: rowData => {\n                            return rowData.isMobileVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Photo', \n                        field: 'photo', \n                        render: rowData => {\n                            if(rowData.photo) {\n                                return (\n                                    <div>\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={rowData.photo}>Download</a>\n                                    </div>\n                                )\n                            } else {\n                                return(<div>Not Available</div>)\n                            }\n                        }\n                    },\n                    { \n                        title: 'Driver License', \n                        field: 'driverLicense', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    { \n                                        rowData.driverLicense ?\n\n                                        (\n                                            <div>\n                                                {\n                                                    rowData.driverLicense.card ? \n                                                    (<div><b>Card</b> : {rowData.driverLicense.card}</div>) :\n                                                    (<div><b>Card</b> : Not Available</div>)\n                                                }\n                                                {\n                                                    rowData.driverLicense.expiry ? \n                                                    (<div><b>Expiry</b> : {rowData.driverLicense.expiry}</div>) :\n                                                    (<div><b>Expiry</b> : Not Available</div>)\n                                                }\n                                                {\n                                                    rowData.driverLicense.state ? \n                                                    (<div><b>State</b> : {rowData.driverLicense.state}</div>) :\n                                                    (<div><b>State</b> : Not Available</div>)\n                                                }\n                                                {\n                                                    rowData.driverLicense.scan ? \n                                                    (\n                                                        <div><b>Scan</b> : \n                                                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={rowData.driverLicense.scan}>Download</a>\n                                                        </div>\n                                                    ) : \n                                                    (<div><b>Scan</b> : Not Available</div>)\n                                                }\n                                            </div>\n                                        )\n                                        :\n\n                                        (\n                                            <div>Data Not available</div>\n                                        )\n                                    }\n                                </div>\n                            );\n                        } \n                    },\n                    { \n                        title: 'License Verified', \n                        field: 'driverLicenseVerified', \n                        type: 'boolean',\n                        render: rowData => {\n                            return rowData.driverLicense.verified ? \"Yes\" : \"No\";\n                        } \n                    },\n                    { \n                        title: 'License Accepted', \n                        field: 'driverLicenseAccepted', \n                        render: rowData => {\n                            return rowData.driverLicense.accepted ? \"Yes\" : \"No\";\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        return new Promise((resolve, reject) => {\n                            fetch(`${fetchCustomersAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchCustomersAPI} Response`, res);\n                                const customerList = res.customerList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof customerList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...customerList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: customerList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(\"getCustomer Error\", error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Approve Driver License\" />) },\n                            tooltip: \"Approve Driver License\",\n                            disabled: (rowData.driverLicense.scan ? false : true),\n                            onClick: (event, rowData) => {\n                                console.log(\"Approve onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        customerId: rowData._id, \n                                        isAccepted: true \n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveCustomerLicenseApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveCustomerLicenseApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveCustomerLicenseApproval} Error`, error);\n                                });\n                            }\n                        }),\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Reject Driver License\" />) },\n                            tooltip: \"Reject Driver License\",\n                            disabled: (rowData.driverLicense.scan ? false : true),\n                            onClick: (event, rowData) => {\n                                console.log(\"Reject onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        customerId: rowData._id, \n                                        isAccepted: false \n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveCustomerLicenseApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveCustomerLicenseApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = false;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveCustomerLicenseApproval} Error`, error);\n                                });\n                            }\n                        }),\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Resend OTP\" />) },\n                            tooltip: \"Resend OTP\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Resend OTP onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        customerId: rowData._id,\n                                        mobile: rowData.mobile,\n                                        country: rowData.address.country || common.country \n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(generateOTPAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${generateOTPAPI} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n\n                                    setOTPVerifyDetails({ \n                                        customerId: rowData._id,\n                                        mobile: rowData.mobile,\n                                        country: rowData.address.country || common.country \n                                    });\n                                    handleClickOpen();\n                                })\n                                .catch( error => {\n                                    console.log(`${generateOTPAPI} Error`, error);\n                                });\n                            }\n                        }),\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Verify Email\" />) } ,\n                            tooltip: \"Verify Email\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Verify Email\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        customerId: rowData._id,\n                                        email: rowData.email\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(resendInviteAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${resendInviteAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${resendInviteAPI} Error`, error);\n                                });\n                            }\n                        }),\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Send Reset Password Link\" />) },\n                            tooltip: \"Send Reset Password Link\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Resend OTP onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        customerId: rowData._id,\n                                        email: rowData.email,\n                                        platform: \"web\" \n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(forgotPasswordAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${forgotPasswordAPI} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${forgotPasswordAPI} Error`, error);\n                                });\n                            }\n                        }),\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Customer\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/customer/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add Customer\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Add onClick\", event, rowData);\n                                history.push(\"/adminpanel/customer/add\");\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\nimport moment from 'moment';\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControl,\n    FormHelperText,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel,\n    Select,\n    MenuItem\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nconst apiUrl = common.apiUrl;\nconst getCustomer = `${apiUrl}/admin/customer`;\nconst addCustomer = `${apiUrl}/admin/customer`; // POST\nconst updateCustomer = `${apiUrl}/admin/customer`; // PUT\n\nexport default function CustomerEdit(props) {\n    console.log(\"CustomerEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { customerId } = useParams();\n    console.log(\"customerId\", customerId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!customerId && !userData.acl.CUSTOMERS.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    if(customerId && !userData.acl.CUSTOMERS.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    const customerStart = {\n        name: \"\",\n        address: {\n            text: \"\",\n            pincode: \"\",\n            coordinates: \"\",\n            country: common.country\n        },\n        dob: moment().subtract(18, \"years\").format(\"YYYY-MM-DD\"),\n        driverLicense: {\n            card: \"\",\n            expiry: moment().add(1, \"year\").format(\"YYYY-MM\"),\n            state: common.states[0],\n            scanLink: \"\"\n        },\n        email: \"\",\n        isEmailVerified: false,\n        mobile: \"\",\n        isMobileVerified: false,\n        photoLink: \"\",\n\n        photo: null,\n        driverLicenseScan: null\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [customer, setCustomer] = useState(customerStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        if(customerId) {\n            const requestOptions = {\n                method: 'GET',\n                headers: authHeader(),\n\n            };\n            fetch(`${getCustomer}?id=${customerId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                console.log(\"Customer API Call Response\", res.customerObj);\n                const customerObj = res.customerObj;\n                \n                setCustomer({\n                    name: customerObj.name,\n                    address: {\n                        text: customerObj.address.text,\n                        pincode: customerObj.address.pincode,\n                        coordinates: customerObj.address.coordinates.join(\",\")\n                    },\n                    dob: customerObj.dob,\n                    driverLicense: {\n                        card: customerObj.driverLicense.card,\n                        expiry: customerObj.driverLicense.expiry,\n                        state: customerObj.driverLicense.state,\n                        scanLink: customerObj.driverLicense.scan\n                    },\n                    email: customerObj.email,\n                    isEmailVerified: customerObj.isEmailVerified,\n                    mobile: customerObj.mobile,\n                    isMobileVerified: customerObj.isMobileVerified,\n                    photoLink: customerObj.photo,\n\n                    photo: null,\n                    driverLicenseScan: null\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Customer data\", err);\n            })\n        }\n    }, [loadOnce]);\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        name: \"\",\n        address: {\n            text: \"\",\n            pincode: \"\",\n            coordinates: \"\"\n        },\n        dob: \"\",\n        driverLicense: {\n            card: \"\",\n            expiry: \"\",\n            state: \"\",\n            scan: \"\"\n        },\n        email: \"\",\n        mobile: \"\",\n        photo: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            (formValidErrorMessage.name !== \"\") ||\n            (formValidErrorMessage.address.text !== \"\") ||\n            (formValidErrorMessage.address.pincode !== \"\") ||\n            (formValidErrorMessage.address.coordinates !== \"\") ||\n            (formValidErrorMessage.dob !== \"\") ||\n            (formValidErrorMessage.driverLicense.card !== \"\") ||\n            (formValidErrorMessage.driverLicense.expiry !== \"\") ||\n            (formValidErrorMessage.driverLicense.state !== \"\") ||\n            (formValidErrorMessage.driverLicense.scan !== \"\") ||\n            (formValidErrorMessage.email !== \"\") ||\n            (formValidErrorMessage.mobile !== \"\") ||\n            (formValidErrorMessage.photo !== \"\")\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        let requestOptions = {\n            method: customerId ? \"PUT\" : \"POST\"\n        };\n\n        console.log(\"customer.driverLicense.expiry\", customer.driverLicense.expiry);\n        \n        customer.dob = moment(customer.dob).format(\"YYYY-MM-DD\");\n        customer.driverLicense.expiry = moment(customer.driverLicense.expiry, \"YYYY-MM\").format(\"MM/YY\");\n\n        console.log(\"customer.driverLicense.expiry\", customer.driverLicense.expiry);\n\n        if(customer.photo || customer.driverLicenseScan) {\n            const formData = new FormData();\n\n            formData.append('name', customer.name);\n            formData.append('address', JSON.stringify(customer.address));\n            formData.append('dob', customer.dob);\n            formData.append('driverLicense', JSON.stringify(customer.driverLicense));\n            formData.append('email', customer.email);\n            formData.append('mobile', customer.mobile);\n        \n            if(customer.photo) {\n                formData.append('photo', customer.photo, customer.photo.name);\n            }\n            if(customer.driverLicenseScan) {\n                formData.append('driverLicenseScan', customer.driverLicenseScan, customer.driverLicenseScan.name);\n            }\n\n            // append files\n\n            if(customerId) {\n                formData.append('_id', customerId);\n                formData.append('customerId', customerId);\n            }\n\n            requestOptions.headers = { \n                ...authHeader()\n            };\n            requestOptions.body = formData;\n        } else {\n            const reqObj = {\n                name: customer.name,\n                address: customer.address,\n                dob: customer.dob,\n                driverLicense: customer.driverLicense,\n                email: customer.email,\n                mobile: customer.mobile\n            };\n\n            if(customerId) {\n                reqObj._id = customerId;\n                reqObj.customerId = customerId;\n            }\n\n            requestOptions.headers = { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            };\n            requestOptions.body = JSON.stringify(reqObj);\n        }\n\n        console.log(\"requestOptions\", requestOptions);\n\n        const saveCustomerReqURL = customerId ? updateCustomer : addCustomer;\n    \n        fetch(saveCustomerReqURL, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveCustomerReqURL} Response`, res);\n\n            const customerObj = res.customerObj;\n\n            setCustomer({\n                name: customerObj.name,\n                address: {\n                    text: customerObj.address.text,\n                    pincode: customerObj.address.pincode,\n                    coordinates: customerObj.address.coordinates.join(\",\")\n                },\n                dob: customerObj.dob,\n                driverLicense: {\n                    card: customerObj.driverLicense.card,\n                    expiry: customerObj.driverLicense.expiry,\n                    state: customerObj.driverLicense.state,\n                    scanLink: customerObj.driverLicense.scan\n                },\n                email: customerObj.email,\n                isEmailVerified: customerObj.isEmailVerified,\n                mobile: customerObj.mobile,\n                isMobileVerified: customerObj.isMobileVerified,\n                photoLink: customerObj.photo,\n\n                photo: null,\n                driverLicenseScan: null\n            });\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Customer data\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveCustomerReqURL} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Customer data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    { customerId ? \"Edit Customer\" : \"Add Customer\" }\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n            \n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={(formValidErrorMessage.name !== \"\")}\n                        helperText={formValidErrorMessage.name}\n                        value={customer.name}\n                        onChange={ (e) => { \n                            setCustomer({\n                                ...customer,\n                                name: e.target.value\n                            });\n                        } }\n                    />\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Address\n                        </Typography>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"address_text\"\n                            label=\"Address Line\"\n                            name=\"address_text\"\n                            autoComplete=\"address_text\"\n                            autoFocus\n                            error={(formValidErrorMessage.address.text !== \"\")}\n                            helperText={formValidErrorMessage.address.text}\n                            value={customer.address.text}\n                            onChange={ (e) => { \n                                setCustomer({\n                                    ...customer,\n                                    address: {\n                                        ...customer.address,\n                                        text: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"address_pincode\"\n                            label=\"Pincode\"\n                            name=\"address_pincode\"\n                            autoComplete=\"address_pincode\"\n                            autoFocus\n                            error={(formValidErrorMessage.address.pincode !== \"\")}\n                            helperText={formValidErrorMessage.address.pincode}\n                            value={customer.address.pincode}\n                            onChange={ (e) => { \n                                setCustomer({\n                                    ...customer,\n                                    address: {\n                                        ...customer.address,\n                                        pincode: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"address_coordinates\"\n                            label=\"Coordinates (Latitude,Longitude format)\"\n                            name=\"address_coordinates\"\n                            autoComplete=\"address_coordinates\"\n                            autoFocus\n                            error={(formValidErrorMessage.address.coordinates !== \"\")}\n                            helperText={formValidErrorMessage.address.coordinates}\n                            value={customer.address.coordinates}\n                            onChange={ (e) => { \n                                setCustomer({\n                                    ...customer,\n                                    address: {\n                                        ...customer.address,\n                                        coordinates: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                    </Box>\n\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        aria-label=\"dob\" \n                        required\n                        fullWidth\n                        type=\"date\"\n                        id=\"dob\"\n                        label=\"dob\"\n                        name=\"dob\"\n                        autoComplete=\"dob\"\n                        autoFocus\n                        error={(formValidErrorMessage.dob !== \"\")}\n                        helperText={formValidErrorMessage.dob}\n                        value={customer.dob}\n                        onChange={ (e) => { \n                            setCustomer({\n                                ...customer,\n                                dob: e.target.value\n                            });\n                        } } />\n                    \n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Driver License\n                        </Typography>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"driverLicense_card\"\n                            label=\"Driver License Number\"\n                            name=\"driverLicense_card\"\n                            autoComplete=\"driverLicense_card\"\n                            autoFocus\n                            error={(formValidErrorMessage.driverLicense.card !== \"\")}\n                            helperText={formValidErrorMessage.driverLicense.card}\n                            value={customer.driverLicense.card}\n                            onChange={ (e) => { \n                                setCustomer({\n                                    ...customer,\n                                    driverLicense: {\n                                        ...customer.driverLicense,\n                                        card: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            type=\"month\"\n                            id=\"driverLicense_expiry\"\n                            label=\"Expiry Date\"\n                            name=\"driverLicense_expiry\"\n                            autoComplete=\"driverLicense_expiry\"\n                            autoFocus\n                            error={(formValidErrorMessage.driverLicense.expiry !== \"\")}\n                            helperText={formValidErrorMessage.driverLicense.expiry}\n                            value={customer.driverLicense.expiry}\n                            onChange={ (e) => { \n                                setCustomer({\n                                    ...customer,\n                                    driverLicense: {\n                                        ...customer.driverLicense,\n                                        expiry: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        {\n                            common.states && \n                            <FormControl required>\n                                <InputLabel id=\"state-label\">State</InputLabel>\n                                <Select\n                                    labelId=\"state-label\"\n                                    id=\"stateSelect\"\n                                    value={customer.driverLicense.state}\n                                    onChange={ (e) => { \n                                        setCustomer({\n                                            ...customer,\n                                            driverLicense: {\n                                                ...customer.driverLicense,\n                                                state: e.target.value\n                                            }\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        common.states.map((state, stateIndex) => {\n                                            console.log(\"state\", state, stateIndex);\n                                            return (\n                                                <MenuItem key={`state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                                <FormHelperText>Required</FormHelperText>\n                            </FormControl>\n                        }\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Scan ( Scan of Front and Back side of Driver License in a single File )\n                            </Typography>\n\n                            {\n                                customer.driverLicense.scanLink && !customer.driverLicenseScan && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={customer.driverLicense.scanLink}>Scan</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png\"\n                                id=\"raised-button-file\"\n                                multiple\n                                type=\"file\"\n                                name=\"scan\"\n                                onChange={ (e) => {\n                                    console.log(\"scan\", e.target.files);\n                                    setCustomer({\n                                        ...customer,\n                                        driverLicenseScan: e.target.files[0]\n                                    });\n                                }}\n                                />\n\n                            {/* <label htmlFor=\"raised-button-file\">\n                                <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                    Upload\n                                </Button>\n                            </label>  */}\n                        </Box>\n\n                    </Box>\n\n                    <FormGroup className=\"SectionContainer\">\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            error={(formValidErrorMessage.email !== \"\")}\n                            helperText={formValidErrorMessage.email}\n                            value={customer.email}\n                            onChange={ (e) => { \n                                setCustomer({\n                                    ...customer,\n                                    email: e.target.value\n                                });\n                            } }\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    disabled={true}\n                                    checked={customer.isEmailVerified} \n                                    name=\"isEmailVerified\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isEmailVerified\", e);\n                                        setCustomer({\n                                            ...customer,\n                                            isEmailVerified: !customer.isEmailVerified\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Email Verified?\"\n                        />\n\n                    </FormGroup>\n\n                    <FormGroup className=\"SectionContainer\">\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"mobile\"\n                            label=\"Mobile\"\n                            name=\"mobile\"\n                            autoComplete=\"mobile\"\n                            autoFocus\n                            error={(formValidErrorMessage.mobile !== \"\")}\n                            helperText={formValidErrorMessage.mobile}\n                            value={customer.mobile}\n                            onChange={ (e) => { \n                                setCustomer({\n                                    ...customer,\n                                    mobile: e.target.value\n                                });\n                            } }\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    disabled={true}\n                                    checked={customer.isMobileVerified} \n                                    name=\"isMobileVerified\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isMobileVerified\", e);\n                                        setCustomer({\n                                            ...customer,\n                                            isMobileVerified: !customer.isMobileVerified\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Mobile Verified?\"\n                        />\n\n                    </FormGroup>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Photo\n                        </Typography>\n\n                        {\n                            customer.photoLink && !customer.photo && \n                            (\n                                <Box className=\"SectionContainer\">\n                                    <a href={customer.photoLink}>Photo</a>\n                                </Box>\n                            )\n                        }\n\n                        <input\n                            accept=\"image/jpeg, image/jpg, image/png\"\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            name=\"photo\"\n                            onChange={ (e) => {\n                                console.log(\"photo\", e.target.files);\n                                setCustomer({\n                                    ...customer,\n                                    photo: e.target.files[0]\n                                });\n                            }}\n                            />\n\n                        {/* <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload\n                            </Button>\n                        </label>  */}\n                    </Box>\n\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        { customerId ?  \"Update\" : \"Save\"}\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport {\n    useLocation\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\nconst apiUrl = common.apiUrl;\nconst resetPasswordUrl = `${apiUrl}/admin/customer/password/reset`;\n\nexport default function CustomerResetPassword(props) {\n    console.log(\"CustomerResetPassword\", props);\n\n    const classes = useStyles();\n\n    const query = new URLSearchParams(useLocation().search);\n    const token = query.get(\"token\");\n    console.log(\"Params\", token);\n\n    const [password, setPassword] = useState('');\n    const [repassword, setRePassword] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [formValidError, setFormValidError] = useState({\n        password: false,\n        repassword: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        password: \"\",\n        repassword: \"\"\n    });\n\n    function validatePasswords(password, repassword) {\n        const messagePasswordMatch = \"Passwords don't match\";\n        const messagePasswordInvalidFormat = \"Password should be 8 or more characters long. Password should contain one Uppercase Alphabetical Character, one Lowercase Alphabetical Character, one Numeric Character and one Special Character.\";\n\n        const doPasswordsMatch = (password === repassword);\n        const isPasswordsValid = strongRegex.test(password);\n        const isRePasswordValid = strongRegex.test(repassword);\n\n        console.log(\"doPasswordsMatch\", doPasswordsMatch, \"isPasswordsValid\", isPasswordsValid, \"isRePasswordValid\", isRePasswordValid);\n\n        let errorPassword = \"\";\n        if(!doPasswordsMatch) {\n            errorPassword += `${messagePasswordMatch} `;\n        } \n        if(!isPasswordsValid) {\n            errorPassword += `${messagePasswordInvalidFormat} `;\n        }\n\n        let copyFormValidError = {\n            ...formValidError\n        };\n        let copyFormValidErrorMessage = { \n            ...formValidErrorMessage\n        };\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: errorPassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n\n        \n        let errorRePassword = \"\";\n        if(!doPasswordsMatch) {\n            errorRePassword += `${messagePasswordMatch} `;\n        } \n        if(!isRePasswordValid) {\n            errorRePassword += `${messagePasswordInvalidFormat} `;\n        }\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: errorRePassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.password\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                token: token,\n                password: password\n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(resetPasswordUrl, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${resetPasswordUrl} Response`, res);\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Password\");\n        \n            setPassword(\"\");\n            setRePassword(\"\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${resetPasswordUrl} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Password\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Reset Password\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        error={formValidError.password}\n                        helperText={formValidErrorMessage.password}\n                        onChange={ (e) => { \n                            setPassword(e.target.value);\n                            validatePasswords(e.target.value, repassword);\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"repassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        id=\"repassword\"\n                        autoComplete=\"confirm-password\"\n                        error={formValidError.repassword}\n                        helperText={formValidErrorMessage.repassword}\n                        value={repassword}\n                        onChange={ (e) => { \n                            setRePassword(e.target.value);\n                            validatePasswords(password, e.target.value);\n                        } }\n                    />\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Save Password\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useState } from 'react';\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { \n    makeStyles \n} from '@material-ui/core/styles';\n\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nconst apiUrl = common.apiUrl;\nconst signInUrl = `${apiUrl}/admin/employee/signin`;\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    }\n}));\n\n\n\nexport default function EmployeeSignIn() {\n    const classes = useStyles();\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    /* async function handleSubmit(e) {\n        e.preventDefault();\n\n        setSubmitted(true);\n    \n        if (email && password) {\n            await props.login(email, password);\n            console.log(\"Logged In\", history);\n            // history.push(\"/adminpanel/\");\n        }\n    } */\n\n    function onSignInSubmit(e) {\n        e.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ email, password })\n        };\n        \n        // console.log(\"config\", config);\n\n        fetch(signInUrl, requestOptions)\n        .then( res => res.json() )\n        .then(res => {\n            console.log(res);\n            // store user details and jwt token in local storage to keep user logged in between page refreshes\n            localStorage.setItem('user', JSON.stringify(res.employeeObj));\n            localStorage.setItem('token', JSON.stringify(res.token));\n            localStorage.setItem('expiry', new Date().getTime() + (8 * 60 * 60 * 1000));\n\n            localStorage.setItem('aclSettingsAdmin', JSON.stringify(res.aclSettingsAdmin));\n            localStorage.setItem('aclSettingsLicensee', JSON.stringify(res.aclSettingsLicensee));\n\n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully Signed in\");\n\n            history.push(\"/adminpanel/\");\n        })\n        .catch( err => {\n            console.log(\"SignIn Error\", err);\n            setErrorMessage(\"Invalid Credentials\");\n            setSuccessMessage(\"\");\n        });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                {/* <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar> */}\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign In\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={ (e) => { setEmail(e.target.value) } }\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={ (e) => { setPassword(e.target.value) } }\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={onSignInSubmit}\n                    >\n                        Sign In\n                    </Button>\n\n                </form>\n\n            </div>\n        \n        </Container>\n    );\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nconst apiUrl = common.apiUrl;\nconst employeeInviteUrl = `${apiUrl}/admin/employee/invite`;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t\twidth: '100%',\n\t},\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\n\n\nexport default function InviteEmployee(props) {\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let aclSettingsAdmin = localStorage.setItem('aclSettingsAdmin');\n    aclSettingsAdmin = JSON.parse(aclSettingsAdmin);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.ADMINEMPLOYEE.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    \n    let token = localStorage.getItem('token');\n\n    const [email, setEmail] = useState('');\n    const [aclSettings, setAclSettings] = useState({});\n    const [acl, setACL] = useState({});\n    const [submitted, setSubmitted] = useState(false);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState(''); \n\n    console.log(\"aclSettingsAdmin\", aclSettingsAdmin);\n\n    useEffect(() => {\n        setAclSettings({\n            ...aclSettingsAdmin\n        });\n\n        const privilegeTypes = Object.keys(aclSettingsAdmin);\n        const initACL = {};\n        privilegeTypes.forEach(privilegeType => {\n            initACL[privilegeType] = [];\n        });\n        setACL({ ...initACL });\n    }, []);\n\n    function handleACLChange(aclType, setting, checked) {\n        console.log(\"handleACLChange\", setting, checked);\n    \n        console.log(\"acList\", acl[aclType].length);\n        const isACPPresent = acl[aclType].includes(setting);\n        let newAcl = [];\n    \n        console.log(\"isACPPresent\", isACPPresent)\n    \n        if(checked && !isACPPresent) {\n            newAcl = {\n                ...acl\n            };\n            newAcl[aclType] = [\n                ...newAcl[aclType],\n                setting\n            ];\n            setACL(newAcl);\n        }\n        if(!checked && isACPPresent) {\n            const newAclType = acl[aclType].filter((acl) => {\n                return acl !== setting\n            });\n    \n            newAcl = {\n                ...acl\n            };\n            newAcl[aclType] = newAclType;\n            setACL(newAcl);\n        }\n        console.log(\"newAcl\", newAcl[aclType].length);\n    }\n\n    function onEmployeeInviteSubmit(e) {\n        e.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json' \n            },\n            body: JSON.stringify({ email, acl })\n        };\n        \n        // console.log(\"config\", config);\n\n        fetch(employeeInviteUrl, requestOptions)\n        .then( res => res.json() )\n        .then(res => {\n            console.log(res);\n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully invited Employee\");\n\n            history.push(\"/adminpanel/\");\n        })\n        .catch( err => {\n            console.log(\"Employee Invite Error\", err);\n            setErrorMessage(\"Error occured while inviting Employee\");\n            setSuccessMessage(\"\");\n        });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                {/* <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar> */}\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Invite Employee\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={ (e) => { setEmail(e.target.value) } }\n                    />\n\n                    {\n                        <FormGroup className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Employee Privileges\n                            </Typography>\n\n                            {\n                                aclSettings && Object.keys(aclSettings).map( aclType => {\n\n                                    console.log(\"aclType\", aclType, acl);\n\n                                    return (\n                                        <Fragment key={aclType}>\n                                            <Typography variant=\"subtitle2\">\n                                                { aclType.toUpperCase() }\n                                            </Typography>\n\n                                            <Fragment>\n                                                {\n                                                    acl && acl[aclType] && aclSettings[aclType] && aclSettings[aclType].map((setting, settingIndex) => {\n                                                        console.log(aclType, \"setting\", setting);\n                                                        return (\n                                                            <FormControlLabel key={settingIndex}\n                                                                control={\n                                                                    <Checkbox \n                                                                        checked={acl[aclType].includes(setting)} \n                                                                        name={setting} \n                                                                        onChange={(e) => { \n                                                                            console.log(\"onChange\", e);\n                                                                            handleACLChange(aclType, setting, e.target.checked);\n                                                                        }}  />\n                                                                }\n                                                                label={setting}\n                                                            />\n                                                        );\n                                                    })\n                                                }\n                                            </Fragment>\n                                        </Fragment>\n                                    );\n                                })\n                            }\n                        </FormGroup>\n                    }\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={onEmployeeInviteSubmit}\n                    >\n                        Invite Employee\n                    </Button>\n\n                </form>\n\n            </div>\n        \n        </Container>\n    );\n}\n\n/* function mapState(state) {\n    // const { loggingIn } = state.authentication;\n    // return { loggingIn };\n    return {};\n}\n\nconst actionCreators = {\n    inviteEmployee: userActions.inviteEmployee\n};\n\nconst connectedInviteEmployeePage = connect(mapState, actionCreators)(InviteEmployee);\nexport { connectedInviteEmployeePage as EmployeeInvite }; */","import React, { useState, useEffect } from 'react';\nimport {\n    useLocation,\n    useHistory\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst saveEmployee = `${apiUrl}/admin/employee/invite/accept`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\n\n\nexport default function EmployeeInviteAccept(props) {\n    console.log(\"EmployeeInviteAccept\", props);\n\n    const classes = useStyles();\n\n    const query = new URLSearchParams(useLocation().search);\n    const token = query.get(\"token\");\n    console.log(\"Params\", token);\n\n    let history = useHistory();\n    console.log(\"history\", history)\n\n    \n    const [mobile, setMobile] = useState('');\n    const [password, setPassword] = useState('');\n    const [repassword, setRePassword] = useState('');\n    const [name, setName] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [formValidError, setFormValidError] = useState({\n        mobile: false,\n        name: false,\n        password: false,\n        repassword: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        mobile: \"\",\n        name: \"\",\n        password: \"\",\n        repassword: \"\"\n    });\n\n    function validateMobile() {\n\n    }\n\n    function validateName() {\n\n    }\n\n    function validatePasswords(password, repassword) {\n        const messagePasswordMatch = \"Passwords don't match\";\n        const messagePasswordInvalidFormat = \"Password should be 8 or more characters long. Password should contain one Uppercase Alphabetical Character, one Lowercase Alphabetical Character, one Numeric Character and one Special Character.\";\n\n        const doPasswordsMatch = (password === repassword);\n        const isPasswordsValid = strongRegex.test(password);\n        const isRePasswordValid = strongRegex.test(repassword);\n\n        console.log(\"doPasswordsMatch\", doPasswordsMatch, \"isPasswordsValid\", isPasswordsValid, \"isRePasswordValid\", isRePasswordValid);\n\n        let errorPassword = \"\";\n        if(!doPasswordsMatch) {\n            errorPassword += `${messagePasswordMatch} `;\n        } \n        if(!isPasswordsValid) {\n            errorPassword += `${messagePasswordInvalidFormat} `;\n        }\n\n        let copyFormValidError = {\n            ...formValidError\n        };\n        let copyFormValidErrorMessage = { \n            ...formValidErrorMessage\n        };\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: errorPassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n\n        \n        let errorRePassword = \"\";\n        if(!doPasswordsMatch) {\n            errorRePassword += `${messagePasswordMatch} `;\n        } \n        if(!isRePasswordValid) {\n            errorRePassword += `${messagePasswordInvalidFormat} `;\n        }\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: errorRePassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.mobile || \n            formValidError.name || \n            formValidError.password\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                token: token,\n                mobile: mobile,\n                password: password,\n                name: name\n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveEmployee, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveEmployee} Response`, res);\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Employee data\");\n\n            setMobile(\"\");\n            setName(\"\");\n            setPassword(\"\");\n            setRePassword(\"\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n                history.push(\"/adminpanel/\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveEmployee} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Employee data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Accept Employee Invite\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"mobile\"\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        autoComplete=\"mobile\"\n                        autoFocus\n                        error={formValidError.mobile}\n                        helperText={formValidErrorMessage.mobile}\n                        value={mobile}\n                        onChange={ (e) => { \n                            setMobile(e.target.value);\n                            validateMobile();\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={name}\n                        onChange={ (e) => { \n                            setName(e.target.value);\n                            validateName();\n                        } }\n                    />\n                \n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        error={formValidError.password}\n                        helperText={formValidErrorMessage.password}\n                        onChange={ (e) => { \n                            setPassword(e.target.value);\n                            validatePasswords(e.target.value, repassword);\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"repassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        id=\"repassword\"\n                        autoComplete=\"confirm-password\"\n                        error={formValidError.repassword}\n                        helperText={formValidErrorMessage.repassword}\n                        value={repassword}\n                        onChange={ (e) => { \n                            setRePassword(e.target.value);\n                            validatePasswords(password, e.target.value);\n                        } }\n                    />\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Accept\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst getAcl = `${apiUrl}/admin/employee/acl`;\nconst getEmployee = `${apiUrl}/admin/employee/profile`;\nconst updateEmployee = `${apiUrl}/admin/employee/profile`;\nconst updateEmployeeByAdmin = `${apiUrl}/admin/employee/profile/admin`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\nexport default function EmployeeEdit(props) {\n    console.log(\"EmployeeEdit\", props);\n\n    const classes = useStyles();\n\n    let token = localStorage.getItem('token');\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n\n    let aclSettingsAdmin = localStorage.getItem('aclSettingsAdmin');\n    aclSettingsAdmin = JSON.parse(aclSettingsAdmin);\n\n    console.log(\"userData\", userData);\n    console.log(\"token\", token);\n\n    let { employeeId } = useParams();\n    if(!employeeId) {\n        employeeId = userData._id;\n    }\n    console.log(\"employeeId\", employeeId);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(employeeId && !userData.acl.ADMINEMPLOYEE.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    const [aclSettings, setAclSettings] = useState({});\n    let saveEmployee = updateEmployee;\n    // if(userData.isOwner && userData._id !== employeeId) {\n    \n\n    const employeeStart = {\n        mobile: \"\",\n        name: \"\",\n        password: \"\",\n        repassword: \"\",\n        acl: {}\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [employee, setEmployee] = useState(employeeStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n            if(userData.isOwner) {\n                console.log(\"aclSettingsAdmin\", aclSettingsAdmin);\n                setAclSettings({\n                    ...aclSettingsAdmin\n                });\n            }\n\n            const requestOptions = {\n                method: 'GET',\n                headers: authHeader()\n            };\n            fetch(`${getEmployee}?employeeId=${employeeId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                console.log(\"API Response\", res);\n                const employeeObj = res.employeeObj;\n                const password = employeeObj.password;\n\n                console.log(\"aclSettings\", aclSettings);\n                console.log(\"employeeObj.acl\", employeeObj.acl);\n                \n                setEmployee({\n                    ...employee,\n                    mobile: employeeObj.mobile,\n                    name: employeeObj.name,\n                    password: password,\n                    repassword: password,\n                    acl: employeeObj.acl\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching ACL\", err);\n            })\n    }, []);\n \n    const [formValidError, setFormValidError] = useState({\n        mobile: false,\n        name: false,\n        password: false,\n        repassword: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        mobile: \"\",\n        name: \"\",\n        password: \"\",\n        repassword: \"\"\n    });\n\n    function validateMobile() {\n\n    }\n\n    function validateName() {\n\n    }\n\n    function validatePasswords(vpassword, vrepassword) {\n        const messagePasswordMatch = \"Passwords don't match\";\n        const messagePasswordInvalidFormat = \"Password should be 8 or more characters long. Password should contain one Uppercase Alphabetical Character, one Lowercase Alphabetical Character, one Numeric Character and one Special Character.\";\n\n        const doPasswordsMatch = (vpassword === vrepassword);\n        const isPasswordsValid = strongRegex.test(vpassword);\n        const isRePasswordValid = strongRegex.test(vrepassword);\n\n        console.log(\"doPasswordsMatch\", doPasswordsMatch, \"isPasswordsValid\", isPasswordsValid, \"isRePasswordValid\", isRePasswordValid);\n\n        let errorPassword = \"\";\n        if(!doPasswordsMatch) {\n            errorPassword += `${messagePasswordMatch} `;\n        } \n        if(!isPasswordsValid) {\n            errorPassword += `${messagePasswordInvalidFormat} `;\n        }\n\n        let copyFormValidError = {\n            ...formValidError\n        };\n        let copyFormValidErrorMessage = { \n            ...formValidErrorMessage\n        };\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: errorPassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n\n        \n        let errorRePassword = \"\";\n        if(!doPasswordsMatch) {\n            errorRePassword += `${messagePasswordMatch} `;\n        } \n        if(!isRePasswordValid) {\n            errorRePassword += `${messagePasswordInvalidFormat} `;\n        }\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: errorRePassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n    }\n\n    function handleACLChange(aclType, setting, checked) {\n        console.log(\"handleACLChange\", setting, checked);\n\n        console.log(\"acList\", employee.acl[aclType].length);\n        const isACPPresent = employee.acl[aclType].includes(setting);\n        let newAcl = [];\n\n        console.log(\"isACPPresent\", isACPPresent)\n\n        if(checked && !isACPPresent) {\n            newAcl = {\n                ...employee.acl\n            };\n            newAcl[aclType] = [\n                ...newAcl[aclType],\n                setting\n            ];\n            setEmployee({\n                ...employee,\n                acl: newAcl\n            });\n        }\n        if(!checked && isACPPresent) {\n            const newAclType = employee.acl[aclType].filter((acl) => {\n                return acl !== setting\n            });\n\n            newAcl = {\n                ...employee.acl\n            };\n            newAcl[aclType] = newAclType;\n            setEmployee({\n                ...employee,\n                acl: newAcl\n            });\n        }\n        console.log(\"newAcl\", newAcl[aclType].length);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.mobile || \n            formValidError.name || \n            formValidError.password\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        if(userData.isOwner) {\n            saveEmployee = updateEmployeeByAdmin;\n        }\n\n        // const joinedACL = joinACLSettings(employee.acl);\n        const joinedACL = employee.acl;\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                employeeId: employeeId,\n                mobile: employee.mobile,\n                name:  employee.name,\n                acl: joinedACL\n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveEmployee, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveEmployee} Response`, res);\n            \n            localStorage.setItem('user', JSON.stringify(res.employeeObj));\n\n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Employee data\");\n\n            /* setMobile(\"\");\n            setName(\"\");\n            setPassword(\"\");\n            setRePassword(\"\"); */\n            \n            /* setEmployee({\n                ...employee,\n                ...employeeStart\n            }); */\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveEmployee} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Employee data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Edit Employee\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"mobile\"\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        autoComplete=\"mobile\"\n                        autoFocus\n                        error={formValidError.mobile}\n                        helperText={formValidErrorMessage.mobile}\n                        value={employee.mobile}\n                        onChange={ (e) => { \n                            setEmployee({\n                                ...employee,\n                                mobile: e.target.value\n                            });\n                            validateMobile(e.target.value);\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={employee.name}\n                        onChange={ (e) => { \n                            setEmployee({\n                                ...employee,\n                                name: e.target.value\n                            });\n                            validateName(e.target.value);\n                        } }\n                    />\n\n                    {/* <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={employee.password}\n                        error={formValidError.password}\n                        helperText={formValidErrorMessage.password}\n                        onChange={ (e) => { \n                            setEmployee({\n                                ...employee,\n                                password: e.target.value\n                            });\n                            validatePasswords(e.target.value, employee.repassword);\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"repassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        id=\"repassword\"\n                        autoComplete=\"confirm-password\"\n                        error={formValidError.repassword}\n                        helperText={formValidErrorMessage.repassword}\n                        value={employee.repassword}\n                        onChange={ (e) => { \n                            setEmployee({\n                                ...employee,\n                                repassword: e.target.value\n                            });\n                            validatePasswords(employee.password, e.target.value);\n                        } }\n                    /> */}\n\n                    {\n                        <FormGroup className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Employee Privileges\n                            </Typography>\n\n                            {\n                                aclSettings && Object.keys(aclSettings).map( aclType => {\n\n                                    console.log(\"aclType\", aclType, employee.acl);\n\n                                    return (\n                                        <Fragment key={aclType}>\n                                            <Typography variant=\"subtitle2\">\n                                                { aclType.toUpperCase() }\n                                            </Typography>\n\n                                            <Fragment>\n                                                {\n                                                    employee.acl && employee.acl[aclType] && aclSettings[aclType] && aclSettings[aclType].map((setting, settingIndex) => {\n                                                        console.log(aclType, \"setting\", setting);\n                                                        return (\n                                                            <FormControlLabel key={settingIndex}\n                                                                control={\n                                                                    <Checkbox \n                                                                        checked={employee.acl[aclType].includes(setting)} \n                                                                        name={setting} \n                                                                        onChange={(e) => { \n                                                                            console.log(\"onChange\", e);\n                                                                            handleACLChange(aclType, setting, e.target.checked);\n                                                                        }}  />\n                                                                }\n                                                                label={setting}\n                                                                />\n                                                        );\n                                                    })\n                                                }\n                                            </Fragment>\n                                        </Fragment>\n                                    );\n                                })\n                            }\n                        </FormGroup>\n                    }\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Update\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport {\n    useHistory,\n    useLocation\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchEmployeesAPI = `${apiUrl}/admin/employees`;\nconst generateOTPAPI = `${apiUrl}/admin/employee/generateotp`;\nconst verifyOTPAPI = `${apiUrl}/admin/employee/verifyotp`;\nconst resendInviteAPI = `${apiUrl}/admin/employee/resendinvite`;\nconst forgotPasswordAPI = `${apiUrl}/admin/employee/forgotpassword`;\nconst resetPasswordAPI = `${apiUrl}/admin/employee/resetpassword`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction TableActionButton(props) {\n    console.log(\"TableActionButton\", props);\n    return (\n        <span>{props.title}</span>\n    );\n}\n\nfunction EmployeeList(props) {\n    console.log(\"EmployeeList called\");\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.TRAILER.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = useState([]);\n    const [totalCount, setTotalCount] = useState(0);\n\n    //-------------------------------------------------------------------------\n    \n    const [dialogState, setDialogState] = useState(false);\n    const [otp, setOTP] = useState(\"\");\n    const [otpVerifySucess, setOTPVerifySucess] = useState(\"\");\n    const [mobile, setMobile] = useState(\"\");\n\n    function handleClickOpen() {\n        setDialogState(true);\n    }\n    \n    function handleClose() {\n        setDialogState(false);\n    }\n\n    function handleVerifyOTP() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                mobile: mobile, \n                // mobile: \"919664815262\",\n                country: common.country,\n                otp: otp \n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(verifyOTPAPI, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${verifyOTPAPI} Response`, res);\n            // rowData.driverLicense.verified = true;\n            // rowData.driverLicense.accepted = true;\n            if(tableRef.current) {\n                tableRef.current.onQueryChange();\n            }\n\n            setOTPVerifySucess(\"OTP Verified Successfully\")\n            setMobile(\"\");\n            setTimeout(() => {\n                handleClose();\n            }, 5000);\n            \n        })\n        .catch( error => {\n            console.log(`${verifyOTPAPI} Error`, error);\n        });\n    }\n\n    //-------------------------------------------------------------------------\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={`t2y-list t2y-employeelist ${classes.root}`}>\n            <Dialog open={dialogState} \n                    onClose={handleClose} \n                    aria-labelledby=\"form-dialog-title\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}>\n                <DialogTitle id=\"form-dialog-title\">OTP Verification</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please Enter OTP\n                    </DialogContentText>\n                    { \n                        (otpVerifySucess !== \"\") &&\n                        <DialogContentText>{otpVerifySucess}</DialogContentText>\n                    }\n                    <TextField\n                        autoFocus\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"OTP\"\n                        type=\"otp\"\n                        value={otp}\n                        onChange={ (e) => { \n                            setOTP( e.target.value );\n                        } }\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleVerifyOTP} color=\"primary\">\n                        Verify\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <MaterialTable \n                title=\"Employees\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'adminEmployeeRef', \n                        render: rowData => {\n                            return rowData.adminEmployeeRef\n                        } \n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return (rowData.name && rowData.name) ? `${rowData.name}` : rowData.name\n                        } \n                    },\n                    { \n                        title: 'Email', \n                        field: 'email', \n                        render: rowData => {\n                            return rowData.email\n                        } \n                    },\n                    { \n                        title: 'Email Verified', \n                        field: 'isEmailVerified', \n                        render: rowData => {\n                            return rowData.isEmailVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Mobile', \n                        field: 'mobile', \n                        render: rowData => {\n                            return rowData.mobile\n                        } \n                    },\n                    { \n                        title: 'Mobile Verified', \n                        field: 'isMobileVerified', \n                        render: rowData => {\n                            return rowData.isMobileVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Is Owner', \n                        field: 'isOwner', \n                        render: rowData => {\n                            return rowData.isOwner ? \"Yes\": \"No\"\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"Employee MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchEmployeesAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchEmployeesAPI}`, requestOptions)\n                            fetch(`${fetchEmployeesAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchEmployeesAPI} Response`, res);\n                                const employeeList = res.employeeList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof employeeList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...employeeList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: employeeList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(\"getEmployees Error\", error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Employee\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/employee/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: () => { return (<TableActionButton title=\"Resend OTP\" />) },\n                            tooltip: \"Resend OTP\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Resend OTP onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        mobile: rowData.mobile, \n                                        // mobile: \"919664815262\",\n                                        country: common.country \n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(generateOTPAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${generateOTPAPI} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n\n                                    setMobile(rowData.mobile);\n                                    handleClickOpen();\n                                })\n                                .catch( error => {\n                                    console.log(`${generateOTPAPI} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: () => { return (<TableActionButton title=\"Verify Email\" />) } ,\n                            tooltip: \"Verify Email\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Verify Email\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        email: rowData.email\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(resendInviteAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${resendInviteAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${resendInviteAPI} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: () => { return (<TableActionButton title=\"Forgot Password\" />) } ,\n                            tooltip: \"Forgot Password\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Forgot Password\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        email: rowData.email\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(forgotPasswordAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${forgotPasswordAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${forgotPasswordAPI} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: () => { return (<TableActionButton title=\"Resend Invite\" />) } ,\n                            tooltip: \"Resend Invite\",\n                            onClick: (event, rowData) => {\n                                if(!rowData.acceptedInvite) {\n                                    console.log(\"Resend Invite\", event, rowData);\n                                    const requestOptions = {\n                                        method: 'POST',\n                                        headers: { \n                                            ...authHeader(),\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify({ \n                                            email: rowData.email\n                                        })\n                                    };\n                                    console.log(\"requestOptions\", requestOptions);\n                                \n                                    fetch(resendInviteAPI, requestOptions)\n                                    .then( res => res.json() )\n                                    .then( res => {\n                                        console.log(`${resendInviteAPI} Response`, res);\n                                        if(tableRef.current) {\n                                            tableRef.current.onQueryChange();\n                                        }\n                                    })\n                                    .catch( error => {\n                                        console.log(`${resendInviteAPI} Error`, error);\n                                    });\n                                } else {\n                                    console.log(\"Resend Invite\", rowData.acceptedInvite);\n                                }\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\n\nexport default EmployeeList;","import React, { useState, useEffect } from 'react';\nimport {\n    useLocation\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\nconst apiUrl = common.apiUrl;\nconst employeeResetPasswordUrl = `${apiUrl}/admin/employee/resetpassword`;\n\nexport default function EmployeeInviteAccept(props) {\n    console.log(\"EmployeeInviteAccept\", props);\n\n    const classes = useStyles();\n\n    const query = new URLSearchParams(useLocation().search);\n    const token = query.get(\"token\");\n    console.log(\"Params\", token);\n\n    const [password, setPassword] = useState('');\n    const [repassword, setRePassword] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [formValidError, setFormValidError] = useState({\n        password: false,\n        repassword: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        password: \"\",\n        repassword: \"\"\n    });\n\n    function validatePasswords(password, repassword) {\n        const messagePasswordMatch = \"Passwords don't match\";\n        const messagePasswordInvalidFormat = \"Password should be 8 or more characters long. Password should contain one Uppercase Alphabetical Character, one Lowercase Alphabetical Character, one Numeric Character and one Special Character.\";\n\n        const doPasswordsMatch = (password === repassword);\n        const isPasswordsValid = strongRegex.test(password);\n        const isRePasswordValid = strongRegex.test(repassword);\n\n        console.log(\"doPasswordsMatch\", doPasswordsMatch, \"isPasswordsValid\", isPasswordsValid, \"isRePasswordValid\", isRePasswordValid);\n\n        let errorPassword = \"\";\n        if(!doPasswordsMatch) {\n            errorPassword += `${messagePasswordMatch} `;\n        } \n        if(!isPasswordsValid) {\n            errorPassword += `${messagePasswordInvalidFormat} `;\n        }\n\n        let copyFormValidError = {\n            ...formValidError\n        };\n        let copyFormValidErrorMessage = { \n            ...formValidErrorMessage\n        };\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: errorPassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n\n        \n        let errorRePassword = \"\";\n        if(!doPasswordsMatch) {\n            errorRePassword += `${messagePasswordMatch} `;\n        } \n        if(!isRePasswordValid) {\n            errorRePassword += `${messagePasswordInvalidFormat} `;\n        }\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: errorRePassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.password\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                token: token,\n                password: password\n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(employeeResetPasswordUrl, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${employeeResetPasswordUrl} Response`, res);\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Password\");\n        \n            setPassword(\"\");\n            setRePassword(\"\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${employeeResetPasswordUrl} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Password\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Reset Password\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        error={formValidError.password}\n                        helperText={formValidErrorMessage.password}\n                        onChange={ (e) => { \n                            setPassword(e.target.value);\n                            validatePasswords(e.target.value, repassword);\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"repassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        id=\"repassword\"\n                        autoComplete=\"confirm-password\"\n                        error={formValidError.repassword}\n                        helperText={formValidErrorMessage.repassword}\n                        value={repassword}\n                        onChange={ (e) => { \n                            setRePassword(e.target.value);\n                            validatePasswords(password, e.target.value);\n                        } }\n                    />\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Save Password\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchFinancialLicenseeAPI = `${apiUrl}/admin/financial/licensee`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction FinancialLicensee(props) {\n    const classes = useStyles();\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Financials per Licensee\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'Licensee Name', \n                        field: 'licenseeName', \n                        render: rowData => {\n                            return rowData.licenseeName\n                        } \n                    },\n                    { \n                        title: 'Total Paid', \n                        field: 'total', \n                        render: rowData => {\n                            return rowData.total ? rowData.total : 0\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchFinancialLicenseeAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchFinancialLicenseeAPI}`, requestOptions)\n                            fetch(`${fetchFinancialLicenseeAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchFinancialLicenseeAPI} Response`, res);\n                                const totalByLicenseeList = res.financialsObj.totalByLicenseeList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof totalByLicenseeList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...totalByLicenseeList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: totalByLicenseeList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchFinancialLicenseeAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n            />\n        </div>\n    )\n}\n\nexport default FinancialLicensee;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchFinancialTrailerAPI = `${apiUrl}/admin/financial/trailer`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction FinancialTrailer(props) {\n    const classes = useStyles();\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Financials per Rental Item\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'Rented Item', \n                        field: 'rentedItem', \n                        render: rowData => {\n                            return rowData.rentedItem\n                        } \n                    },\n                    { \n                        title: 'Rented Item Name', \n                        field: 'rentedItemName', \n                        render: rowData => {\n                            return rowData.rentedItemName\n                        } \n                    },\n                    { \n                        title: 'Total', \n                        field: 'total', \n                        render: rowData => {\n                            return rowData.total ? rowData.total : 0\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchFinancialTrailerAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchFinancialTrailerAPI}`, requestOptions)\n                            fetch(`${fetchFinancialTrailerAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchFinancialTrailerAPI} Response`, res);\n                                let totalByItemList = res.financialsObj.totalByItemList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof totalByItemList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...totalByItemList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: totalByItemList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchFinancialTrailerAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n            />\n        </div>\n    )\n}\n\nexport default FinancialTrailer;","import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\n\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\n\nconst apiUrl = common.apiUrl;\nconst fetchLicenseeAPI = `${apiUrl}/admin/licensees`;\nconst saveProofOfIncorporationApproval = `${apiUrl}/admin/licensee/verify/proofOfIncorporation`;\nconst generateOTPAPI = `${apiUrl}/admin/licensee/otp/resend`;\nconst verifyOTPAPI = `${apiUrl}/admin/licensee/otp/verify`;\nconst resendInviteAPI = `${apiUrl}/admin/licensee/email/verify/resend`;\nconst forgotPasswordAPI = `${apiUrl}/admin/licensee/employee/password/forgot`;\nconst resetPasswordAPI = `${apiUrl}/admin/licensee/employee/password/reset`;\n\n\nfunction TableActionButton(props) {\n    console.log(\"TableActionButton\", props);\n    return (\n        <span>{props.title}</span>\n    );\n}\n\nexport default function LicenseeList(props) {\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.LICENSEE.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    //-------------------------------------------------------------------------\n    \n    const otpVerifyDetailsStart = {\n        licenseeId: \"\",\n        mobile: \"\",\n        country: common.country\n    };\n\n    const [dialogState, setDialogState] = useState(false);\n    const [otp, setOTP] = useState(\"\");\n    const [otpVerifySucess, setOTPVerifySucess] = useState(\"\");\n    const [otpVerifyDetails, setOTPVerifyDetails] = useState(otpVerifyDetailsStart);\n\n    function handleClickOpen() {\n        setDialogState(true);\n    }\n    \n    function handleClose() {\n        setDialogState(false);\n    }\n\n    function handleVerifyOTP() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                licenseeId: otpVerifyDetails.licenseeId, \n                mobile: otpVerifyDetails.mobile, \n                // mobile: \"919664815262\",\n                country: otpVerifyDetails.country,\n                otp: otp \n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(verifyOTPAPI, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${verifyOTPAPI} Response`, res);\n            // rowData.driverLicense.verified = true;\n            // rowData.driverLicense.accepted = true;\n            if(tableRef.current) {\n                tableRef.current.onQueryChange();\n            }\n\n            setOTPVerifySucess(\"OTP Verified Successfully\")\n            setOTPVerifyDetails(otpVerifyDetailsStart);\n            setTimeout(() => {\n                handleClose();\n            }, 5000);\n            \n        })\n        .catch( error => {\n            console.log(`${verifyOTPAPI} Error`, error);\n        });\n    }\n\n    //-------------------------------------------------------------------------\n\n    const tableRef = React.createRef();\n\n    return (\n        <div className={`t2y-list t2y-licenseelist ${classes.root}`}>\n\n        <Dialog open={dialogState} \n                onClose={handleClose} \n                aria-labelledby=\"form-dialog-title\"\n                disableBackdropClick={true}\n                disableEscapeKeyDown={true}>\n            <DialogTitle id=\"form-dialog-title\">OTP Verification</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Please Enter OTP\n                </DialogContentText>\n                { \n                    (otpVerifySucess !== \"\") &&\n                    <DialogContentText>{otpVerifySucess}</DialogContentText>\n                }\n                <TextField\n                    autoFocus\n                    fullWidth\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"OTP\"\n                    type=\"otp\"\n                    value={otp}\n                    onChange={ (e) => { \n                        setOTP( e.target.value );\n                    } }\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleVerifyOTP} color=\"primary\">\n                    Verify\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n            <MaterialTable \n                title=\"Licensee\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'licenseeRef', \n                        render: rowData => {\n                            return rowData.licenseeRef\n                        }\n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return rowData.name\n                        } \n                    },\n                    { \n                        title: 'Email', \n                        field: 'email', \n                        render: rowData => {\n                            return rowData.email\n                        } \n                    },\n                    { \n                        title: 'Email Verified', \n                        field: 'isEmailVerified', \n                        render: rowData => {\n                            return rowData.isEmailVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Mobile', \n                        field: 'mobile', \n                        render: rowData => {\n                            return rowData.mobile\n                        } \n                    },\n                    { \n                        title: 'Mobile Verified', \n                        field: 'isMobileVerified', \n                        render: rowData => {\n                            return rowData.isMobileVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Trailers', \n                        field: 'trailers', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={`/licensee/${rowData._id}/trailers`}>View Trailers</a>\n                                </div>\n                            );\n                        } \n                    },\n                    { \n                        title: 'Upsell Items', \n                        field: 'upsellItems', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={`/licensee/${rowData._id}/upsellitems`}>View Upsell Items</a>\n                                </div>\n                            );\n                        } \n                    },\n                    { \n                        title: 'Proof of Incorporation', \n                        field: 'proofOfIncorporation', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={rowData.proofOfIncorporation}>Download</a>\n                                </div>\n                            );\n                        } \n                    },\n                    { \n                        title: 'Proof of Incorporation Verified', \n                        field: 'proofOfIncorporationVerified', \n                        type: 'boolean',\n                        render: rowData => {\n                            return rowData.verified ? \"Yes\" : \"No\";\n                        } \n                    },\n                    { \n                        title: 'Proof of Incorporation Accepted', \n                        field: 'proofOfIncorporationAccepted', \n                        render: rowData => {\n                            return rowData.accepted ? \"Yes\" : \"No\";\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchLicenseeAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchLicenseeAPI}`, requestOptions)\n                            fetch(`${fetchLicenseeAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchLicenseeAPI} Response`, res);\n                                const licenseeList = res.licenseeList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof licenseeList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...licenseeList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: licenseeList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchLicenseeAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Approve Proof of Incorporation\" />) },\n                            tooltip: \"Approve Proof of Incorporation\",\n                            disabled: (rowData.proofOfIncorporation ? false : true),\n                            onClick: (event, rowData) => {\n                                console.log(\"Approve onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ licenseeId: rowData._id, isAccepted: true })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveProofOfIncorporationApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveProofOfIncorporationApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveProofOfIncorporationApproval} Error`, error);\n                                });\n                            }\n                        }),\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Reject Proof of Incorporation\" />) },\n                            tooltip: \"Reject Proof of Incorporation\",\n                            disabled: (rowData.proofOfIncorporation ? false : true),\n                            onClick: (event, rowData) => {\n                                console.log(\"Reject onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ licenseeId: rowData._id, isAccepted: false })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveProofOfIncorporationApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveProofOfIncorporationApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = false;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveProofOfIncorporationApproval} Error`, error);\n                                });\n                            }\n                        }),\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Resend OTP\" />) },\n                            tooltip: \"Resend OTP\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Resend OTP onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        licenseeId: rowData._id,\n                                        mobile: rowData.mobile,\n                                        country: rowData.address.country || common.country \n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(generateOTPAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${generateOTPAPI} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n\n                                    setOTPVerifyDetails({ \n                                        customerId: rowData._id,\n                                        mobile: rowData.mobile,\n                                        country: rowData.address.country || common.country \n                                    });\n                                    handleClickOpen();\n                                })\n                                .catch( error => {\n                                    console.log(`${generateOTPAPI} Error`, error);\n                                });\n                            }\n                        }),\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title=\"Verify Email\" />) } ,\n                            tooltip: \"Verify Email\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Verify Email\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        licenseeId: rowData._id,\n                                        email: rowData.email\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(resendInviteAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${resendInviteAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${resendInviteAPI} Error`, error);\n                                });\n                            }\n                        }),\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Licensee\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add Licensee\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Licensee Signup onClick\", event, rowData);\n                                history.push(\"/adminpanel/licensee/signup\");\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\nimport moment from 'moment';\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControl,\n    FormHelperText,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel,\n    Select,\n    MenuItem\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nconst apiUrl = common.apiUrl;\nconst addLicensee = `${apiUrl}/admin/licensee`; // POST\n\n\nexport default function LicenseeSignup(props) {\n    console.log(\"LicenseeSignup\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.LICENSEE.includes(\"ADD\")) {\n        history.replace(from);\n    }\n\n    //--------------------------------------------------------------------------\n\n    const licenseeStart = {\n        licensee: {\n            name: \"\",\n            email: \"\",\n            isEmailVerified: false,\n            mobile: \"\",\n            isMobileVerified: false,\n            country: common.country,\n            businessType: common.businessType[0],\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: common.states[0],\n                country: common.country\n            },\n            radius: 100,\n            bsbNumber: \"\",\n            availability: true,\n            workingDays: common.days,\n            workingHours: common.hours,\n            workingHoursStart: common.hoursStart,\n            workingHoursEnd: common.hoursEnd,\n            stripeAccountId: \"\",\n            stripeAccountVerified: false,\n            accountNumber: \"\",\n            mcc: \"\",\n            tosAcceptanceDate: \"\",\n            tosAcceptanceIP: \"\",\n            taxId: \"\",\n\n\n            logoLink: \"\",\n            proofOfIncorporationLink: \"\",\n\n            logo: null,\n            proofOfIncorporation: null\n        },\n        employee: {\n            name: \"\",\n            email: \"\",\n            isEmailVerified: false,\n            mobile: \"\",\n            isMobileVerified: false,\n            country: common.country,\n            dob: moment().subtract(18, \"years\").format(\"YYYY-MM-DD\"),\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: common.states[0],\n                country: common.country\n            },\n\n            driverLicense: {\n                card: \"\",\n                expiry: moment().add(1, \"year\").format(\"YYYY-MM\"),\n                state: common.states[0],\n                scanLink: \"\"\n            },\n\n            photoLink: \"\",\n            additionalDocumentLink: \"\",\n\n            photo: null,\n            driverLicenseScan: null,\n            additionalDocument: null\n        }\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [licenseeSignup, setLicenseeSignup] = useState(licenseeStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        licensee: {\n            name: \"\",\n            email: \"\",\n            mobile: \"\",\n            country: \"\",\n            businessType: \"\",\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: \"\",\n                country: \"\"\n            },\n            radius: \"\",\n            bsbNumber: \"\",\n            availability: \"\",\n            workingDays: \"\",\n            workingHoursStart: \"\",\n            workingHoursEnd: \"\",\n            stripeAccountId: \"\",\n            stripeAccountVerified: \"\",\n            accountNumber: \"\",\n            mcc: \"\",\n            tosAcceptanceDate: \"\",\n            tosAcceptanceIP: \"\",\n            taxId: \"\",\n\n            logo: \"\",\n            proofOfIncorporation: \"\"\n        },\n        employee: {\n            name: \"\",\n            email: \"\",\n            mobile: \"\",\n            country: \"\",\n            dob: \"\",\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: \"\",\n                country: \"\"\n            },\n\n            driverLicense: {\n                card: \"\",\n                expiry: \"\",\n                state: \"\"\n            },\n\n            photo: \"\",\n            driverLicenseScan: \"\",\n            additionalDocument: \"\"\n        }\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            (formValidErrorMessage.licensee.name !== \"\") || \n            (formValidErrorMessage.licensee.email !== \"\") || \n            (formValidErrorMessage.licensee.mobile !== \"\") || \n            (formValidErrorMessage.licensee.country !== \"\") || \n\n            (formValidErrorMessage.licensee.businessType !== \"\") || \n\n            (formValidErrorMessage.licensee.address.text !== \"\") || \n            (formValidErrorMessage.licensee.address.pincode !== \"\") || \n            (formValidErrorMessage.licensee.address.coordinates !== \"\") || \n            (formValidErrorMessage.licensee.address.city !== \"\") || \n            (formValidErrorMessage.licensee.address.state !== \"\") || \n            (formValidErrorMessage.licensee.address.country !== \"\") || \n\n            (formValidErrorMessage.licensee.radius !== \"\") || \n            (formValidErrorMessage.licensee.bsbNumber !== \"\") || \n            (formValidErrorMessage.licensee.availability !== \"\") || \n            (formValidErrorMessage.licensee.workingDays !== \"\") ||\n            (formValidErrorMessage.licensee.workingHoursStart !== \"\") || \n            (formValidErrorMessage.licensee.workingHoursEnd !== \"\") || \n            (formValidErrorMessage.licensee.stripeAccountId !== \"\") ||\n            (formValidErrorMessage.licensee.stripeAccountVerified !== \"\") || \n            (formValidErrorMessage.licensee.accountNumber !== \"\") ||\n            (formValidErrorMessage.licensee.mcc !== \"\") ||\n            (formValidErrorMessage.licensee.tosAcceptanceDate !== \"\") || \n            (formValidErrorMessage.licensee.tosAcceptanceIP !== \"\") ||\n            (formValidErrorMessage.licensee.taxId !== \"\") ||\n\n            (formValidErrorMessage.licensee.logo !== \"\") ||\n            (formValidErrorMessage.licensee.proofOfIncorporation !== \"\") || \n\n            (formValidErrorMessage.employee.name !== \"\") || \n            (formValidErrorMessage.employee.email !== \"\") || \n            (formValidErrorMessage.employee.mobile !== \"\") || \n            (formValidErrorMessage.employee.country !== \"\") || \n            (formValidErrorMessage.employee.dob !== \"\") || \n\n            (formValidErrorMessage.employee.address.text !== \"\") || \n            (formValidErrorMessage.employee.address.pincode !== \"\") || \n            (formValidErrorMessage.employee.address.coordinates !== \"\") || \n            (formValidErrorMessage.employee.address.city !== \"\") || \n            (formValidErrorMessage.employee.address.state !== \"\") || \n            (formValidErrorMessage.employee.address.country !== \"\") || \n\n            (formValidErrorMessage.employee.driverLicense.card !== \"\") || \n            (formValidErrorMessage.employee.driverLicense.expiry !== \"\") || \n            (formValidErrorMessage.employee.driverLicense.state !== \"\") || \n            \n            (formValidErrorMessage.employee.photo !== \"\") || \n            (formValidErrorMessage.employee.driverLicenseScan !== \"\") || \n            (formValidErrorMessage.employee.additionalDocument !== \"\")\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        //---------------------------------------------------------------------------\n        \n        console.log(\"licenseeSignup.employee.driverLicense.expiry\", licenseeSignup.employee.driverLicense.expiry);\n        \n        licenseeSignup.employee.dob = moment(licenseeSignup.employee.dob).format(\"YYYY-MM-DD\");\n        licenseeSignup.employee.driverLicense.expiry = moment(licenseeSignup.employee.driverLicense.expiry, \"YYYY-MM\").format(\"MM/YY\");\n\n        console.log(\"licenseeSignup.employee.driverLicense.expiry\", licenseeSignup.employee.driverLicense.expiry);\n\n        licenseeSignup.licensee.workingHours = `${licenseeSignup.licensee.workingHoursStart.replace(\":\",\"\")}-${licenseeSignup.licensee.workingHoursEnd.replace(\":\",\"\")}`\n\n        //---------------------------------------------------------------------------\n\n        const formData = new FormData();\n\n        formData.append('reqBody', JSON.stringify(licenseeSignup));\n\n        // append files --------------------------------------------------\n\n        if(licenseeSignup.licensee.logo) {\n            formData.append('licenseeLogo', licenseeSignup.licensee.logo, licenseeSignup.licensee.logo.name);\n        }\n        if(licenseeSignup.licensee.proofOfIncorporation) {\n            formData.append('licenseeProofOfIncorporation', licenseeSignup.licensee.proofOfIncorporation, licenseeSignup.licensee.proofOfIncorporation.name);\n        }\n    \n        if(licenseeSignup.employee.photo) {\n            formData.append('employeePhoto', licenseeSignup.employee.photo, licenseeSignup.employee.photo.name);\n        }\n        if(licenseeSignup.employee.driverLicenseScan) {\n            formData.append('employeeDriverLicenseScan', licenseeSignup.employee.driverLicenseScan, licenseeSignup.employee.driverLicenseScan.name);\n        }\n        if(licenseeSignup.employee.additionalDocument) {\n            formData.append('employeeAdditionalDocumentScan', licenseeSignup.employee.additionalDocument, licenseeSignup.employee.additionalDocument.name);\n        }\n\n        let requestOptions = {\n            method: \"POST\",\n            headers: {\n                ...authHeader()\n            },\n            body: formData\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(addLicensee, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${addLicensee} Response`, res);\n\n            if(res.success) {\n                const licenseeObj = res.licenseeObj;\n                const employeeObj = res.employeeObj;\n                \n                setErrorMessage(\"\");\n                setSuccessMessage(\"Successfully saved Licensee data\");\n\n                setTimeout(() => {\n                    setSuccessMessage(\"\");\n                    history.push(\"/adminpanel/licensees\");\n                }, 5000);\n            }\n\n            licenseeSignup.employee.driverLicense.expiry = moment().add(1, \"year\").format(\"YYYY-MM\");\n        })\n        .catch( error => {\n            console.log(`${addLicensee} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Licensee data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Licensee Signup\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n            \n                <form className={classes.form} noValidate>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography component=\"h5\">\n                            Licensee\n                        </Typography>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-name\"\n                            label=\"Name\"\n                            name=\"licensee-name\"\n                            autoComplete=\"licensee-name\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.name !== \"\")}\n                            helperText={formValidErrorMessage.licensee.name}\n                            value={licenseeSignup.licensee.name}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        name: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-email\"\n                                label=\"Email\"\n                                name=\"licensee-email\"\n                                autoComplete=\"licensee-email\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.email !== \"\")}\n                                helperText={formValidErrorMessage.licensee.email}\n                                value={licenseeSignup.licensee.email}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            email: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.licensee.isEmailVerified} \n                                        name=\"licensee-isEmailVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isEmailVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    isEmailVerified: !licenseeSignup.licensee.isEmailVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Email Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-mobile\"\n                                label=\"Mobile\"\n                                name=\"licensee-mobile\"\n                                autoComplete=\"licensee-mobile\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.mobile !== \"\")}\n                                helperText={formValidErrorMessage.licensee.mobile}\n                                value={licenseeSignup.licensee.mobile}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            mobile: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.licensee.isMobileVerified} \n                                        name=\"licensee-isMobileVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isMobileVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    isMobileVerified: !licenseeSignup.licensee.isMobileVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Mobile Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        {\n                            common.businessType && \n                            <FormControl required>\n                                <InputLabel id=\"licensee-businessType-label\">Business Type</InputLabel>\n                                <Select\n                                    labelId=\"licensee-businessType-label\"\n                                    id=\"licensee-businessType-Select\"\n                                    value={licenseeSignup.licensee.businessType}\n                                    onChange={ (e) => { \n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            licensee: {\n                                                ...licenseeSignup.licensee,\n                                                businessType: e.target.value\n                                            }\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        common.businessType.map((businessType, businessTypeIndex) => {\n                                            console.log(\"businessType\", businessType, businessTypeIndex);\n                                            return (\n                                                <MenuItem key={`businessType-${businessTypeIndex}`} value={businessType}>{businessType}</MenuItem>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        }\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Address\n                            </Typography>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_text\"\n                                label=\"Address Line\"\n                                name=\"licensee-address_text\"\n                                autoComplete=\"licensee-address_text\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.text !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.text}\n                                value={licenseeSignup.licensee.address.text}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                text: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_pincode\"\n                                label=\"Pincode\"\n                                name=\"licensee-address_pincode\"\n                                autoComplete=\"licensee-address_pincode\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.pincode !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.pincode}\n                                value={licenseeSignup.licensee.address.pincode}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                pincode: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_coordinates\"\n                                label=\"Coordinates (Latitude,Longitude format)\"\n                                name=\"licensee-address_coordinates\"\n                                autoComplete=\"licensee-address_coordinates\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.coordinates !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.coordinates}\n                                value={licenseeSignup.licensee.address.coordinates}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                coordinates: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_city\"\n                                label=\"City\"\n                                name=\"licensee-address_city\"\n                                autoComplete=\"licensee-address_city\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.city !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.city}\n                                value={licenseeSignup.licensee.address.city}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                city: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            {\n                                common.states && \n                                <FormControl required>\n                                    <InputLabel id=\"licensee-address_state-label\">State</InputLabel>\n                                    <Select\n                                        labelId=\"licensee-address_state-label\"\n                                        id=\"licensee-address_state-Select\"\n                                        value={licenseeSignup.licensee.address.state}\n                                        onChange={ (e) => { \n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    address: {\n                                                        ...licenseeSignup.licensee.address,\n                                                        state: e.target.value\n                                                    }\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.states.map((state, stateIndex) => {\n                                                console.log(\"state\", state, stateIndex);\n                                                return (\n                                                    <MenuItem key={`state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                        </Box>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-radius\"\n                            label=\"Radius for Trailer Dropoff ( in kilometers )\"\n                            name=\"licensee-radius\"\n                            autoComplete=\"licensee-radius\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.radius !== \"\")}\n                            helperText={formValidErrorMessage.licensee.radius}\n                            value={licenseeSignup.licensee.radius}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        radius: parseInt(e.target.value)\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={licenseeSignup.licensee.availability} \n                                    name=\"licensee-availability\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange availability\", e);\n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            licensee: {\n                                                ...licenseeSignup.licensee,\n                                                availability: !licenseeSignup.licensee.availability\n                                            }\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Licensee Available?\"\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            {\n                                common.days && \n                                <FormControl required>\n                                    <InputLabel id=\"licensee-workingDays-label\">Working Days</InputLabel>\n                                    <Select\n                                        multiple={true}\n                                        labelId=\"licensee-workingDays-label\"\n                                        id=\"licensee-workingDays-Select\"\n                                        value={licenseeSignup.licensee.workingDays}\n                                        onChange={ (e) => { \n                                            console.log(\"e.target\", e.target);\n                                            /* const { options } = e.target;\n                                            console.log(\"workingDays options\", options);\n                                            const value = [];\n                                            for (let i = 0, l = options.length; i < l; i += 1) {\n                                                if (options[i].selected) {\n                                                    value.push(options[i].value);\n                                                }\n                                            }\n                                            console.log(\"workingDays selected\", value); */\n\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    workingDays: e.target.value\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.days.map((day, dayIndex) => {\n                                                console.log(\"day\", day, dayIndex);\n                                                return (\n                                                    <MenuItem key={`day-${dayIndex}`} value={day}>{day}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                            <label>Working Hours</label>\n\n                            <TextField \n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                aria-label=\"WorkingHours Start\" \n                                required\n                                fullWidth\n                                type=\"time\"\n                                id=\"licensee-workingHours-start\"\n                                label=\"WorkingHours Start\"\n                                name=\"licensee-workingHours-start\"\n                                autoComplete=\"licensee-workingHours-start\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.workingHoursStart !== \"\")}\n                                helperText={formValidErrorMessage.licensee.workingHoursStart}\n                                value={licenseeSignup.licensee.workingHoursStart}\n                                onChange={ (e) => { \n                                    console.log(\"WorkingHours Start\", e.target.value);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            workingHoursStart: e.target.value\n                                        }\n                                    });\n                                } } \n                            />\n\n                            <TextField \n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                aria-label=\"WorkingHours End\" \n                                required\n                                fullWidth\n                                type=\"time\"\n                                id=\"licensee-workingHours-end\"\n                                label=\"WorkingHours End\"\n                                name=\"licensee-workingHours-end\"\n                                autoComplete=\"licensee-workingHours-end\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.workingHoursEnd !== \"\")}\n                                helperText={formValidErrorMessage.licensee.workingHoursEnd}\n                                value={licenseeSignup.licensee.workingHoursEnd}\n                                onChange={ (e) => { \n                                    console.log(\"WorkingHours End\", e.target.value);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            workingHoursEnd: e.target.value\n                                        }\n                                    });\n                                } } \n                            />\n\n                        </FormGroup>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-bsbNumber\"\n                            label=\"BSB Number\"\n                            name=\"licensee-bsbNumber\"\n                            autoComplete=\"licensee-bsbNumber\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.bsbNumber !== \"\")}\n                            helperText={formValidErrorMessage.licensee.bsbNumber}\n                            value={licenseeSignup.licensee.bsbNumber}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        bsbNumber: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-accountNumber\"\n                            label=\"Account Number\"\n                            name=\"licensee-accountNumber\"\n                            autoComplete=\"licensee-accountNumber\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.accountNumber !== \"\")}\n                            helperText={formValidErrorMessage.licensee.accountNumber}\n                            value={licenseeSignup.licensee.accountNumber}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        accountNumber: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            type=\"url\"\n                            id=\"licensee-url\"\n                            label=\"Website URL\"\n                            name=\"licensee-url\"\n                            autoComplete=\"licensee-url\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.url !== \"\")}\n                            helperText={formValidErrorMessage.licensee.url}\n                            value={licenseeSignup.licensee.url}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        url: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"licensee-taxId\"\n                            label=\"Tax ID\"\n                            name=\"licensee-taxId\"\n                            autoComplete=\"licensee-taxId\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.taxId !== \"\")}\n                            helperText={formValidErrorMessage.licensee.taxId}\n                            value={licenseeSignup.licensee.taxId}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        taxId: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Logo\n                            </Typography>\n\n                            {\n                                licenseeSignup.licensee.logoLink && !licenseeSignup.licensee.logo && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.licensee.logoLink}>Logo</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png\"\n                                id=\"licensee-logo\"\n                                multiple\n                                type=\"file\"\n                                name=\"licensee-logo\"\n                                onChange={ (e) => {\n                                    console.log(\"licensee-logo\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            photo: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                                \n                        </Box>\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Proof Of Incorporation\n                            </Typography>\n\n                            {\n                                licenseeSignup.licensee.proofOfIncorporationLink && !licenseeSignup.licensee.proofOfIncorporation && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.licensee.proofOfIncorporationLink}>Proof Of Incorporation</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png, image/pdf\"\n                                id=\"licensee-proofOfIncorporation\"\n                                multiple\n                                type=\"file\"\n                                name=\"licensee-proofOfIncorporation\"\n                                onChange={ (e) => {\n                                    console.log(\"licensee-proofOfIncorporation\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            proofOfIncorporation: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                                \n                        </Box>\n\n                    </Box>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography component=\"h5\">\n                            Employee\n                        </Typography>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"employee-name\"\n                            label=\"Name\"\n                            name=\"employee-name\"\n                            autoComplete=\"employee-name\"\n                            autoFocus\n                            error={(formValidErrorMessage.employee.name !== \"\")}\n                            helperText={formValidErrorMessage.employee.name}\n                            value={licenseeSignup.employee.name}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    employee: {\n                                        ...licenseeSignup.employee,\n                                        name: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-email\"\n                                label=\"Email\"\n                                name=\"employee-email\"\n                                autoComplete=\"employee-email\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.email !== \"\")}\n                                helperText={formValidErrorMessage.employee.email}\n                                value={licenseeSignup.employee.email}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            email: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.employee.isEmailVerified} \n                                        name=\"employee-isEmailVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isEmailVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    isEmailVerified: !licenseeSignup.employee.isEmailVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Email Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-mobile\"\n                                label=\"Mobile\"\n                                name=\"employee-mobile\"\n                                autoComplete=\"employee-mobile\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.mobile !== \"\")}\n                                helperText={formValidErrorMessage.employee.mobile}\n                                value={licenseeSignup.employee.mobile}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            mobile: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.employee.isMobileVerified} \n                                        name=\"employee-isMobileVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isMobileVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    isMobileVerified: !licenseeSignup.employee.isMobileVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Mobile Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        <TextField \n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            aria-label=\"Date of Birth\" \n                            required\n                            fullWidth\n                            type=\"date\"\n                            id=\"employee-dob\"\n                            label=\"Date Of Birth\"\n                            name=\"employee-dob\"\n                            autoComplete=\"employee-dob\"\n                            autoFocus\n                            error={(formValidErrorMessage.employee.dob !== \"\")}\n                            helperText={formValidErrorMessage.employee.dob}\n                            value={licenseeSignup.employee.dob}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    employee: {\n                                        ...licenseeSignup.employee,\n                                        dob: e.target.value\n                                    }\n                                });\n                            } } \n                        />\n                        \n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Address\n                            </Typography>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_text\"\n                                label=\"Address Line\"\n                                name=\"employee-address_text\"\n                                autoComplete=\"employee-address_text\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.text !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.text}\n                                value={licenseeSignup.employee.address.text}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                text: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_pincode\"\n                                label=\"Pincode\"\n                                name=\"employee-address_pincode\"\n                                autoComplete=\"employee-address_pincode\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.pincode !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.pincode}\n                                value={licenseeSignup.employee.address.pincode}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                pincode: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_coordinates\"\n                                label=\"Coordinates (Latitude,Longitude format)\"\n                                name=\"employee-address_coordinates\"\n                                autoComplete=\"employee-address_coordinates\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.coordinates !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.coordinates}\n                                value={licenseeSignup.employee.address.coordinates}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                coordinates: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_city\"\n                                label=\"City\"\n                                name=\"employee-address_city\"\n                                autoComplete=\"employee-address_city\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.city !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.city}\n                                value={licenseeSignup.employee.address.city}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                city: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            {\n                                common.states && \n                                <FormControl required>\n                                    <InputLabel id=\"employee-address_state-label\">State</InputLabel>\n                                    <Select\n                                        labelId=\"employee-address_state-label\"\n                                        id=\"employee-address_state-Select\"\n                                        value={licenseeSignup.employee.address.state}\n                                        onChange={ (e) => { \n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    address: {\n                                                        ...licenseeSignup.employee.address,\n                                                        state: e.target.value\n                                                    }\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.states.map((state, stateIndex) => {\n                                                console.log(\"state\", state, stateIndex);\n                                                return (\n                                                    <MenuItem key={`employee-state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                        </Box>\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Driver License\n                            </Typography>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-driverLicense_card\"\n                                label=\"Driver License Number\"\n                                name=\"employee-driverLicense_card\"\n                                autoComplete=\"employee-driverLicense_card\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.driverLicense.card !== \"\")}\n                                helperText={formValidErrorMessage.employee.driverLicense.card}\n                                value={licenseeSignup.employee.driverLicense.card}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            driverLicense: {\n                                                ...licenseeSignup.employee.driverLicense,\n                                                card: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                type=\"month\"\n                                id=\"employee-driverLicense_expiry\"\n                                label=\"Expiry Date\"\n                                name=\"employee-driverLicense_expiry\"\n                                autoComplete=\"employee-driverLicense_expiry\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.driverLicense.expiry !== \"\")}\n                                helperText={formValidErrorMessage.employee.driverLicense.expiry}\n                                value={licenseeSignup.employee.driverLicense.expiry}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            driverLicense: {\n                                                ...licenseeSignup.employee.driverLicense,\n                                                expiry: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            {\n                                common.states && \n                                <FormControl required>\n                                    <InputLabel id=\"employee-driverLicense_state-label\">State</InputLabel>\n                                    <Select\n                                        labelId=\"employee-driverLicense_state-label\"\n                                        id=\"employee-driverLicense_state-Select\"\n                                        value={licenseeSignup.employee.driverLicense.state}\n                                        onChange={ (e) => { \n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    driverLicense: {\n                                                        ...licenseeSignup.employee.driverLicense,\n                                                        state: e.target.value\n                                                    }\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.states.map((state, stateIndex) => {\n                                                console.log(\"state\", state, stateIndex);\n                                                return (\n                                                    <MenuItem key={`driverLicense-state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                            <Box className=\"SectionContainer\">\n\n                                <Typography variant=\"subtitle1\">\n                                    Scan ( Scan of Front and Back side of Driver License in a single File )\n                                </Typography>\n\n                                {\n                                    licenseeSignup.employee.driverLicense.scanLink && !licenseeSignup.employee.driverLicenseScan && \n                                    (\n                                        <Box className=\"SectionContainer\">\n                                            <a href={licenseeSignup.employee.driverLicense.scanLink}>Scan</a>\n                                        </Box>\n                                    )\n                                }\n\n                                <input\n                                    accept=\"image/jpeg, image/jpg, image/png, application/pdf\"\n                                    id=\"employee-driverLicenseScan\"\n                                    type=\"file\"\n                                    name=\"employee-driverLicenseScan\"\n                                    onChange={ (e) => {\n                                        console.log(\"employee-driverLicenseScan\", e.target.files);\n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            employee: {\n                                                ...licenseeSignup.employee,\n                                                driverLicenseScan: e.target.files[0]\n                                            }\n                                        });\n                                    }}\n                                    />\n\n                                {/* <label htmlFor=\"raised-button-file\">\n                                    <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                        Upload\n                                    </Button>\n                                </label>  */}\n                            </Box>\n\n                        </Box>\n\n                        \n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Photo\n                            </Typography>\n\n                            {\n                                licenseeSignup.employee.photoLink && !licenseeSignup.employee.photo && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.employee.photoLink}>Photo</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png\"\n                                id=\"employee-photo\"\n                                type=\"file\"\n                                name=\"employee-photo\"\n                                onChange={ (e) => {\n                                    console.log(\"employee-photo\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            photo: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n\n                            {/* <label htmlFor=\"raised-button-file\">\n                                <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                    Upload\n                                </Button>\n                            </label>  */}\n                        </Box>\n\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Additional Document\n                            </Typography>\n\n                            {\n                                licenseeSignup.employee.additionalDocumentLink && !licenseeSignup.employee.additionalDocument && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.employee.additionalDocumentLink}>Additional Document</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png, application/pdf\"\n                                id=\"employee-additionalDocument\"\n                                type=\"file\"\n                                name=\"employee-additionalDocument\"\n                                onChange={ (e) => {\n                                    console.log(\"employee-additionalDocument\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            additionalDocument: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                        </Box>\n        \n                    </Box>\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Signup\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\nimport moment from 'moment';\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControl,\n    FormHelperText,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel,\n    Select,\n    MenuItem\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nconst apiUrl = common.apiUrl;\nconst getLicensee = `${apiUrl}/admin/licensee`; // GET\nconst putLicensee = `${apiUrl}/admin/licensee`; // POST\n\n\nexport default function LicenseeEdit(props) {\n    console.log(\"LicenseeEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId } = useParams();\n    console.log(\"licenseeId\", licenseeId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(licenseeId && !userData.acl.LICENSEE.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    //--------------------------------------------------------------------------\n\n    const licenseeStart = {\n        licensee: {\n            name: \"\",\n            email: \"\",\n            isEmailVerified: false,\n            mobile: \"\",\n            isMobileVerified: false,\n            country: common.country,\n            businessType: common.businessType[0],\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: common.states[0],\n                country: common.country\n            },\n            radius: 100,\n            availability: true,\n\n            workingDays: common.days,\n            workingHours: common.hours,\n            workingHoursStart: common.hoursStart,\n            workingHoursEnd: common.hoursEnd,\n\n            bsbNumber: \"\",\n            accountNumber: \"\",\n\n            taxId: \"\",\n\n            stripeAccountId: \"\",\n            stripeAccountVerified: false,\n            mcc: \"\",\n            productDescription: \"\",\n            tosAcceptanceDate: \"\",\n            tosAcceptanceIP: \"\",\n\n            logoLink: \"\",\n            proofOfIncorporationLink: \"\",\n\n            logo: null,\n            proofOfIncorporation: null\n        }\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [licenseeSignup, setLicenseeSignup] = useState(licenseeStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    //--------------------------------------------------------------------------\n\n    useEffect(() => {\n        if(licenseeId) {\n            const requestOptions = {\n                method: 'GET',\n                headers: authHeader(),\n\n            };\n            fetch(`${getLicensee}?id=${licenseeId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                console.log(\"Customer API Call Response\", res.customerObj);\n                const licenseeObj = res.licenseeObj;\n\n                const workingHoursSplit = licenseeObj.workingHours.split(\"-\");\n                const workingHoursStart = `${workingHoursSplit[0].substring(0, 2)}:${workingHoursSplit[0].substring(2, 4)}`;\n                const workingHoursEnd = `${workingHoursSplit[1].substring(0, 2)}:${workingHoursSplit[1].substring(2, 4)}`;\n                \n                setLicenseeSignup({\n                    licensee: {\n                        name: licenseeObj.name,\n                        email: licenseeObj.email,\n                        isEmailVerified: licenseeObj.isEmailVerified,\n                        mobile: licenseeObj.mobile,\n                        isMobileVerified: licenseeObj.isMobileVerified,\n                        country: licenseeObj.country,\n                        businessType: licenseeObj.businessType,\n                    \n                        address: {\n                            text: licenseeObj.address.text,\n                            pincode: licenseeObj.address.pincode,\n                            coordinates: licenseeObj.address.coordinates.join(\",\"),\n                            city: licenseeObj.address.city,\n                            state: licenseeObj.address.state,\n                            country: licenseeObj.address.country\n                        },\n                        radius: licenseeObj.radius,\n                        availability: licenseeObj.availability,\n            \n                        workingDays: licenseeObj.workingDays,\n                        workingHours: licenseeObj.workingHours,\n                        workingHoursStart: workingHoursStart,\n                        workingHoursEnd: workingHoursEnd,\n            \n                        bsbNumber: licenseeObj.bsbNumber,\n                        accountNumber: licenseeObj.accountNumber,\n            \n                        taxId: licenseeObj.taxId,\n            \n                        stripeAccountId: licenseeObj.stripeAccountId,\n                        stripeAccountVerified: licenseeObj.stripeAccountVerified,\n                        mcc: licenseeObj.mcc,\n                        productDescription: licenseeObj.productDescription,\n                        tosAcceptanceDate: licenseeObj.tosAcceptanceDate,\n                        tosAcceptanceIP: licenseeObj.tosAcceptanceIP,\n            \n                        logoLink: licenseeObj.logo,\n                        proofOfIncorporationLink: licenseeObj.proofOfIncorporation,\n            \n                        logo: null,\n                        proofOfIncorporation: null\n                    }\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Licensee data\", err);\n            })\n        }\n    }, [loadOnce]);\n\n    //--------------------------------------------------------------------------\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        licensee: {\n            name: \"\",\n            email: \"\",\n            mobile: \"\",\n            country: \"\",\n            businessType: \"\",\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: \"\",\n                country: \"\"\n            },\n            radius: \"\",\n            availability: \"\",\n            \n            workingDays: \"\",\n            workingHoursStart: \"\",\n            workingHoursEnd: \"\",\n\n            bsbNumber: \"\",\n            accountNumber: \"\",\n            taxId: \"\",\n\n            stripeAccountId: \"\",\n            stripeAccountVerified: \"\",\n            mcc: \"\",\n            productDescription: \"\",\n            tosAcceptanceDate: \"\",\n            tosAcceptanceIP: \"\",\n        \n            logo: \"\",\n            proofOfIncorporation: \"\"\n        }\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            (formValidErrorMessage.licensee.name !== \"\") || \n            (formValidErrorMessage.licensee.email !== \"\") || \n            (formValidErrorMessage.licensee.mobile !== \"\") || \n            (formValidErrorMessage.licensee.country !== \"\") || \n\n            (formValidErrorMessage.licensee.businessType !== \"\") || \n\n            (formValidErrorMessage.licensee.address.text !== \"\") || \n            (formValidErrorMessage.licensee.address.pincode !== \"\") || \n            (formValidErrorMessage.licensee.address.coordinates !== \"\") || \n            (formValidErrorMessage.licensee.address.city !== \"\") || \n            (formValidErrorMessage.licensee.address.state !== \"\") || \n            (formValidErrorMessage.licensee.address.country !== \"\") || \n\n            (formValidErrorMessage.licensee.radius !== \"\") || \n            (formValidErrorMessage.licensee.availability !== \"\") || \n\n            (formValidErrorMessage.licensee.workingDays !== \"\") ||\n            (formValidErrorMessage.licensee.workingHoursStart !== \"\") || \n            (formValidErrorMessage.licensee.workingHoursEnd !== \"\") || \n\n            (formValidErrorMessage.licensee.bsbNumber !== \"\") || \n            (formValidErrorMessage.licensee.accountNumber !== \"\") ||\n            (formValidErrorMessage.licensee.taxId !== \"\") ||\n\n            (formValidErrorMessage.licensee.stripeAccountId !== \"\") ||\n            (formValidErrorMessage.licensee.stripeAccountVerified !== \"\") || \n            (formValidErrorMessage.licensee.mcc !== \"\") ||\n            (formValidErrorMessage.licensee.productDescription !== \"\") || \n            (formValidErrorMessage.licensee.tosAcceptanceDate !== \"\") || \n            (formValidErrorMessage.licensee.tosAcceptanceIP !== \"\") ||\n\n            (formValidErrorMessage.licensee.logo !== \"\") ||\n            (formValidErrorMessage.licensee.proofOfIncorporation !== \"\")\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        //---------------------------------------------------------------------------\n        \n        licenseeSignup.licensee.workingHours = `${licenseeSignup.licensee.workingHoursStart.replace(\":\",\"\")}-${licenseeSignup.licensee.workingHoursEnd.replace(\":\",\"\")}`\n\n        //---------------------------------------------------------------------------\n\n        const formData = new FormData();\n\n        formData.append('reqBody', JSON.stringify(licenseeSignup.licensee));\n\n        // append files --------------------------------------------------\n\n        if(licenseeSignup.licensee.logo) {\n            formData.append('licenseeLogo', licenseeSignup.licensee.logo, licenseeSignup.licensee.logo.name);\n        }\n        if(licenseeSignup.licensee.proofOfIncorporation) {\n            formData.append('licenseeProofOfIncorporation', licenseeSignup.licensee.proofOfIncorporation, licenseeSignup.licensee.proofOfIncorporation.name);\n        }\n\n        let requestOptions = {\n            method: \"PUT\",\n            headers: {\n                ...authHeader()\n            },\n            body: formData\n        };\n        console.log(\"requestOptions\", requestOptions);\n\n        \n        fetch(putLicensee, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${putLicensee} Response`, res);\n\n            if(res.success) {\n                const licenseeObj = res.licenseeObj;\n                const employeeObj = res.employeeObj;\n                \n                setErrorMessage(\"\");\n                setSuccessMessage(\"Successfully saved Licensee data\");\n\n                setTimeout(() => {\n                    setSuccessMessage(\"\");\n                    history.push(\"/adminpanel/licensees\");\n                }, 5000);\n            }\n\n            licenseeSignup.employee.driverLicense.expiry = moment().add(1, \"year\").format(\"YYYY-MM\");\n        })\n        .catch( error => {\n            console.log(`${putLicensee} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Licensee data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Licensee Signup\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n            \n                <form className={classes.form} noValidate>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography component=\"h5\">\n                            Licensee\n                        </Typography>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-name\"\n                            label=\"Name\"\n                            name=\"licensee-name\"\n                            autoComplete=\"licensee-name\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.name !== \"\")}\n                            helperText={formValidErrorMessage.licensee.name}\n                            value={licenseeSignup.licensee.name}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        name: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-email\"\n                                label=\"Email\"\n                                name=\"licensee-email\"\n                                autoComplete=\"licensee-email\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.email !== \"\")}\n                                helperText={formValidErrorMessage.licensee.email}\n                                value={licenseeSignup.licensee.email}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            email: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.licensee.isEmailVerified} \n                                        name=\"licensee-isEmailVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isEmailVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    isEmailVerified: !licenseeSignup.licensee.isEmailVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Email Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-mobile\"\n                                label=\"Mobile\"\n                                name=\"licensee-mobile\"\n                                autoComplete=\"licensee-mobile\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.mobile !== \"\")}\n                                helperText={formValidErrorMessage.licensee.mobile}\n                                value={licenseeSignup.licensee.mobile}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            mobile: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.licensee.isMobileVerified} \n                                        name=\"licensee-isMobileVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isMobileVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    isMobileVerified: !licenseeSignup.licensee.isMobileVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Mobile Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        {\n                            common.businessType && \n                            <FormControl required>\n                                <InputLabel id=\"licensee-businessType-label\">Business Type</InputLabel>\n                                <Select\n                                    labelId=\"licensee-businessType-label\"\n                                    id=\"licensee-businessType-Select\"\n                                    value={licenseeSignup.licensee.businessType}\n                                    onChange={ (e) => { \n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            licensee: {\n                                                ...licenseeSignup.licensee,\n                                                businessType: e.target.value\n                                            }\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        common.businessType.map((businessType, businessTypeIndex) => {\n                                            console.log(\"businessType\", businessType, businessTypeIndex);\n                                            return (\n                                                <MenuItem key={`businessType-${businessTypeIndex}`} value={businessType}>{businessType}</MenuItem>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        }\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Address\n                            </Typography>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_text\"\n                                label=\"Address Line\"\n                                name=\"licensee-address_text\"\n                                autoComplete=\"licensee-address_text\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.text !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.text}\n                                value={licenseeSignup.licensee.address.text}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                text: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_pincode\"\n                                label=\"Pincode\"\n                                name=\"licensee-address_pincode\"\n                                autoComplete=\"licensee-address_pincode\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.pincode !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.pincode}\n                                value={licenseeSignup.licensee.address.pincode}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                pincode: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_coordinates\"\n                                label=\"Coordinates (Latitude,Longitude format)\"\n                                name=\"licensee-address_coordinates\"\n                                autoComplete=\"licensee-address_coordinates\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.coordinates !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.coordinates}\n                                value={licenseeSignup.licensee.address.coordinates}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                coordinates: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_city\"\n                                label=\"City\"\n                                name=\"licensee-address_city\"\n                                autoComplete=\"licensee-address_city\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.city !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.city}\n                                value={licenseeSignup.licensee.address.city}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                city: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            {\n                                common.states && \n                                <FormControl required>\n                                    <InputLabel id=\"licensee-address_state-label\">State</InputLabel>\n                                    <Select\n                                        labelId=\"licensee-address_state-label\"\n                                        id=\"licensee-address_state-Select\"\n                                        value={licenseeSignup.licensee.address.state}\n                                        onChange={ (e) => { \n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    address: {\n                                                        ...licenseeSignup.licensee.address,\n                                                        state: e.target.value\n                                                    }\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.states.map((state, stateIndex) => {\n                                                console.log(\"state\", state, stateIndex);\n                                                return (\n                                                    <MenuItem key={`state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                        </Box>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-radius\"\n                            label=\"Radius for Trailer Dropoff ( in kilometers )\"\n                            name=\"licensee-radius\"\n                            autoComplete=\"licensee-radius\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.radius !== \"\")}\n                            helperText={formValidErrorMessage.licensee.radius}\n                            value={licenseeSignup.licensee.radius}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        radius: parseInt(e.target.value)\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={licenseeSignup.licensee.availability} \n                                    name=\"licensee-availability\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange availability\", e);\n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            licensee: {\n                                                ...licenseeSignup.licensee,\n                                                availability: !licenseeSignup.licensee.availability\n                                            }\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Licensee Available?\"\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            {\n                                common.days && \n                                <FormControl required>\n                                    <InputLabel id=\"licensee-workingDays-label\">Working Days</InputLabel>\n                                    <Select\n                                        multiple={true}\n                                        labelId=\"licensee-workingDays-label\"\n                                        id=\"licensee-workingDays-Select\"\n                                        value={licenseeSignup.licensee.workingDays}\n                                        onChange={ (e) => { \n                                            console.log(\"e.target\", e.target);\n                                            /* const { options } = e.target;\n                                            console.log(\"workingDays options\", options);\n                                            const value = [];\n                                            for (let i = 0, l = options.length; i < l; i += 1) {\n                                                if (options[i].selected) {\n                                                    value.push(options[i].value);\n                                                }\n                                            }\n                                            console.log(\"workingDays selected\", value); */\n\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    workingDays: e.target.value\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.days.map((day, dayIndex) => {\n                                                console.log(\"day\", day, dayIndex);\n                                                return (\n                                                    <MenuItem key={`day-${dayIndex}`} value={day}>{day}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                            <label>Working Hours</label>\n\n                            <TextField \n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                aria-label=\"WorkingHours Start\" \n                                required\n                                fullWidth\n                                type=\"time\"\n                                id=\"licensee-workingHours-start\"\n                                label=\"WorkingHours Start\"\n                                name=\"licensee-workingHours-start\"\n                                autoComplete=\"licensee-workingHours-start\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.workingHoursStart !== \"\")}\n                                helperText={formValidErrorMessage.licensee.workingHoursStart}\n                                value={licenseeSignup.licensee.workingHoursStart}\n                                onChange={ (e) => { \n                                    console.log(\"WorkingHours Start\", e.target.value);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            workingHoursStart: e.target.value\n                                        }\n                                    });\n                                } } \n                            />\n\n                            <TextField \n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                aria-label=\"WorkingHours End\" \n                                required\n                                fullWidth\n                                type=\"time\"\n                                id=\"licensee-workingHours-end\"\n                                label=\"WorkingHours End\"\n                                name=\"licensee-workingHours-end\"\n                                autoComplete=\"licensee-workingHours-end\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.workingHoursEnd !== \"\")}\n                                helperText={formValidErrorMessage.licensee.workingHoursEnd}\n                                value={licenseeSignup.licensee.workingHoursEnd}\n                                onChange={ (e) => { \n                                    console.log(\"WorkingHours End\", e.target.value);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            workingHoursEnd: e.target.value\n                                        }\n                                    });\n                                } } \n                            />\n\n                        </FormGroup>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-bsbNumber\"\n                            label=\"BSB Number\"\n                            name=\"licensee-bsbNumber\"\n                            autoComplete=\"licensee-bsbNumber\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.bsbNumber !== \"\")}\n                            helperText={formValidErrorMessage.licensee.bsbNumber}\n                            value={licenseeSignup.licensee.bsbNumber}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        bsbNumber: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-accountNumber\"\n                            label=\"Account Number\"\n                            name=\"licensee-accountNumber\"\n                            autoComplete=\"licensee-accountNumber\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.accountNumber !== \"\")}\n                            helperText={formValidErrorMessage.licensee.accountNumber}\n                            value={licenseeSignup.licensee.accountNumber}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        accountNumber: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            type=\"url\"\n                            id=\"licensee-url\"\n                            label=\"Website URL\"\n                            name=\"licensee-url\"\n                            autoComplete=\"licensee-url\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.url !== \"\")}\n                            helperText={formValidErrorMessage.licensee.url}\n                            value={licenseeSignup.licensee.url}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        url: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"licensee-taxId\"\n                            label=\"Tax ID\"\n                            name=\"licensee-taxId\"\n                            autoComplete=\"licensee-taxId\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.taxId !== \"\")}\n                            helperText={formValidErrorMessage.licensee.taxId}\n                            value={licenseeSignup.licensee.taxId}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        taxId: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Logo\n                            </Typography>\n\n                            {\n                                licenseeSignup.licensee.logoLink && !licenseeSignup.licensee.logo && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.licensee.logoLink}>Logo</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png\"\n                                id=\"licensee-logo\"\n                                multiple\n                                type=\"file\"\n                                name=\"licensee-logo\"\n                                onChange={ (e) => {\n                                    console.log(\"licensee-logo\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            photo: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                                \n                        </Box>\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Proof Of Incorporation\n                            </Typography>\n\n                            {\n                                licenseeSignup.licensee.proofOfIncorporationLink && !licenseeSignup.licensee.proofOfIncorporation && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.licensee.proofOfIncorporationLink}>Proof Of Incorporation</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png, image/pdf\"\n                                id=\"licensee-proofOfIncorporation\"\n                                multiple\n                                type=\"file\"\n                                name=\"licensee-proofOfIncorporation\"\n                                onChange={ (e) => {\n                                    console.log(\"licensee-proofOfIncorporation\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            proofOfIncorporation: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                                \n                        </Box>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            disabled={true}\n                            id=\"licensee-stripeAccountId\"\n                            label=\"Stripe Account ID\"\n                            name=\"licensee-stripeAccountId\"\n                            autoComplete=\"licensee-stripeAccountId\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.stripeAccountId !== \"\")}\n                            helperText={formValidErrorMessage.licensee.stripeAccountId}\n                            value={licenseeSignup.licensee.stripeAccountId}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        stripeAccountId: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    disabled={true}\n                                    checked={licenseeSignup.licensee.stripeAccountVerified} \n                                    name=\"licensee-stripeAccountVerified\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange stripeAccountVerified\", e);\n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            licensee: {\n                                                ...licenseeSignup.licensee,\n                                                stripeAccountVerified: !licenseeSignup.licensee.stripeAccountVerified\n                                            }\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Stripe Account Verified?\"\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            disabled={true}\n                            id=\"licensee-mcc\"\n                            label=\"MCC\"\n                            name=\"licensee-mcc\"\n                            autoComplete=\"licensee-mcc\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.mcc !== \"\")}\n                            helperText={formValidErrorMessage.licensee.mcc}\n                            value={licenseeSignup.licensee.mcc}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        mcc: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            disabled={true}\n                            id=\"licensee-productDescription\"\n                            label=\"Product Description\"\n                            name=\"licensee-productDescription\"\n                            autoComplete=\"licensee-productDescription\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.productDescription !== \"\")}\n                            helperText={formValidErrorMessage.licensee.productDescription}\n                            value={licenseeSignup.licensee.productDescription}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        productDescription: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            disabled={true}\n                            type=\"date\"\n                            id=\"licensee-tosAcceptanceDate\"\n                            label=\"Acceptance Date\"\n                            name=\"licensee-tosAcceptanceDate\"\n                            autoComplete=\"licensee-tosAcceptanceDate\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.tosAcceptanceDate !== \"\")}\n                            helperText={formValidErrorMessage.licensee.tosAcceptanceDate}\n                            value={licenseeSignup.licensee.tosAcceptanceDate}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        tosAcceptanceDate: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            disabled={true}\n                            id=\"licensee-tosAcceptanceIP\"\n                            label=\"Acceptance Date\"\n                            name=\"licensee-tosAcceptanceIP\"\n                            autoComplete=\"licensee-tosAcceptanceIP\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.tosAcceptanceIP !== \"\")}\n                            helperText={formValidErrorMessage.licensee.tosAcceptanceIP}\n                            value={licenseeSignup.licensee.tosAcceptanceIP}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        tosAcceptanceIP: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                    </Box>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Save\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\nimport moment from 'moment';\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControl,\n    FormHelperText,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel,\n    Select,\n    MenuItem\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nconst apiUrl = common.apiUrl;\nconst getLicenseeEmployee = `${apiUrl}/admin/licensee/employee`; // GET\nconst putLicenseeEmployee = `${apiUrl}/admin/licensee/employee`; // PUT\n\n\nexport default function LicenseeEmployeeEdit(props) {\n    console.log(\"LicenseeEmployeeEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId, employeeId } = useParams();\n    console.log(\"licenseeId\", licenseeId, \"employeeId\", employeeId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!licenseeId || !employeeId || !userData.acl.LICENSEEEMPLOYEE.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    //--------------------------------------------------------------------------\n\n    const licenseeStart = {\n        employee: {\n            name: \"\",\n            email: \"\",\n            isEmailVerified: false,\n            mobile: \"\",\n            isMobileVerified: false,\n            country: common.country,\n            dob: moment().subtract(18, \"years\").format(\"YYYY-MM-DD\"),\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: common.states[0],\n                country: common.country\n            },\n\n            driverLicense: {\n                card: \"\",\n                expiry: moment().add(1, \"year\").format(\"YYYY-MM\"),\n                state: common.states[0],\n                scanLink: \"\"\n            },\n\n            isDeleted: false,\n\n            photoLink: \"\",\n            additionalDocumentLink: \"\",\n\n            photo: null,\n            driverLicenseScan: null,\n            additionalDocument: null\n        }\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [licenseeSignup, setLicenseeSignup] = useState(licenseeStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    //--------------------------------------------------------------------------\n\n    function formatExpiryDate(inputDate) {\n        const inputComp = inputDate.split(\"/\");\n        let inputDateString = `20${inputComp[1]}-${inputComp[0]}-01`;\n        return moment(inputDateString).format(\"YYYY-MM\");\n    }    \n\n    useEffect(() => {\n        if(employeeId) {\n            const requestOptions = {\n                method: 'GET',\n                headers: authHeader(),\n\n            };\n            fetch(`${getLicenseeEmployee}?id=${employeeId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                console.log(\"Customer API Call Response\", res.customerObj);\n                const employeeObj = res.employeeObj;\n\n                setLicenseeSignup({\n                    employee: {\n                        name: employeeObj.name,\n                        email: employeeObj.email,\n                        isEmailVerified: employeeObj.isEmailVerified,\n                        mobile: employeeObj.mobile,\n                        isMobileVerified: employeeObj.isMobileVerified,\n                        country: employeeObj.country,\n                        dob: moment(employeeObj.dob).format(\"YYYY-MM-DD\"),\n                    \n                        address: {\n                            text: employeeObj.address.text,\n                            pincode: employeeObj.address.pincode,\n                            coordinates: employeeObj.address.coordinates.join(\",\"),\n                            city: employeeObj.address.city,\n                            state: employeeObj.address.state,\n                            country: employeeObj.address.country\n                        },\n                        \n                        driverLicense: {\n                            card: employeeObj.driverLicense.card,\n                            expiry: formatExpiryDate(employeeObj.driverLicense.expiry),\n                            state: employeeObj.driverLicense.state,\n                            scanLink: employeeObj.driverLicense.scan\n                        },\n            \n                        photoLink: employeeObj.photo,\n                        additionalDocumentLink: employeeObj.additionalDocument,\n\n                        isDeleted: employeeObj.isDeleted,\n            \n                        photo: null,\n                        driverLicenseScan: null,\n                        additionalDocument: null\n                    }\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Licensee Employee data\", err);\n            })\n        }\n    }, [loadOnce]);\n\n    //--------------------------------------------------------------------------\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        employee: {\n            name: \"\",\n            email: \"\",\n            mobile: \"\",\n            country: \"\",\n            dob: \"\",\n\n            address: {\n                text: \"\",\n                pincode: \"\",\n                coordinates: \"\",\n                city: \"\",\n                state: \"\",\n                country: \"\"\n            },\n\n            driverLicense: {\n                card: \"\",\n                expiry: \"\",\n                state: \"\"\n            },\n\n            photo: \"\",\n            driverLicenseScan: \"\",\n            additionalDocument: \"\"\n        }\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            (formValidErrorMessage.licensee.name !== \"\") || \n            (formValidErrorMessage.licensee.email !== \"\") || \n            (formValidErrorMessage.licensee.mobile !== \"\") || \n            (formValidErrorMessage.licensee.country !== \"\") || \n\n            (formValidErrorMessage.licensee.businessType !== \"\") || \n\n            (formValidErrorMessage.licensee.address.text !== \"\") || \n            (formValidErrorMessage.licensee.address.pincode !== \"\") || \n            (formValidErrorMessage.licensee.address.coordinates !== \"\") || \n            (formValidErrorMessage.licensee.address.city !== \"\") || \n            (formValidErrorMessage.licensee.address.state !== \"\") || \n            (formValidErrorMessage.licensee.address.country !== \"\") || \n\n            (formValidErrorMessage.licensee.radius !== \"\") || \n            (formValidErrorMessage.licensee.bsbNumber !== \"\") || \n            (formValidErrorMessage.licensee.availability !== \"\") || \n            (formValidErrorMessage.licensee.workingDays !== \"\") ||\n            (formValidErrorMessage.licensee.workingHoursStart !== \"\") || \n            (formValidErrorMessage.licensee.workingHoursEnd !== \"\") || \n            (formValidErrorMessage.licensee.stripeAccountId !== \"\") ||\n            (formValidErrorMessage.licensee.stripeAccountVerified !== \"\") || \n            (formValidErrorMessage.licensee.accountNumber !== \"\") ||\n            (formValidErrorMessage.licensee.mcc !== \"\") ||\n            (formValidErrorMessage.licensee.tosAcceptanceDate !== \"\") || \n            (formValidErrorMessage.licensee.tosAcceptanceIP !== \"\") ||\n            (formValidErrorMessage.licensee.taxId !== \"\") ||\n\n            (formValidErrorMessage.licensee.logo !== \"\") ||\n            (formValidErrorMessage.licensee.proofOfIncorporation !== \"\") || \n\n            (formValidErrorMessage.employee.name !== \"\") || \n            (formValidErrorMessage.employee.email !== \"\") || \n            (formValidErrorMessage.employee.mobile !== \"\") || \n            (formValidErrorMessage.employee.country !== \"\") || \n            (formValidErrorMessage.employee.dob !== \"\") || \n\n            (formValidErrorMessage.employee.address.text !== \"\") || \n            (formValidErrorMessage.employee.address.pincode !== \"\") || \n            (formValidErrorMessage.employee.address.coordinates !== \"\") || \n            (formValidErrorMessage.employee.address.city !== \"\") || \n            (formValidErrorMessage.employee.address.state !== \"\") || \n            (formValidErrorMessage.employee.address.country !== \"\") || \n\n            (formValidErrorMessage.employee.driverLicense.card !== \"\") || \n            (formValidErrorMessage.employee.driverLicense.expiry !== \"\") || \n            (formValidErrorMessage.employee.driverLicense.state !== \"\") || \n            \n            (formValidErrorMessage.employee.photo !== \"\") || \n            (formValidErrorMessage.employee.driverLicenseScan !== \"\") || \n            (formValidErrorMessage.employee.additionalDocument !== \"\")\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        //---------------------------------------------------------------------------\n        \n        console.log(\"licenseeSignup.employee.driverLicense.expiry\", licenseeSignup.employee.driverLicense.expiry);\n        \n        licenseeSignup.employee.dob = moment(licenseeSignup.employee.dob).format(\"YYYY-MM-DD\");\n        licenseeSignup.employee.driverLicense.expiry = moment(licenseeSignup.employee.driverLicense.expiry, \"YYYY-MM\").format(\"MM/YY\");\n\n        console.log(\"licenseeSignup.employee.driverLicense.expiry\", licenseeSignup.employee.driverLicense.expiry);\n\n        licenseeSignup.licensee.workingHours = `${licenseeSignup.licensee.workingHoursStart.replace(\":\",\"\")}-${licenseeSignup.licensee.workingHoursEnd.replace(\":\",\"\")}`\n\n        //---------------------------------------------------------------------------\n\n        const formData = new FormData();\n\n        formData.append('reqBody', JSON.stringify(licenseeSignup));\n\n        // append files --------------------------------------------------\n\n        if(licenseeSignup.employee.photo) {\n            formData.append('employeePhoto', licenseeSignup.employee.photo, licenseeSignup.employee.photo.name);\n        }\n        if(licenseeSignup.employee.driverLicenseScan) {\n            formData.append('employeeDriverLicenseScan', licenseeSignup.employee.driverLicenseScan, licenseeSignup.employee.driverLicenseScan.name);\n        }\n        if(licenseeSignup.employee.additionalDocument) {\n            formData.append('employeeAdditionalDocumentScan', licenseeSignup.employee.additionalDocument, licenseeSignup.employee.additionalDocument.name);\n        }\n\n        let requestOptions = {\n            method: \"PUT\",\n            headers: {\n                ...authHeader()\n            },\n            body: formData\n        };\n        console.log(\"requestOptions\", requestOptions);\n\n    \n        fetch(putLicenseeEmployee, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${putLicenseeEmployee} Response`, res);\n\n            if(res.success) {\n                const employeeObj = res.employeeObj;\n\n                setLicenseeSignup({\n                    employee: {\n                        name: employeeObj.name,\n                        email: employeeObj.email,\n                        isEmailVerified: employeeObj.isEmailVerified,\n                        mobile: employeeObj.mobile,\n                        isMobileVerified: employeeObj.isMobileVerified,\n                        country: employeeObj.country,\n                        dob: moment(employeeObj.dob).format(\"YYYY-MM-DD\"),\n                    \n                        address: {\n                            text: employeeObj.address.text,\n                            pincode: employeeObj.address.pincode,\n                            coordinates: employeeObj.address.coordinates.join(\",\"),\n                            city: employeeObj.address.city,\n                            state: employeeObj.address.state,\n                            country: employeeObj.address.country\n                        },\n                        \n                        driverLicense: {\n                            card: employeeObj.driverLicense.card,\n                            expiry: formatExpiryDate(employeeObj.driverLicense.expiry),\n                            state: employeeObj.driverLicense.state,\n                            scanLink: employeeObj.driverLicense.scan\n                        },\n\n                        isDeleted: employeeObj.isDeleted,\n            \n                        photoLink: employeeObj.photo,\n                        additionalDocumentLink: employeeObj.additionalDocument,\n            \n                        photo: null,\n                        driverLicenseScan: null,\n                        additionalDocument: null\n                    }\n                });\n                \n                setErrorMessage(\"\");\n                setSuccessMessage(\"Successfully saved Licensee data\");\n\n                setTimeout(() => {\n                    setSuccessMessage(\"\");\n                    history.push(\"/adminpanel/licensees\");\n                }, 5000);\n            }\n\n            licenseeSignup.employee.driverLicense.expiry = moment().add(1, \"year\").format(\"YYYY-MM\");\n        })\n        .catch( error => {\n            console.log(`${putLicenseeEmployee} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Licensee data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Employee Edit\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n            \n                <form className={classes.form} noValidate>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography component=\"h5\">\n                            Licensee\n                        </Typography>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-name\"\n                            label=\"Name\"\n                            name=\"licensee-name\"\n                            autoComplete=\"licensee-name\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.name !== \"\")}\n                            helperText={formValidErrorMessage.licensee.name}\n                            value={licenseeSignup.licensee.name}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        name: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-email\"\n                                label=\"Email\"\n                                name=\"licensee-email\"\n                                autoComplete=\"licensee-email\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.email !== \"\")}\n                                helperText={formValidErrorMessage.licensee.email}\n                                value={licenseeSignup.licensee.email}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            email: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.licensee.isEmailVerified} \n                                        name=\"licensee-isEmailVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isEmailVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    isEmailVerified: !licenseeSignup.licensee.isEmailVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Email Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-mobile\"\n                                label=\"Mobile\"\n                                name=\"licensee-mobile\"\n                                autoComplete=\"licensee-mobile\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.mobile !== \"\")}\n                                helperText={formValidErrorMessage.licensee.mobile}\n                                value={licenseeSignup.licensee.mobile}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            mobile: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.licensee.isMobileVerified} \n                                        name=\"licensee-isMobileVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isMobileVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    isMobileVerified: !licenseeSignup.licensee.isMobileVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Mobile Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        {\n                            common.businessType && \n                            <FormControl required>\n                                <InputLabel id=\"licensee-businessType-label\">Business Type</InputLabel>\n                                <Select\n                                    labelId=\"licensee-businessType-label\"\n                                    id=\"licensee-businessType-Select\"\n                                    value={licenseeSignup.licensee.businessType}\n                                    onChange={ (e) => { \n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            licensee: {\n                                                ...licenseeSignup.licensee,\n                                                businessType: e.target.value\n                                            }\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        common.businessType.map((businessType, businessTypeIndex) => {\n                                            console.log(\"businessType\", businessType, businessTypeIndex);\n                                            return (\n                                                <MenuItem key={`businessType-${businessTypeIndex}`} value={businessType}>{businessType}</MenuItem>\n                                            )\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        }\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Address\n                            </Typography>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_text\"\n                                label=\"Address Line\"\n                                name=\"licensee-address_text\"\n                                autoComplete=\"licensee-address_text\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.text !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.text}\n                                value={licenseeSignup.licensee.address.text}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                text: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_pincode\"\n                                label=\"Pincode\"\n                                name=\"licensee-address_pincode\"\n                                autoComplete=\"licensee-address_pincode\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.pincode !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.pincode}\n                                value={licenseeSignup.licensee.address.pincode}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                pincode: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_coordinates\"\n                                label=\"Coordinates (Latitude,Longitude format)\"\n                                name=\"licensee-address_coordinates\"\n                                autoComplete=\"licensee-address_coordinates\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.coordinates !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.coordinates}\n                                value={licenseeSignup.licensee.address.coordinates}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                coordinates: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"licensee-address_city\"\n                                label=\"City\"\n                                name=\"licensee-address_city\"\n                                autoComplete=\"licensee-address_city\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.address.city !== \"\")}\n                                helperText={formValidErrorMessage.licensee.address.city}\n                                value={licenseeSignup.licensee.address.city}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            address: {\n                                                ...licenseeSignup.licensee.address,\n                                                city: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            {\n                                common.states && \n                                <FormControl required>\n                                    <InputLabel id=\"licensee-address_state-label\">State</InputLabel>\n                                    <Select\n                                        labelId=\"licensee-address_state-label\"\n                                        id=\"licensee-address_state-Select\"\n                                        value={licenseeSignup.licensee.address.state}\n                                        onChange={ (e) => { \n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    address: {\n                                                        ...licenseeSignup.licensee.address,\n                                                        state: e.target.value\n                                                    }\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.states.map((state, stateIndex) => {\n                                                console.log(\"state\", state, stateIndex);\n                                                return (\n                                                    <MenuItem key={`state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                        </Box>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-radius\"\n                            label=\"Radius for Trailer Dropoff ( in kilometers )\"\n                            name=\"licensee-radius\"\n                            autoComplete=\"licensee-radius\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.radius !== \"\")}\n                            helperText={formValidErrorMessage.licensee.radius}\n                            value={licenseeSignup.licensee.radius}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        radius: parseInt(e.target.value)\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={licenseeSignup.licensee.availability} \n                                    name=\"licensee-availability\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange availability\", e);\n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            licensee: {\n                                                ...licenseeSignup.licensee,\n                                                availability: !licenseeSignup.licensee.availability\n                                            }\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Licensee Available?\"\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            {\n                                common.days && \n                                <FormControl required>\n                                    <InputLabel id=\"licensee-workingDays-label\">Working Days</InputLabel>\n                                    <Select\n                                        multiple={true}\n                                        labelId=\"licensee-workingDays-label\"\n                                        id=\"licensee-workingDays-Select\"\n                                        value={licenseeSignup.licensee.workingDays}\n                                        onChange={ (e) => { \n                                            console.log(\"e.target\", e.target);\n                                            /* const { options } = e.target;\n                                            console.log(\"workingDays options\", options);\n                                            const value = [];\n                                            for (let i = 0, l = options.length; i < l; i += 1) {\n                                                if (options[i].selected) {\n                                                    value.push(options[i].value);\n                                                }\n                                            }\n                                            console.log(\"workingDays selected\", value); */\n\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                licensee: {\n                                                    ...licenseeSignup.licensee,\n                                                    workingDays: e.target.value\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.days.map((day, dayIndex) => {\n                                                console.log(\"day\", day, dayIndex);\n                                                return (\n                                                    <MenuItem key={`day-${dayIndex}`} value={day}>{day}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                            <label>Working Hours</label>\n\n                            <TextField \n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                aria-label=\"WorkingHours Start\" \n                                required\n                                fullWidth\n                                type=\"time\"\n                                id=\"licensee-workingHours-start\"\n                                label=\"WorkingHours Start\"\n                                name=\"licensee-workingHours-start\"\n                                autoComplete=\"licensee-workingHours-start\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.workingHoursStart !== \"\")}\n                                helperText={formValidErrorMessage.licensee.workingHoursStart}\n                                value={licenseeSignup.licensee.workingHoursStart}\n                                onChange={ (e) => { \n                                    console.log(\"WorkingHours Start\", e.target.value);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            workingHoursStart: e.target.value\n                                        }\n                                    });\n                                } } \n                            />\n\n                            <TextField \n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                aria-label=\"WorkingHours End\" \n                                required\n                                fullWidth\n                                type=\"time\"\n                                id=\"licensee-workingHours-end\"\n                                label=\"WorkingHours End\"\n                                name=\"licensee-workingHours-end\"\n                                autoComplete=\"licensee-workingHours-end\"\n                                autoFocus\n                                error={(formValidErrorMessage.licensee.workingHoursEnd !== \"\")}\n                                helperText={formValidErrorMessage.licensee.workingHoursEnd}\n                                value={licenseeSignup.licensee.workingHoursEnd}\n                                onChange={ (e) => { \n                                    console.log(\"WorkingHours End\", e.target.value);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            workingHoursEnd: e.target.value\n                                        }\n                                    });\n                                } } \n                            />\n\n                        </FormGroup>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-bsbNumber\"\n                            label=\"BSB Number\"\n                            name=\"licensee-bsbNumber\"\n                            autoComplete=\"licensee-bsbNumber\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.bsbNumber !== \"\")}\n                            helperText={formValidErrorMessage.licensee.bsbNumber}\n                            value={licenseeSignup.licensee.bsbNumber}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        bsbNumber: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"licensee-accountNumber\"\n                            label=\"Account Number\"\n                            name=\"licensee-accountNumber\"\n                            autoComplete=\"licensee-accountNumber\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.accountNumber !== \"\")}\n                            helperText={formValidErrorMessage.licensee.accountNumber}\n                            value={licenseeSignup.licensee.accountNumber}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        accountNumber: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            type=\"url\"\n                            id=\"licensee-url\"\n                            label=\"Website URL\"\n                            name=\"licensee-url\"\n                            autoComplete=\"licensee-url\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.url !== \"\")}\n                            helperText={formValidErrorMessage.licensee.url}\n                            value={licenseeSignup.licensee.url}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        url: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth\n                            id=\"licensee-taxId\"\n                            label=\"Tax ID\"\n                            name=\"licensee-taxId\"\n                            autoComplete=\"licensee-taxId\"\n                            autoFocus\n                            error={(formValidErrorMessage.licensee.taxId !== \"\")}\n                            helperText={formValidErrorMessage.licensee.taxId}\n                            value={licenseeSignup.licensee.taxId}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    licensee: {\n                                        ...licenseeSignup.licensee,\n                                        taxId: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Logo\n                            </Typography>\n\n                            {\n                                licenseeSignup.licensee.logoLink && !licenseeSignup.licensee.logo && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.licensee.logoLink}>Logo</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png\"\n                                id=\"licensee-logo\"\n                                multiple\n                                type=\"file\"\n                                name=\"licensee-logo\"\n                                onChange={ (e) => {\n                                    console.log(\"licensee-logo\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            photo: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                                \n                        </Box>\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Proof Of Incorporation\n                            </Typography>\n\n                            {\n                                licenseeSignup.licensee.proofOfIncorporationLink && !licenseeSignup.licensee.proofOfIncorporation && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.licensee.proofOfIncorporationLink}>Proof Of Incorporation</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png, image/pdf\"\n                                id=\"licensee-proofOfIncorporation\"\n                                multiple\n                                type=\"file\"\n                                name=\"licensee-proofOfIncorporation\"\n                                onChange={ (e) => {\n                                    console.log(\"licensee-proofOfIncorporation\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        licensee: {\n                                            ...licenseeSignup.licensee,\n                                            proofOfIncorporation: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                                \n                        </Box>\n\n                    </Box>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography component=\"h5\">\n                            Employee\n                        </Typography>\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"employee-name\"\n                            label=\"Name\"\n                            name=\"employee-name\"\n                            autoComplete=\"employee-name\"\n                            autoFocus\n                            error={(formValidErrorMessage.employee.name !== \"\")}\n                            helperText={formValidErrorMessage.employee.name}\n                            value={licenseeSignup.employee.name}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    employee: {\n                                        ...licenseeSignup.employee,\n                                        name: e.target.value\n                                    }\n                                });\n                            } }\n                        />\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-email\"\n                                label=\"Email\"\n                                name=\"employee-email\"\n                                autoComplete=\"employee-email\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.email !== \"\")}\n                                helperText={formValidErrorMessage.employee.email}\n                                value={licenseeSignup.employee.email}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            email: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.employee.isEmailVerified} \n                                        name=\"employee-isEmailVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isEmailVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    isEmailVerified: !licenseeSignup.employee.isEmailVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Email Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        <FormGroup className=\"SectionContainer\">\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-mobile\"\n                                label=\"Mobile\"\n                                name=\"employee-mobile\"\n                                autoComplete=\"employee-mobile\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.mobile !== \"\")}\n                                helperText={formValidErrorMessage.employee.mobile}\n                                value={licenseeSignup.employee.mobile}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            mobile: e.target.value\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox \n                                        disabled={true}\n                                        checked={licenseeSignup.employee.isMobileVerified} \n                                        name=\"employee-isMobileVerified\"\n                                        onChange={(e) => { \n                                            console.log(\"onChange isMobileVerified\", e);\n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    isMobileVerified: !licenseeSignup.employee.isMobileVerified\n                                                }\n                                            });\n                                        }}  />\n                                }\n                                label=\"Is Mobile Verified?\"\n                            />\n\n                        </FormGroup>\n\n                        <TextField \n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            aria-label=\"Date of Birth\" \n                            required\n                            fullWidth\n                            type=\"date\"\n                            id=\"employee-dob\"\n                            label=\"Date Of Birth\"\n                            name=\"employee-dob\"\n                            autoComplete=\"employee-dob\"\n                            autoFocus\n                            error={(formValidErrorMessage.employee.dob !== \"\")}\n                            helperText={formValidErrorMessage.employee.dob}\n                            value={licenseeSignup.employee.dob}\n                            onChange={ (e) => { \n                                setLicenseeSignup({\n                                    ...licenseeSignup,\n                                    employee: {\n                                        ...licenseeSignup.employee,\n                                        dob: e.target.value\n                                    }\n                                });\n                            } } \n                        />\n                        \n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Address\n                            </Typography>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_text\"\n                                label=\"Address Line\"\n                                name=\"employee-address_text\"\n                                autoComplete=\"employee-address_text\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.text !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.text}\n                                value={licenseeSignup.employee.address.text}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                text: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_pincode\"\n                                label=\"Pincode\"\n                                name=\"employee-address_pincode\"\n                                autoComplete=\"employee-address_pincode\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.pincode !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.pincode}\n                                value={licenseeSignup.employee.address.pincode}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                pincode: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_coordinates\"\n                                label=\"Coordinates (Latitude,Longitude format)\"\n                                name=\"employee-address_coordinates\"\n                                autoComplete=\"employee-address_coordinates\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.coordinates !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.coordinates}\n                                value={licenseeSignup.employee.address.coordinates}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                coordinates: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-address_city\"\n                                label=\"City\"\n                                name=\"employee-address_city\"\n                                autoComplete=\"employee-address_city\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.address.city !== \"\")}\n                                helperText={formValidErrorMessage.employee.address.city}\n                                value={licenseeSignup.employee.address.city}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            address: {\n                                                ...licenseeSignup.employee.address,\n                                                city: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            {\n                                common.states && \n                                <FormControl required>\n                                    <InputLabel id=\"employee-address_state-label\">State</InputLabel>\n                                    <Select\n                                        labelId=\"employee-address_state-label\"\n                                        id=\"employee-address_state-Select\"\n                                        value={licenseeSignup.employee.address.state}\n                                        onChange={ (e) => { \n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    address: {\n                                                        ...licenseeSignup.employee.address,\n                                                        state: e.target.value\n                                                    }\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.states.map((state, stateIndex) => {\n                                                console.log(\"state\", state, stateIndex);\n                                                return (\n                                                    <MenuItem key={`employee-state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                        </Box>\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Driver License\n                            </Typography>\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"employee-driverLicense_card\"\n                                label=\"Driver License Number\"\n                                name=\"employee-driverLicense_card\"\n                                autoComplete=\"employee-driverLicense_card\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.driverLicense.card !== \"\")}\n                                helperText={formValidErrorMessage.employee.driverLicense.card}\n                                value={licenseeSignup.employee.driverLicense.card}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            driverLicense: {\n                                                ...licenseeSignup.employee.driverLicense,\n                                                card: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                type=\"month\"\n                                id=\"employee-driverLicense_expiry\"\n                                label=\"Expiry Date\"\n                                name=\"employee-driverLicense_expiry\"\n                                autoComplete=\"employee-driverLicense_expiry\"\n                                autoFocus\n                                error={(formValidErrorMessage.employee.driverLicense.expiry !== \"\")}\n                                helperText={formValidErrorMessage.employee.driverLicense.expiry}\n                                value={licenseeSignup.employee.driverLicense.expiry}\n                                onChange={ (e) => { \n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            driverLicense: {\n                                                ...licenseeSignup.employee.driverLicense,\n                                                expiry: e.target.value\n                                            }\n                                        }\n                                    });\n                                } }\n                            />\n\n                            {\n                                common.states && \n                                <FormControl required>\n                                    <InputLabel id=\"employee-driverLicense_state-label\">State</InputLabel>\n                                    <Select\n                                        labelId=\"employee-driverLicense_state-label\"\n                                        id=\"employee-driverLicense_state-Select\"\n                                        value={licenseeSignup.employee.driverLicense.state}\n                                        onChange={ (e) => { \n                                            setLicenseeSignup({\n                                                ...licenseeSignup,\n                                                employee: {\n                                                    ...licenseeSignup.employee,\n                                                    driverLicense: {\n                                                        ...licenseeSignup.employee.driverLicense,\n                                                        state: e.target.value\n                                                    }\n                                                }\n                                            });\n                                        } }\n                                        className={classes.selectEmpty}\n                                    >\n                                        {\n                                            common.states.map((state, stateIndex) => {\n                                                console.log(\"state\", state, stateIndex);\n                                                return (\n                                                    <MenuItem key={`driverLicense-state-${stateIndex}`} value={state}>{state}</MenuItem>\n                                                )\n                                            })\n                                        }\n                                    </Select>\n                                </FormControl>\n                            }\n\n                            <Box className=\"SectionContainer\">\n\n                                <Typography variant=\"subtitle1\">\n                                    Scan ( Scan of Front and Back side of Driver License in a single File )\n                                </Typography>\n\n                                {\n                                    licenseeSignup.employee.driverLicense.scanLink && !licenseeSignup.employee.driverLicenseScan && \n                                    (\n                                        <Box className=\"SectionContainer\">\n                                            <a href={licenseeSignup.employee.driverLicense.scanLink}>Scan</a>\n                                        </Box>\n                                    )\n                                }\n\n                                <input\n                                    accept=\"image/jpeg, image/jpg, image/png, application/pdf\"\n                                    id=\"employee-driverLicenseScan\"\n                                    type=\"file\"\n                                    name=\"employee-driverLicenseScan\"\n                                    onChange={ (e) => {\n                                        console.log(\"employee-driverLicenseScan\", e.target.files);\n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            employee: {\n                                                ...licenseeSignup.employee,\n                                                driverLicenseScan: e.target.files[0]\n                                            }\n                                        });\n                                    }}\n                                    />\n\n                                {/* <label htmlFor=\"raised-button-file\">\n                                    <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                        Upload\n                                    </Button>\n                                </label>  */}\n                            </Box>\n\n                        </Box>\n\n                        \n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Photo\n                            </Typography>\n\n                            {\n                                licenseeSignup.employee.photoLink && !licenseeSignup.employee.photo && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.employee.photoLink}>Photo</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png\"\n                                id=\"employee-photo\"\n                                type=\"file\"\n                                name=\"employee-photo\"\n                                onChange={ (e) => {\n                                    console.log(\"employee-photo\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            photo: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n\n                            {/* <label htmlFor=\"raised-button-file\">\n                                <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                    Upload\n                                </Button>\n                            </label>  */}\n                        </Box>\n\n\n                        <Box className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Additional Document\n                            </Typography>\n\n                            {\n                                licenseeSignup.employee.additionalDocumentLink && !licenseeSignup.employee.additionalDocument && \n                                (\n                                    <Box className=\"SectionContainer\">\n                                        <a href={licenseeSignup.employee.additionalDocumentLink}>Additional Document</a>\n                                    </Box>\n                                )\n                            }\n\n                            <input\n                                accept=\"image/jpeg, image/jpg, image/png, application/pdf\"\n                                id=\"employee-additionalDocument\"\n                                type=\"file\"\n                                name=\"employee-additionalDocument\"\n                                onChange={ (e) => {\n                                    console.log(\"employee-additionalDocument\", e.target.files);\n                                    setLicenseeSignup({\n                                        ...licenseeSignup,\n                                        employee: {\n                                            ...licenseeSignup.employee,\n                                            additionalDocument: e.target.files[0]\n                                        }\n                                    });\n                                }}\n                                />\n                        </Box>\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={licenseeSignup.employee.isDeleted} \n                                    name=\"employee-isDeleted\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isDeleted\", e);\n                                        setLicenseeSignup({\n                                            ...licenseeSignup,\n                                            employee: {\n                                                ...licenseeSignup.employee,\n                                                isDeleted: !licenseeSignup.employee.isDeleted\n                                            }\n                                        });\n                                    }}  />\n                            }\n                            label=\"Delete Employee?\"\n                        />\n        \n                    </Box>\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Save\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nconst apiUrl = common.apiUrl;\nconst employeeInviteUrl = `${apiUrl}/licensee/employee/invite`;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\t\twidth: '100%',\n\t},\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\n\nexport default function InviteEmployee(props) {\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let aclSettingsLicensee = localStorage.getItem('aclSettingsLicensee');\n    aclSettingsLicensee = JSON.parse(aclSettingsLicensee);\n    console.log(\"aclSettingsLicensee\", aclSettingsLicensee);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    const { licenseeId } = useParams();\n    console.log(\"licenseeId\", licenseeId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.ADMINEMPLOYEE.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    \n    let token = localStorage.getItem('token');\n\n    const [email, setEmail] = useState('');\n    const [aclSettings, setAclSettings] = useState({});\n    const [acl, setACL] = useState({});\n    const [submitted, setSubmitted] = useState(false);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState(''); \n\n    console.log(\"aclSettingsLicensee\", aclSettingsLicensee);\n\n    useEffect(() => {\n        setAclSettings({\n            ...aclSettingsLicensee\n        });\n\n        const privilegeTypes = Object.keys(aclSettingsLicensee);\n        const initACL = {};\n        privilegeTypes.forEach(privilegeType => {\n            initACL[privilegeType] = [];\n        });\n        setACL({ ...initACL });\n    }, []);\n\n    function handleACLChange(aclType, setting, checked) {\n        console.log(\"handleACLChange\", setting, checked);\n    \n        console.log(\"acList\", acl[aclType].length);\n        const isACPPresent = acl[aclType].includes(setting);\n        let newAcl = [];\n    \n        console.log(\"isACPPresent\", isACPPresent)\n    \n        if(checked && !isACPPresent) {\n            newAcl = {\n                ...acl\n            };\n            newAcl[aclType] = [\n                ...newAcl[aclType],\n                setting\n            ];\n            setACL(newAcl);\n        }\n        if(!checked && isACPPresent) {\n            const newAclType = acl[aclType].filter((acl) => {\n                return acl !== setting\n            });\n    \n            newAcl = {\n                ...acl\n            };\n            newAcl[aclType] = newAclType;\n            setACL(newAcl);\n        }\n        console.log(\"newAcl\", newAcl[aclType].length);\n    }\n\n    function onEmployeeInviteSubmit(e) {\n        e.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json' \n            },\n            body: JSON.stringify({ email, acl })\n        };\n        \n        // console.log(\"config\", config);\n\n        fetch(employeeInviteUrl, requestOptions)\n        .then( res => res.json() )\n        .then(res => {\n            console.log(res);\n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully invited Employee\");\n\n            history.push(\"/adminpanel/\");\n        })\n        .catch( err => {\n            console.log(\"Employee Invite Error\", err);\n            setErrorMessage(\"Error occured while inviting Employee\");\n            setSuccessMessage(\"\");\n        });\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                {/* <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar> */}\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Invite Employee\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={email}\n                        onChange={ (e) => { setEmail(e.target.value) } }\n                    />\n\n                    {\n                        <FormGroup className=\"SectionContainer\">\n\n                            <Typography variant=\"subtitle1\">\n                                Employee Privileges\n                            </Typography>\n\n                            {\n                                aclSettings && Object.keys(aclSettings).map( aclType => {\n\n                                    console.log(\"aclType\", aclType, acl);\n\n                                    return (\n                                        <Fragment key={aclType}>\n                                            <Typography variant=\"subtitle2\">\n                                                { aclType.toUpperCase() }\n                                            </Typography>\n\n                                            <Fragment>\n                                                {\n                                                    acl && acl[aclType] && aclSettings[aclType] && aclSettings[aclType].map((setting, settingIndex) => {\n                                                        console.log(aclType, \"setting\", setting);\n                                                        return (\n                                                            <FormControlLabel key={settingIndex}\n                                                                control={\n                                                                    <Checkbox \n                                                                        checked={acl[aclType].includes(setting)} \n                                                                        name={setting} \n                                                                        onChange={(e) => { \n                                                                            console.log(\"onChange\", e);\n                                                                            handleACLChange(aclType, setting, e.target.checked);\n                                                                        }}  />\n                                                                }\n                                                                label={setting}\n                                                            />\n                                                        );\n                                                    })\n                                                }\n                                            </Fragment>\n                                        </Fragment>\n                                    );\n                                })\n                            }\n                        </FormGroup>\n                    }\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={onEmployeeInviteSubmit}\n                    >\n                        Invite Employee\n                    </Button>\n\n                </form>\n\n            </div>\n        \n        </Container>\n    );\n}\n\n/* function mapState(state) {\n    // const { loggingIn } = state.authentication;\n    // return { loggingIn };\n    return {};\n}\n\nconst actionCreators = {\n    inviteEmployee: userActions.inviteEmployee\n};\n\nconst connectedInviteEmployeePage = connect(mapState, actionCreators)(InviteEmployee);\nexport { connectedInviteEmployeePage as EmployeeInvite }; */","import React, { useState, useEffect } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst saveEmployee = `${apiUrl}/licensee/employee/invite/accept`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\n\n\nexport default function EmployeeInviteAccept(props) {\n    console.log(\"EmployeeInviteAccept\", props);\n\n    const classes = useStyles();\n\n    const query = new URLSearchParams(useLocation().search);\n    const token = query.get(\"token\");\n    console.log(\"Params\", token);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    \n    const [mobile, setMobile] = useState('');\n    const [password, setPassword] = useState('');\n    const [repassword, setRePassword] = useState('');\n    const [name, setName] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [formValidError, setFormValidError] = useState({\n        mobile: false,\n        name: false,\n        password: false,\n        repassword: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        mobile: \"\",\n        name: \"\",\n        password: \"\",\n        repassword: \"\"\n    });\n\n    function validateMobile() {\n\n    }\n\n    function validateName() {\n\n    }\n\n    function validatePasswords(password, repassword) {\n        const messagePasswordMatch = \"Passwords don't match\";\n        const messagePasswordInvalidFormat = \"Password should be 8 or more characters long. Password should contain one Uppercase Alphabetical Character, one Lowercase Alphabetical Character, one Numeric Character and one Special Character.\";\n\n        const doPasswordsMatch = (password === repassword);\n        const isPasswordsValid = strongRegex.test(password);\n        const isRePasswordValid = strongRegex.test(repassword);\n\n        console.log(\"doPasswordsMatch\", doPasswordsMatch, \"isPasswordsValid\", isPasswordsValid, \"isRePasswordValid\", isRePasswordValid);\n\n        let errorPassword = \"\";\n        if(!doPasswordsMatch) {\n            errorPassword += `${messagePasswordMatch} `;\n        } \n        if(!isPasswordsValid) {\n            errorPassword += `${messagePasswordInvalidFormat} `;\n        }\n\n        let copyFormValidError = {\n            ...formValidError\n        };\n        let copyFormValidErrorMessage = { \n            ...formValidErrorMessage\n        };\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: errorPassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n\n        \n        let errorRePassword = \"\";\n        if(!doPasswordsMatch) {\n            errorRePassword += `${messagePasswordMatch} `;\n        } \n        if(!isRePasswordValid) {\n            errorRePassword += `${messagePasswordInvalidFormat} `;\n        }\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: errorRePassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.mobile || \n            formValidError.name || \n            formValidError.password\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                token: token,\n                mobile: mobile,\n                password: password,\n                name: name\n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveEmployee, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveEmployee} Response`, res);\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Employee data\");\n\n            setMobile(\"\");\n            setName(\"\");\n            setPassword(\"\");\n            setRePassword(\"\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n                history.push(\"/adminpanel/\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveEmployee} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Employee data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Accept Employee Invite\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"mobile\"\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        autoComplete=\"mobile\"\n                        autoFocus\n                        error={formValidError.mobile}\n                        helperText={formValidErrorMessage.mobile}\n                        value={mobile}\n                        onChange={ (e) => { \n                            setMobile(e.target.value);\n                            validateMobile();\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={name}\n                        onChange={ (e) => { \n                            setName(e.target.value);\n                            validateName();\n                        } }\n                    />\n                \n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        error={formValidError.password}\n                        helperText={formValidErrorMessage.password}\n                        onChange={ (e) => { \n                            setPassword(e.target.value);\n                            validatePasswords(e.target.value, repassword);\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"repassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        id=\"repassword\"\n                        autoComplete=\"confirm-password\"\n                        error={formValidError.repassword}\n                        helperText={formValidErrorMessage.repassword}\n                        value={repassword}\n                        onChange={ (e) => { \n                            setRePassword(e.target.value);\n                            validatePasswords(password, e.target.value);\n                        } }\n                    />\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Accept\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport {\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchEmployeesAPI = `${apiUrl}/admin/licensee/employees`;\nconst generateOTPAPI = `${apiUrl}/admin/employee/generateotp`;\nconst verifyOTPAPI = `${apiUrl}/admin/employee/verifyotp`;\nconst resendInviteAPI = `${apiUrl}/admin/employee/resendinvite`;\nconst forgotPasswordAPI = `${apiUrl}/admin/employee/forgotpassword`;\nconst resetPasswordAPI = `${apiUrl}/admin/employee/resetpassword`;\nconst deleteEmployeeAPI = `${apiUrl}/admin/employee/delete`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction TableActionButton(props) {\n    console.log(\"TableActionButton\", props);\n    return (\n        <span>{props.title}</span>\n    );\n}\n\nfunction EmployeeList(props) {\n    console.log(\"EmployeeList called\");\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId } = useParams();\n    console.log(\"licenseeId\", licenseeId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.LICENSEEEMPLOYEE.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = useState([]);\n    const [totalCount, setTotalCount] = useState(0);\n\n    //-------------------------------------------------------------------------\n    \n    const [dialogState, setDialogState] = useState(false);\n    const [otp, setOTP] = useState(\"\");\n    const [otpVerifySucess, setOTPVerifySucess] = useState(\"\");\n    const [mobile, setMobile] = useState(\"\");\n\n    function handleClickOpen() {\n        setDialogState(true);\n    }\n    \n    function handleClose() {\n        setDialogState(false);\n    }\n\n    function handleVerifyOTP() {\n        const requestOptions = {\n            method: 'POST',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                mobile: mobile, \n                // mobile: \"919664815262\",\n                country: common.country,\n                otp: otp \n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(verifyOTPAPI, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${verifyOTPAPI} Response`, res);\n            // rowData.driverLicense.verified = true;\n            // rowData.driverLicense.accepted = true;\n            if(tableRef.current) {\n                tableRef.current.onQueryChange();\n            }\n\n            setOTPVerifySucess(\"OTP Verified Successfully\")\n            setMobile(\"\");\n            setTimeout(() => {\n                handleClose();\n            }, 5000);\n            \n        })\n        .catch( error => {\n            console.log(`${verifyOTPAPI} Error`, error);\n        });\n    }\n\n    //-------------------------------------------------------------------------\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={`t2y-list t2y-employeelist ${classes.root}`}>\n            <Dialog open={dialogState} \n                    onClose={handleClose} \n                    aria-labelledby=\"form-dialog-title\"\n                    disableBackdropClick={true}\n                    disableEscapeKeyDown={true}>\n                <DialogTitle id=\"form-dialog-title\">OTP Verification</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please Enter OTP\n                    </DialogContentText>\n                    { \n                        (otpVerifySucess !== \"\") &&\n                        <DialogContentText>{otpVerifySucess}</DialogContentText>\n                    }\n                    <TextField\n                        autoFocus\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"OTP\"\n                        type=\"otp\"\n                        value={otp}\n                        onChange={ (e) => { \n                            setOTP( e.target.value );\n                        } }\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleVerifyOTP} color=\"primary\">\n                        Verify\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <MaterialTable \n                title=\"Employees\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'employeeRef', \n                        render: rowData => {\n                            return rowData.employeeRef\n                        } \n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return (rowData.name && rowData.name) ? `${rowData.name}` : rowData.name\n                        } \n                    },\n                    { \n                        title: 'Email', \n                        field: 'email', \n                        render: rowData => {\n                            return rowData.email\n                        } \n                    },\n                    { \n                        title: 'Email Verified', \n                        field: 'isEmailVerified', \n                        render: rowData => {\n                            return rowData.isEmailVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Mobile', \n                        field: 'mobile', \n                        render: rowData => {\n                            return rowData.mobile\n                        } \n                    },\n                    { \n                        title: 'Mobile Verified', \n                        field: 'isMobileVerified', \n                        render: rowData => {\n                            return rowData.isMobileVerified ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Is Owner', \n                        field: 'isOwner', \n                        render: rowData => {\n                            return rowData.isOwner ? \"Yes\": \"No\"\n                        } \n                    },\n                    { \n                        title: 'Driver License', \n                        field: 'driverLicense', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    { \n                                        rowData.driverLicense ?\n\n                                        (\n                                            <div>\n                                                {\n                                                    rowData.driverLicense.card ? \n                                                    (<div><b>Card</b> : {rowData.driverLicense.card}</div>) :\n                                                    (<div><b>Card</b> : Not Available</div>)\n                                                }\n                                                {\n                                                    rowData.driverLicense.expiry ? \n                                                    (<div><b>Expiry</b> : {rowData.driverLicense.expiry}</div>) :\n                                                    (<div><b>Expiry</b> : Not Available</div>)\n                                                }\n                                                {\n                                                    rowData.driverLicense.state ? \n                                                    (<div><b>State</b> : {rowData.driverLicense.state}</div>) :\n                                                    (<div><b>State</b> : Not Available</div>)\n                                                }\n                                                {\n                                                    rowData.driverLicense.scan ? \n                                                    (\n                                                        <div><b>Scan</b> : \n                                                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={rowData.driverLicense.scan}>Download</a>\n                                                        </div>\n                                                    ) : \n                                                    (<div><b>Scan</b> : Not Available</div>)\n                                                }\n                                            </div>\n                                        )\n\n                                        :\n\n                                        (\n                                            <div>Data Not available</div>\n                                        )\n                                    }\n                                </div>\n                            );\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"Employee MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchEmployeesAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchEmployeesAPI}`, requestOptions)\n                            fetch(`${fetchEmployeesAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchEmployeesAPI} Response`, res);\n                                const employeeList = res.employeeList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof employeeList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...employeeList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: employeeList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(\"getEmployees Error\", error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        {\n                            icon: () => { return (<TableActionButton title=\"Resend OTP\" />) },\n                            tooltip: \"Resend OTP\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Resend OTP onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        employeeId: rowData._id,\n                                        mobile: rowData.mobile, \n                                        // mobile: \"919664815262\",\n                                        country: common.country \n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(generateOTPAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${generateOTPAPI} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n\n                                    setMobile(rowData.mobile);\n                                    handleClickOpen();\n                                })\n                                .catch( error => {\n                                    console.log(`${generateOTPAPI} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: () => { return (<TableActionButton title=\"Verify Email\" />) } ,\n                            tooltip: \"Verify Email\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Verify Email\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        employeeId: rowData._id,\n                                        email: rowData.email\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(resendInviteAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${resendInviteAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${resendInviteAPI} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: () => { return (<TableActionButton title=\"Send Reset Password Link\" />) } ,\n                            tooltip: \"Send Reset Password Link\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Forgot Password\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        employeeId: rowData._id,\n                                        email: rowData.email\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(forgotPasswordAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${forgotPasswordAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${forgotPasswordAPI} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: () => { return (<TableActionButton title=\"Resend Invite\" />) } ,\n                            tooltip: \"Resend Invite\",\n                            onClick: (event, rowData) => {\n                                if(!rowData.acceptedInvite) {\n                                    console.log(\"Resend Invite\", event, rowData);\n                                    const requestOptions = {\n                                        method: 'POST',\n                                        headers: { \n                                            ...authHeader(),\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify({ \n                                            employeeId: rowData._id,\n                                            email: rowData.email\n                                        })\n                                    };\n                                    console.log(\"requestOptions\", requestOptions);\n                                \n                                    fetch(resendInviteAPI, requestOptions)\n                                    .then( res => res.json() )\n                                    .then( res => {\n                                        console.log(`${resendInviteAPI} Response`, res);\n                                        if(tableRef.current) {\n                                            tableRef.current.onQueryChange();\n                                        }\n                                    })\n                                    .catch( error => {\n                                        console.log(`${resendInviteAPI} Error`, error);\n                                    });\n                                } else {\n                                    console.log(\"Resend Invite\", rowData.acceptedInvite);\n                                }\n                            }\n                        },\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Employee\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/employee/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"delete\",\n                            tooltip: \"Delete Employee\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Delete Employee\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        employeeId: rowData._id\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(deleteEmployeeAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${deleteEmployeeAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${deleteEmployeeAPI} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Invite Licensee Employee\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Invite Licensee Employee onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/employee/invite`);\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\n\nexport default EmployeeList;","import React, { useState, useEffect } from 'react';\nimport {\n    useLocation\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n\nconst apiUrl = common.apiUrl;\nconst employeeResetPasswordUrl = `${apiUrl}/licensee/employee/resetpassword`;\n\nexport default function EmployeeInviteAccept(props) {\n    console.log(\"EmployeeInviteAccept\", props);\n\n    const classes = useStyles();\n\n    const query = new URLSearchParams(useLocation().search);\n    const token = query.get(\"token\");\n    console.log(\"Params\", token);\n\n    const [password, setPassword] = useState('');\n    const [repassword, setRePassword] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const [formValidError, setFormValidError] = useState({\n        password: false,\n        repassword: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        password: \"\",\n        repassword: \"\"\n    });\n\n    function validatePasswords(password, repassword) {\n        const messagePasswordMatch = \"Passwords don't match\";\n        const messagePasswordInvalidFormat = \"Password should be 8 or more characters long. Password should contain one Uppercase Alphabetical Character, one Lowercase Alphabetical Character, one Numeric Character and one Special Character.\";\n\n        const doPasswordsMatch = (password === repassword);\n        const isPasswordsValid = strongRegex.test(password);\n        const isRePasswordValid = strongRegex.test(repassword);\n\n        console.log(\"doPasswordsMatch\", doPasswordsMatch, \"isPasswordsValid\", isPasswordsValid, \"isRePasswordValid\", isRePasswordValid);\n\n        let errorPassword = \"\";\n        if(!doPasswordsMatch) {\n            errorPassword += `${messagePasswordMatch} `;\n        } \n        if(!isPasswordsValid) {\n            errorPassword += `${messagePasswordInvalidFormat} `;\n        }\n\n        let copyFormValidError = {\n            ...formValidError\n        };\n        let copyFormValidErrorMessage = { \n            ...formValidErrorMessage\n        };\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                password: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                password: errorPassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n\n        \n        let errorRePassword = \"\";\n        if(!doPasswordsMatch) {\n            errorRePassword += `${messagePasswordMatch} `;\n        } \n        if(!isRePasswordValid) {\n            errorRePassword += `${messagePasswordInvalidFormat} `;\n        }\n        \n        if(doPasswordsMatch && isPasswordsValid) {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: false\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: \"\"\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        } else {\n            copyFormValidError = {\n                ...copyFormValidError,\n                repassword: true\n            };\n            setFormValidError(copyFormValidError);\n\n            copyFormValidErrorMessage = { \n                ...copyFormValidErrorMessage,\n                repassword: errorRePassword\n            };\n            setFormValidErrorMessage(copyFormValidErrorMessage);\n        }\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.password\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \n                token: token,\n                password: password\n            })\n        };\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(employeeResetPasswordUrl, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${employeeResetPasswordUrl} Response`, res);\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Password\");\n        \n            setPassword(\"\");\n            setRePassword(\"\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${employeeResetPasswordUrl} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Password\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    Reset Password\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        error={formValidError.password}\n                        helperText={formValidErrorMessage.password}\n                        onChange={ (e) => { \n                            setPassword(e.target.value);\n                            validatePasswords(e.target.value, repassword);\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"repassword\"\n                        label=\"Confirm Password\"\n                        type=\"password\"\n                        id=\"repassword\"\n                        autoComplete=\"confirm-password\"\n                        error={formValidError.repassword}\n                        helperText={formValidErrorMessage.repassword}\n                        value={repassword}\n                        onChange={ (e) => { \n                            setRePassword(e.target.value);\n                            validatePasswords(password, e.target.value);\n                        } }\n                    />\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Save Password\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel, \n    Select,\n    MenuItem, \n    FormHelperText,\n    FormControl\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchTrailerTypesAPI = `${apiUrl}/admin/trailers`;\nconst getLicenseeTrailer = `${apiUrl}/admin/licensee/trailer`;\nconst saveLicenseeTrailer = `${apiUrl}/admin/licensee/trailer`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nfunction getReadableDuration(durationIn) {\n    if(durationIn === 1) {\n        return \"Additional Day\";\n    } \n    const msHours = 60 * 60 * 1000;\n    const durationHours = Math.floor(durationIn / msHours);\n    if(durationHours < 24) {\n        return `${durationHours} Hours`;\n    }\n    const durationDays = Math.floor(durationHours/24);\n    return `${durationDays} Days`;\n}\n\nexport default function TrailerEdit(props) {\n    console.log(\"TrailerEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId, trailerId } = useParams();\n    console.log(\"licenseeId\", licenseeId, \"trailerId\", trailerId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!trailerId && !userData.acl.TRAILER.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    if(trailerId && !userData.acl.TRAILER.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    let rentalItemTypesList = localStorage.getItem('rentalitemtypes');\n    rentalItemTypesList = JSON.parse(rentalItemTypesList);\n    console.log(\"rentalItemTypesList\", rentalItemTypesList);\n\n    const rentalItemTypesTrailersList = rentalItemTypesList.filter(rentalItemType => {\n        return (rentalItemType.itemtype === \"trailer\");\n    });\n\n    const trailerStart = {\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        size: \"\",\n        capacity: \"\",\n        tare: \"\",\n        features: [],\n\n        rentalCharges: [],\n        dlrCharges: 0,\n        isFeatured: false,\n\n        photosLinks: [],\n        photos: null,\n\n        adminRentalItemId: \"\",\n        availability: false,\n        vin: \"\",\n        age: 0\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [adminTrailers, setAdminTrailers] = useState([]);\n    const [trailer, setTrailer] = useState(trailerStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'GET',\n            headers: authHeader()\n        };\n        fetch(`${fetchTrailerTypesAPI}`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            const trailersList = res.trailersList;\n\n            const adminTrailer = trailersList[0];\n            trailerStart.adminRentalItemId = adminTrailer._id;\n            \n            setAdminTrailers([\n                ...adminTrailers,\n                ...trailersList\n            ]);\n\n            console.log(\"adminTrailers\", trailersList, \"trailerStart.adminRentalItemId\", trailerStart.adminRentalItemId);\n            setTrailer({\n                ...trailer,\n                adminRentalItemId: adminTrailer._id,\n                name: adminTrailer.name,\n                type: adminTrailer.type,\n                description: adminTrailer.description,\n                size: adminTrailer.size,\n                capacity: adminTrailer.capacity,\n                tare: adminTrailer.tare,\n                features: adminTrailer.features,\n                rentalCharges: adminTrailer.rentalCharges,\n                dlrCharges: adminTrailer.dlrCharges,\n                isFeatured: adminTrailer.isFeatured\n            });\n        })\n        .catch( err => {\n            console.log(\"Error occurred while fetching Trailer data\", err);\n        });\n\n        //----------------------------------------------------------------------\n\n        if(trailerId) {\n            fetch(`${getLicenseeTrailer}?id=${trailerId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                const trailerObj = res.trailerObj;\n                \n                setTrailer({\n                    ...trailer,\n                    name: trailerObj.name,\n                    type: trailerObj.type,\n                    description: trailerObj.description,\n                    size: trailerObj.size,\n                    capacity: trailerObj.capacity,\n                    tare: trailerObj.tare,\n                    features: trailerObj.features,\n\n                    rentalCharges: trailerObj.rentalCharges,\n                    dlrCharges: trailerObj.dlrCharges,\n\n                    photosLinks: trailerObj.photos,\n                    photos: null,\n                    \n                    adminRentalItemId: trailerObj.adminRentalItemId,\n                    availability: trailerObj.availability ? trailerObj.availability : false,\n                    vin: trailerObj.vin ? trailerObj.vin : \"\",\n                    age: trailerObj.age ? trailerObj.age : 0\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Trailer data\", err);\n            });\n        }\n    }, [loadOnce]);\n \n    const [formValidError, setFormValidError] = useState({\n        name: false,\n        type: false,\n        description: false,\n        size: false,\n        capacity: false,\n        tare: false,\n        features: false,\n        rentalCharges: false,\n        dlrCharges: false,\n        isFeatured: false,\n        photos: false,\n\n        adminRentalItemId: false,\n        availability: false,\n        vin: false,\n        age: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        size: \"\",\n        capacity: \"\",\n        tare: \"\",\n        features: \"\",\n        rentalCharges: \"\",\n        dlrCharges: \"\",\n        isFeatured: \"\",\n        photos: \"\",\n\n        adminRentalItemId: \"\",\n        availability: \"\",\n        vin: \"\",\n        age: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.name ||\n            formValidError.type ||\n            formValidError.description ||\n            formValidError.size ||\n            formValidError.capacity ||\n            formValidError.tare ||\n            formValidError.features ||\n            formValidError.rentalCharges ||\n            formValidError.dlrCharges ||\n            formValidError.isFeatured ||\n            formValidError.photos || \n\n            formValidError.adminRentalItemId || \n            formValidError.availability || \n            formValidError.vin || \n            formValidError.age\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        let requestOptions = {\n            method: 'POST'\n        };\n\n        if(trailer.photos) {\n            const formData = new FormData();\n\n            formData.append('name', trailer.name);\n            formData.append('type', trailer.type);\n            formData.append('description', trailer.description);\n            formData.append('size', trailer.size);\n            formData.append('capacity', trailer.capacity);\n            formData.append('tare', trailer.capacity);\n            formData.append('features', trailer.features);\n\n            formData.append('adminRentalItemId', trailer.adminRentalItemId);\n            formData.append('availability', trailer.availability);\n            formData.append('vin', trailer.vin);\n            formData.append('age', trailer.age);\n\n            formData.append('licenseeId', licenseeId);\n\n            if(trailer.photos && trailer.photos.length > 0) {\n                for(let i = 0; i < trailer.photos.length; i++) {\n                    formData.append('photos', trailer.photos[i], trailer.photos[i].name);\n                }\n            }\n\n            if(trailerId) {\n                formData.append('_id', trailerId);\n            }\n\n            console.log(\"formData\", formData);\n\n            requestOptions.headers = { \n                ...authHeader()\n            };\n            requestOptions.body = formData;\n        } else {\n            const reqObj = {\n                name: trailer.name,\n                type: trailer.type,\n                description: trailer.description,\n                size: trailer.size,\n                capacity: trailer.capacity,\n                tare: trailer.tare,\n                features: trailer.features,\n\n                adminRentalItemId: trailer.adminRentalItemId,\n                availability: trailer.availability,\n                vin: trailer.vin,\n                age: trailer.age,\n\n                licenseeId: licenseeId\n            };\n\n            if(trailerId) {\n                reqObj._id = trailerId;\n            }\n\n            requestOptions.headers = { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            };\n            requestOptions.body = JSON.stringify(reqObj);\n        }\n\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveLicenseeTrailer, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveLicenseeTrailer} Response`, res);\n\n            const trailerObj = res.trailerObj;\n                \n            setTrailer({\n                ...trailer,\n                name: trailerObj.name,\n                type: trailerObj.type,\n                description: trailerObj.description,\n                size: trailerObj.size,\n                capacity: trailerObj.capacity,\n                tare: trailerObj.tare,\n                features: trailerObj.features,\n\n                adminRentalItemId: trailerObj.adminRentalItemId ? trailerObj.adminRentalItemId : false,\n                availability: trailerObj.availability ? trailerObj.availability : false,\n                vin: trailerObj.vin,\n                age: trailerObj.age,\n\n                photosLinks: trailerObj.photos\n            });\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Trailer data\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveLicenseeTrailer} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Trailer data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    { trailerId ? \"Edit Trailer\" : \"Add Trailer\" }\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} encType=\"multipart/form-data\" noValidate>\n\n                    { \n                        adminTrailers && trailer.adminRentalItemId && \n                        <Box className=\"SectionContainer\">\n                            <FormControl required fullWidth className=\"SectionContainer\">\n                                <InputLabel id=\"adminRentalItemId-label\">Select Trailer Type</InputLabel>\n                                <Select\n                                    labelId=\"adminRentalItemId-label\"\n                                    id=\"adminRentalItemId-Select\"\n                                    value={trailer.adminRentalItemId}\n                                    onChange={ (e) => { \n                                        const adminTrailer = adminTrailers.find( adminTrailer =>{\n                                            return (e.target.value === adminTrailer._id);\n                                        });\n                                        setTrailer({\n                                            ...trailer,\n                                            adminRentalItemId: adminTrailer._id,\n                                            name: adminTrailer.name,\n                                            type: adminTrailer.type,\n                                            description: adminTrailer.description,\n                                            size: adminTrailer.size,\n                                            capacity: adminTrailer.capacity,\n                                            tare: adminTrailer.tare,\n                                            features: adminTrailer.features,\n                                            rentalCharges: adminTrailer.rentalCharges,\n                                            dlrCharges: adminTrailer.dlrCharges,\n                                            isFeatured: adminTrailer.isFeatured\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        adminTrailers.map((adminTrailer, adminTrailerIndex) => {\n                                            console.log(\"adminTrailer\", adminTrailer._id, adminTrailer.name);\n                                            return (<MenuItem key={`type-${adminTrailer._id}`} value={adminTrailer._id}>{adminTrailer.name}</MenuItem>)\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"vin\"\n                        label=\"VIN\"\n                        name=\"vin\"\n                        autoComplete=\"vin\"\n                        autoFocus\n                        error={formValidError.vin}\n                        helperText={formValidErrorMessage.vin}\n                        value={trailer.vin}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                vin: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"age\"\n                        label=\"Age\"\n                        name=\"age\"\n                        autoComplete=\"age\"\n                        autoFocus\n                        error={formValidError.age}\n                        helperText={formValidErrorMessage.age}\n                        value={trailer.age}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                age: parseInt(e.target.value)\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={trailer.name}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                name: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"type\"\n                        label=\"Type\"\n                        name=\"type\"\n                        autoComplete=\"type\"\n                        autoFocus\n                        error={formValidError.type}\n                        helperText={formValidErrorMessage.type}\n                        value={trailer.type}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                type: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField \n                        aria-label=\"description\" \n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"Description\"\n                        name=\"description\"\n                        autoComplete=\"description\"\n                        autoFocus\n                        multiline={true}\n                        error={formValidError.description}\n                        helperText={formValidErrorMessage.description}\n                        value={trailer.description}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                description: e.target.value\n                            });\n                        } } />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"size\"\n                        label=\"Size\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        autoFocus\n                        error={formValidError.size}\n                        helperText={formValidErrorMessage.size}\n                        value={trailer.size}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                size: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"capacity\"\n                        label=\"Capacity\"\n                        name=\"capacity\"\n                        autoComplete=\"capacity\"\n                        autoFocus\n                        error={formValidError.capacity}\n                        helperText={formValidErrorMessage.capacity}\n                        value={trailer.capacity}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                capacity: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"tare\"\n                        label=\"Tare\"\n                        name=\"tare\"\n                        autoComplete=\"tare\"\n                        autoFocus\n                        error={formValidError.tare}\n                        helperText={formValidErrorMessage.tare}\n                        value={trailer.tare}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                tare: e.target.value\n                            });\n                        } }\n                    />\n\n                    {\n                        <FormGroup className=\"SectionContainer\">\n\n                            <Grid container spacing={0}>\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle1\">\n                                        Features\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={6} className=\"TextAlignRight\">\n                                    <Button\n                                        type=\"button\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                        onClick={ (e) => {\n                                            const newFeatures = [...trailer.features];\n                                            newFeatures.push(\"\");\n                                            setTrailer({\n                                                ...trailer,\n                                                features: newFeatures\n                                            });\n                                        } }\n                                    >\n                                        Add\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                            {\n                                trailer.features.map((feature, featureIndex) => {\n                                    return (\n                                        <TextField\n                                            key={featureIndex}\n                                            variant=\"outlined\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            label=\"Feature\"\n                                            name=\"feature\"\n                                            autoComplete=\"feature\"\n                                            autoFocus\n                                            error={formValidError.features}\n                                            helperText={formValidErrorMessage.features}\n                                            value={feature}\n                                            onChange={ (e) => { \n                                                const newFeatures = [...trailer.features];\n                                                newFeatures[featureIndex] = e.target.value; \n                                                setTrailer({\n                                                    ...trailer,\n                                                    features: newFeatures\n                                                });\n                                            } }\n                                        />\n                                    );\n                                })\n                            }\n                        </FormGroup>\n                    }\n\n                    {\n                        trailer.rentalCharges && \n                        (\n                            <Grid container spacing={0} className=\"SectionContainer\">\n                                \n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\">\n                                        Rental Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Pickup Charges\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Door2Door Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { trailer.rentalCharges.pickUp && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {trailer.rentalCharges.pickUp.map((charge, chargeIndex) => (\n                                                    <TableRow key={`pickup-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { trailer.rentalCharges && trailer.rentalCharges.door2Door && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {trailer.rentalCharges.door2Door.map((charge, chargeIndex) => (\n                                                    <TableRow key={`door2door-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n                            \n                            </Grid>\n                        )\n                    }\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"dlrCharges\"\n                        label=\"Damage Liability Reduction Charges\"\n                        name=\"dlrCharges\"\n                        autoComplete=\"dlrCharges\"\n                        autoFocus\n                        error={formValidError.dlrCharges}\n                        helperText={formValidErrorMessage.dlrCharges}\n                        value={trailer.dlrCharges}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                dlrCharges: e.target.value\n                            });\n                        } }\n                    />\n\n                    <FormGroup className=\"SectionContainer\">\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    disabled={true}\n                                    checked={trailer.isFeatured} \n                                    name=\"isFeatured\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isFeatured\", e);\n                                        setTrailer({\n                                            ...trailer,\n                                            isFeatured: !trailer.isFeatured\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Featured Trailer Type?\"\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={trailer.availability}\n                                    name=\"availability\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange availability\", (typeof e.target.value), e.target.value);\n                                        console.log(\"trailer.availability\", (typeof trailer.availability));\n                                        setTrailer({\n                                            ...trailer,\n                                            availability: !trailer.availability\n                                        });\n                                    }}  />\n                            }\n                            label=\"Set as availability to be Rented?\"\n                        />\n\n                    </FormGroup>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Photos\n                        </Typography>\n\n                        {\n                            !trailer.photos && \n                            (\n                                <Box className=\"SectionContainer\">\n                                {\n                                    trailer.photosLinks.map((photo, photoIndex) => {\n                                        return (\n                                            <div key={trailer._id+\"_photo\"+photoIndex}>\n                                                <a href={photo}>Photo {(photoIndex + 1)}</a>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                </Box>\n                            )\n                        }\n\n                        <input\n                            accept=\"image/jpeg, image/jpg, image/png\"\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            name=\"photos\"\n                            onChange={ (e) => {\n                                console.log(e.target.files);\n                                setTrailer({\n                                    ...trailer,\n                                    photos: e.target.files\n                                });\n                            }}\n                            />\n\n                        {/* <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload\n                            </Button>\n                        </label>  */}\n                    </Box>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Update\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchTrailersAPI = `${apiUrl}/admin/licensee/trailers`;\nconst setTrailerAvailabilityAPI = `${apiUrl}/admin/licensee/trailer/availability`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction TableActionButton(props) {\n    console.log(\"TableActionButton\", props);\n    return (\n        <span>{props.title}</span>\n    );\n}\n\nfunction TrailerList(props) {\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId } = useParams();\n    console.log(\"licenseeId\", licenseeId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.TRAILER.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Trailer List\"\n                tableRef={tableRef}\n                search={false}\n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'trailerRef', \n                        render: rowData => {\n                            return rowData.trailerRef\n                        } \n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return rowData.name\n                        }\n                    },\n                    { \n                        title: 'VIN', \n                        field: 'vin', \n                        render: rowData => {\n                            return rowData.vin\n                        }\n                    },\n                    { \n                        title: 'Age', \n                        field: 'age', \n                        render: rowData => {\n                            return rowData.age\n                        }\n                    },\n                    { \n                        title: 'Type', \n                        field: 'type', \n                        render: rowData => {\n                            return rowData.type\n                        }\n                    },\n                    { \n                        title: 'Description', \n                        field: 'description', \n                        render: rowData => {\n                            return (\n                                <div style={{\n                                    /* height: \"100px\", \n                                    whiteSpace: \"nowrap\",\n                                    overflow: \"hidden\",\n                                    textOverflow: \"ellipsis\"  */\n                                }}>{rowData.description}</div>\n                            )\n                        }\n                    },\n                    { \n                        title: 'Size', \n                        field: 'size', \n                        render: rowData => {\n                            return rowData.size\n                        }\n                    },\n                    { \n                        title: 'Capacity', \n                        field: 'capacity', \n                        render: rowData => {\n                            return rowData.capacity\n                        }\n                    },\n                    { \n                        title: 'Tare', \n                        field: 'tare', \n                        render: rowData => {\n                            return rowData.tare\n                        }\n                    },\n                    { \n                        title: 'Features', \n                        field: 'features', \n                        render: rowData => {\n                            return rowData.features\n                        }\n                    },\n                    { \n                        title: 'Photos', \n                        field: 'photos', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    {\n                                        rowData.photos.map((photo, photoIndex) => {\n                                            return (\n                                                <div>\n                                                    <a key={rowData._id+\"_photo\"+photoIndex} href={photo}>Photo {(photoIndex + 1)}</a>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            );\n                        }\n                    },\n                    { \n                        title: 'Is Available?', \n                        field: 'availability', \n                        render: rowData => {\n                            return rowData.availability ? \"Yes\" : \"No\"\n                        }\n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchTrailersAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchTrailersAPI}`, requestOptions)\n                            fetch(`${fetchTrailersAPI}?licenseeId=${licenseeId}&count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchTrailersAPI} Response`, res);\n                                const trailersList = res.trailersList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof trailersList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...trailersList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: trailersList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchTrailersAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title={rowData.availability ? \"Set as Unavailable\" : \"Set as Available\"} />) } ,\n                            tooltip: (rowData.availability ? \"Set as Unavailable\" : \"Set as Available\"),\n                            onClick: (event, rowData) => {\n                                console.log(\"Set as Unavailable\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        trailerId: rowData._id,\n                                        availability: !rowData.availability\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(setTrailerAvailabilityAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${setTrailerAvailabilityAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${setTrailerAvailabilityAPI} Error`, error);\n                                });\n                            }\n                        }),\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Trailer\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/trailer/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add Trailer\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Add onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/trailer/add`);\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1,\n                        rowStyle: {\n                            height: \"100px\",\n                            maxHeight: \"100px\",\n                            overflow: \"scroll\"\n                        }\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\nexport default TrailerList;","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel, \n    Select,\n    MenuItem, \n    FormHelperText,\n    FormControl\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst getAdminUpsellItems = `${apiUrl}/admin/upsellitems`;\nconst getLicenseeTrailers = `${apiUrl}/admin/licensee/trailers`;\nconst getLicenseeUpsellItem = `${apiUrl}/admin/licensee/upsellitem`;\nconst saveLicenseeUpsellItem = `${apiUrl}/admin/licensee/upsellitem`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nfunction getReadableDuration(durationIn) {\n    if(durationIn === 1) {\n        return \"Additional Day\";\n    } \n    const msHours = 60 * 60 * 1000;\n    const durationHours = Math.floor(durationIn / msHours);\n    if(durationHours < 24) {\n        return `${durationHours} Hours`;\n    }\n    const durationDays = Math.floor(durationHours/24);\n    return `${durationDays} Days`;\n}\n\nexport default function UpsellEdit(props) {\n    console.log(\"UpsellEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId, upsellItemId } = useParams();\n    console.log(\"upsellItemId\", upsellItemId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!upsellItemId && !userData.acl.UPSELL.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    if(upsellItemId && !userData.acl.UPSELL.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    let rentalItemTypesList = localStorage.getItem('rentalitemtypes');\n    rentalItemTypesList = JSON.parse(rentalItemTypesList);\n    console.log(\"rentalItemTypesList\", rentalItemTypesList);\n\n    const rentalItemTypesUpsellList = rentalItemTypesList.filter(rentalItemType => {\n        return (rentalItemType.itemtype === \"upsellitem\");\n    });\n\n    const upsellItemStart = {\n        name: \"\",\n        type: \"\",\n        description: \"\",\n\n        rentalCharges: {},\n        dlrCharges: 0,\n        isFeatured: false,\n        \n        photosLinks: [],\n        photos: null,\n\n        trailerId: \"\",\n        adminRentalItemId: \"\",\n        availability: false,\n        quantity: \"\"\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [trailers, setTrailers] = useState([]);\n    const [adminUpsellItems, setAdminUpsellItems] = useState([]);\n    const [upsellItem, setUpsellItem] = useState(upsellItemStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'GET',\n            headers: authHeader()\n        };\n        fetch(`${getAdminUpsellItems}`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            const upsellItemsList = res.upsellItemsList;\n\n            const adminUpsellItem = upsellItemsList[0];\n            upsellItemStart.adminRentalItemId = adminUpsellItem._id;\n            \n            setAdminUpsellItems([\n                ...adminUpsellItems,\n                ...upsellItemsList\n            ]);\n\n            console.log(\"adminUpsellItems\", upsellItemsList, \"upsellItemStart.adminRentalItemId\", upsellItemStart.adminRentalItemId);\n            setUpsellItem({\n                ...upsellItem,\n                adminRentalItemId: adminUpsellItem._id,\n            \n                name: adminUpsellItem.name,\n                type: adminUpsellItem.type,\n                description: adminUpsellItem.description,\n            \n                rentalCharges: adminUpsellItem.rentalCharges,\n                dlrCharges: adminUpsellItem.dlrCharges,\n                isFeatured: adminUpsellItem.isFeatured\n            });\n        })\n        .catch( err => {\n            console.log(\"Error occurred while fetching Trailer data\", err);\n        });\n\n        //----------------------------------------------------------------------\n\n        fetch(`${getLicenseeTrailers}?licenseeId=${licenseeId}&count=0&skip=100`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${getLicenseeTrailers} Response`, res);\n            const trailersList = res.trailersList || [];\n            \n            setTrailers([\n                ...trailers,\n                ...trailersList\n            ]);\n        })\n        .catch( error => {\n            console.log(`${getLicenseeTrailers} Error`, error);\n        });\n\n        //----------------------------------------------------------------------\n\n        if(upsellItemId) {\n            fetch(`${getLicenseeUpsellItem}?id=${upsellItemId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                const upsellItemObj = res.upsellItemObj;\n                \n                setUpsellItem({\n                    ...upsellItem,\n                    name: upsellItemObj.name,\n                    type: upsellItemObj.type,\n                    description: upsellItemObj.description,\n                    rentalCharges: upsellItemObj.rentalCharges,\n                    dlrCharges: upsellItemObj.dlrCharges,\n                    isFeatured: upsellItemObj.isFeatured ? upsellItemObj.isFeatured : false,\n                    availability: upsellItemObj.availability ? upsellItemObj.availability : false,\n                    photosLinks: upsellItemObj.photos\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Upsell Item data\", err);\n            })\n        }\n    }, [loadOnce]);\n \n    const [formValidError, setFormValidError] = useState({\n        name: false,\n        type: false,\n        description: false,\n\n        rentalCharges: false,\n        dlrCharges: false,\n        isFeatured: false,\n    \n        photos: false,\n\n        trailerId: false,\n        adminRentalItemId: false,\n        availability: false,\n        quantity: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n\n        rentalCharges: \"\",\n        dlrCharges: \"\",\n        isFeatured: \"\",\n    \n        photos: \"\",\n\n        trailerId: \"\",\n        adminRentalItemId: \"\",\n        availability: \"\",\n        quantity: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.name ||\n            formValidError.type ||\n            formValidError.description ||\n\n            formValidError.rentalCharges ||\n            formValidError.dlrCharges ||\n            formValidError.isFeatured ||\n            \n            formValidError.photos ||\n\n            formValidError.trailerId ||\n            formValidError.adminRentalItemId ||\n            formValidError.availability ||\n            formValidError.quantity\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        let requestOptions = {\n            method: 'POST'\n        };\n\n        if(upsellItem.rates || upsellItem.photos) {\n            const formData = new FormData();\n\n            formData.append('name', upsellItem.name);\n            formData.append('type', upsellItem.type);\n            formData.append('description', upsellItem.description);\n\n            formData.append('adminRentalItemId', upsellItem.adminRentalItemId);\n            formData.append('trailerId', upsellItem.trailerId);\n            formData.append('availability', upsellItem.availability);\n            formData.append('quantity', upsellItem.quantity);\n        \n            if(upsellItem.photos && upsellItem.photos.length > 0) {\n                for(let i = 0; i < upsellItem.photos.length; i++) {\n                    formData.append('photos', upsellItem.photos[i], upsellItem.photos[i].name);\n                }\n            }\n\n            formData.append('licenseeId', licenseeId);\n            if(upsellItemId) {\n                formData.append('_id', upsellItemId);\n            }\n\n            console.log(\"formData\", formData);\n\n            requestOptions.headers = { \n                ...authHeader()\n            };\n            requestOptions.body = formData;\n        } else {\n            const reqObj = {\n                name: upsellItem.name,\n                type: upsellItem.type,\n                description: upsellItem.description,\n\n                adminRentalItemId: upsellItem.adminRentalItemId,\n                trailerId: upsellItem.trailerId,\n                availability: upsellItem.availability,\n                quantity: upsellItem.quantity,\n\n                licenseeId: licenseeId\n            };\n\n            if(upsellItemId) {\n                reqObj._id = upsellItemId;\n            }\n\n            requestOptions.headers = { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            };\n            requestOptions.body = JSON.stringify(reqObj);\n        }\n\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveLicenseeUpsellItem, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveLicenseeUpsellItem} Response`, res);\n\n            const upsellItemObj = res.upsellItemObj;\n                \n            setUpsellItem({\n                ...upsellItem,\n                name: upsellItemObj.name,\n                type: upsellItemObj.type,\n                description: upsellItemObj.description,\n\n                photosLinks: upsellItemObj.photos,\n                photos: null,\n            \n                adminRentalItemId: upsellItemObj.adminRentalItemId,\n                trailerId: upsellItemObj.trailerId ? upsellItemObj.trailerId : \"\",\n                availability: upsellItemObj.availability ? upsellItemObj.availability : false,\n                quantity: upsellItemObj.quantity\n            });\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Upsell Item data\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveLicenseeUpsellItem} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Upsell Item data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    { upsellItemId ? \"Edit Upsell Item\" : \"Add Upsell Item\" }\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} encType=\"multipart/form-data\" noValidate>\n\n                    { \n                        adminUpsellItems && upsellItem.adminRentalItemId && \n                        <Box className=\"SectionContainer\">\n                            <FormControl required fullWidth className=\"SectionContainer\">\n                                <InputLabel id=\"adminRentalItemId-label\">Select Upsell Item Type</InputLabel>\n                                <Select\n                                    labelId=\"adminRentalItemId-label\"\n                                    id=\"adminRentalItemId-Select\"\n                                    value={upsellItem.adminRentalItemId}\n                                    onChange={ (e) => { \n                                        const adminUpsellItem = adminUpsellItems.find( adminUpsellItem =>{\n                                            return (e.target.value === adminUpsellItem._id);\n                                        });\n                                        setUpsellItem({\n                                            ...upsellItem,\n\n                                            adminRentalItemId: adminUpsellItem._id,\n                                        \n                                            name: adminUpsellItem.name,\n                                            type: adminUpsellItem.type,\n                                            description: adminUpsellItem.description,\n                                            \n                                            rentalCharges: adminUpsellItem.rentalCharges,\n                                            dlrCharges: adminUpsellItem.dlrCharges,\n                                            isFeatured: adminUpsellItem.isFeatured\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        adminUpsellItems.map((adminUpsellItem, adminUpsellItemIndex) => {\n                                            console.log(\"adminUpsellItem\", adminUpsellItem._id, adminUpsellItem.name);\n                                            return (<MenuItem key={`type-${adminUpsellItem._id}`} value={adminUpsellItem._id}>{adminUpsellItem.name}</MenuItem>)\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n\n                    { \n                        trailers && \n                        <Box className=\"SectionContainer\">\n                            <FormControl required fullWidth className=\"SectionContainer\">\n                                <InputLabel id=\"trailerId-label\">Select TrailerId</InputLabel>\n                                <Select\n                                    labelId=\"trailerId-label\"\n                                    id=\"trailerId-Select\"\n                                    value={upsellItem.trailerId}\n                                    onChange={ (e) => { \n                                        setUpsellItem({\n                                            ...upsellItem,\n                                            trailerId: e.target.value\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        trailers.map((trailer, trailerIndex) => {\n                                            console.log(\"trailer\", trailer._id, trailer.name);\n                                            return (<MenuItem key={`type-${trailer._id}`} value={trailer._id}>{`${trailer.name} (${trailer.vin})`}</MenuItem>)\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"quantity\"\n                        label=\"quantity\"\n                        name=\"quantity\"\n                        autoComplete=\"quantity\"\n                        autoFocus\n                        error={formValidError.quantity}\n                        helperText={formValidErrorMessage.quantity}\n                        value={upsellItem.quantity}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                quantity: parseInt(e.target.value)\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={upsellItem.name}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                name: e.target.value\n                            });\n                        } }\n                    />\n                    \n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"type\"\n                        label=\"Type\"\n                        name=\"type\"\n                        autoComplete=\"type\"\n                        autoFocus\n                        error={formValidError.type}\n                        helperText={formValidErrorMessage.type}\n                        value={upsellItem.type}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                type: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField \n                        aria-label=\"description\" \n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"Description\"\n                        name=\"description\"\n                        autoComplete=\"description\"\n                        autoFocus\n                        multiline={true}\n                        error={formValidError.description}\n                        helperText={formValidErrorMessage.description}\n                        value={upsellItem.description}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                description: e.target.value\n                            });\n                        } } />\n\n\n                    {\n                        upsellItem.rentalCharges && \n                        (\n                            <Grid container spacing={0} className=\"SectionContainer\">\n                                \n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\">\n                                        Rental Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Pickup Charges\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Door2Door Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { upsellItem.rentalCharges.pickUp && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {upsellItem.rentalCharges.pickUp.map((charge, chargeIndex) => (\n                                                    <TableRow key={`pickup-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { upsellItem.rentalCharges && upsellItem.rentalCharges.door2Door && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {upsellItem.rentalCharges.door2Door.map((charge, chargeIndex) => (\n                                                    <TableRow key={`door2door-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n                            \n                            </Grid>\n                        )\n                    }\n                    \n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        disabled={true}\n                        id=\"dlrCharges\"\n                        label=\"Damage Liability Reduction Charges\"\n                        name=\"dlrCharges\"\n                        autoComplete=\"dlrCharges\"\n                        autoFocus\n                        error={formValidError.dlrCharges}\n                        helperText={formValidErrorMessage.dlrCharges}\n                        value={upsellItem.dlrCharges}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                dlrCharges: e.target.value\n                            });\n                        } }\n                    />\n\n                    <FormGroup className=\"SectionContainer\">\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    disabled={true}\n                                    checked={upsellItem.isFeatured} \n                                    name=\"isFeatured\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isFeatured\", e);\n                                        setUpsellItem({\n                                            ...upsellItem,\n                                            isFeatured: !upsellItem.isFeatured\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Featured Upsell Item Type?\"\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={upsellItem.availability}\n                                    name=\"availability\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange availability\", (typeof e.target.value), e.target.value);\n                                        console.log(\"upsellItem.availability\", (typeof upsellItem.availability));\n                                        setUpsellItem({\n                                            ...upsellItem,\n                                            availability: !upsellItem.availability\n                                        });\n                                    }}  />\n                            }\n                            label=\"Set as availability to be Rented?\"\n                        />\n\n                    </FormGroup>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Photos\n                        </Typography>\n\n                        {\n                            !upsellItem.photos && \n                            (\n                                <Box className=\"SectionContainer\">\n                                {\n                                    upsellItem.photosLinks.map((photo, photoIndex) => {\n                                        return (\n                                            <div key={upsellItem._id+\"_photo\"+photoIndex}>\n                                                <a href={photo}>Photo {(photoIndex + 1)}</a>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                </Box>\n                            )\n                        }\n\n                        <input\n                            accept=\"image/jpeg, image/jpg, image/png, application/pdf\"\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            name=\"photos\"\n                            onChange={ (e) => {\n                                console.log(e.target.files);\n                                setUpsellItem({\n                                    ...upsellItem,\n                                    photos: e.target.files\n                                });\n                            }}\n                            />\n\n                        {/* <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload\n                            </Button>\n                        </label>  */}\n                    </Box>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Update\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst apiUrl = common.apiUrl;\nconst fetchUpsellItemsAPI = `${apiUrl}/admin/licensee/upsellitems`;\nconst setUpsellItemAvailabilityAPI = `${apiUrl}/admin/licensee/upsellitem/availability`;\n\nfunction TableActionButton(props) {\n    console.log(\"TableActionButton\", props);\n    return (\n        <span>{props.title}</span>\n    );\n}\n\nexport default function UpsellItemsList(props) {\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId } = useParams();\n    console.log(\"licenseeId\", licenseeId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.UPSELL.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Upsell Items List\"\n                tableRef={tableRef}\n                search={false} \n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'upsellItemRef', \n                        render: rowData => {\n                            return rowData.upsellItemRef\n                        }\n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return rowData.name\n                        } \n                    },\n                    { \n                        title: 'Type', \n                        field: 'type', \n                        render: rowData => {\n                            return rowData.type\n                        } \n                    },\n                    { \n                        title: 'Description', \n                        field: 'description', \n                        render: rowData => {\n                            return rowData.description\n                        } \n                    },\n                    { \n                        title: 'Photos', \n                        field: 'photos', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    {\n                                        rowData.photos.map((photo, photoIndex) => {\n                                            return (\n                                                <div>\n                                                    <a key={rowData._id+\"_photo\"+photoIndex} href={photo}>Photo {(photoIndex + 1)}</a>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            );\n                        } \n                    },\n                    { \n                        title: 'Quantity', \n                        field: 'quantity', \n                        render: rowData => {\n                            return rowData.quantity\n                        } \n                    },\n                    { \n                        title: 'Is Available?', \n                        field: 'availability', \n                        render: rowData => {\n                            return rowData.availability ? \"true\" : \"false\"\n                        } \n                    }\n                ]} \n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchUpsellItemsAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchUpsellItemsAPI}`, requestOptions)\n                            fetch(`${fetchUpsellItemsAPI}?licenseeId=${licenseeId}&count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchUpsellItemsAPI} Response`, res);\n                                const upsellItemsList = res.upsellItemsList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof upsellItemsList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...upsellItemsList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: upsellItemsList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchUpsellItemsAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                } \n                actions={\n                    [\n                        rowData => ({\n                            icon: () => { return (<TableActionButton title={rowData.availability ? \"Set as Unavailable\" : \"Set as Available\"} />) } ,\n                            tooltip: (rowData.availability ? \"Set as Unavailable\" : \"Set as Available\"),\n                            onClick: (event, rowData) => {\n                                console.log(\"Set as Unavailable\", event, rowData);\n                                const requestOptions = {\n                                    method: 'POST',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ \n                                        upsellItemId: rowData._id,\n                                        availability: !rowData.availability\n                                    })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(setUpsellItemAvailabilityAPI, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${setUpsellItemAvailabilityAPI} Response`, res);\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${setUpsellItemAvailabilityAPI} Error`, error);\n                                });\n                            }\n                        }),\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Upsell Item\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/upsellitem/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add Upsell Item\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Add onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/upsellitem/add`);\n                            }\n                        }\n                    ]\n                } \n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst getBlockTrailer = `${apiUrl}/admin/licensee/trailer/block`;\nconst getTrailers = `${apiUrl}/admin/licensee/trailers`;\nconst getUpsellItems = `${apiUrl}/admin/licensee/upsellitems`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction TableActionButton(props) {\n    console.log(\"TableActionButton\", props);\n    return (\n        <span>{props.title}</span>\n    );\n}\n\nfunction RentalItemDetails(props) {\n    let rentalItem;\n    if(props.item.itemType === \"trailer\") {\n        rentalItem = props.trailers.find(trailer => {\n            return trailer._id === props.item.itemId\n        });\n    } else if(props.item.itemType === \"upsellitem\") {\n        rentalItem = props.upsellItems.find(upsellitem => {\n            return upsellitem._id === props.item.itemId\n        });\n    }\n\n    if(rentalItem) {\n        return (\n            <span>{rentalItem.name} ({rentalItem.vin})</span>\n        )\n    } else {\n        return (<span>Rental Item Not found</span>)\n    }\n}\n\nexport default function BlockTrailerList(props) {\n    console.log(\"BlockTrailerList loaded\");\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId } = useParams();\n    console.log(\"licenseeId\", licenseeId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.BLOCK.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [rows, setRows] = useState([]);\n    const [totalCount, setTotalCount] = useState(0);\n\n    const [trailers, setTrailers] = useState([]);\n    const [upsellItems, setUpsellItems] = useState([]);\n\n    //--------------------------------------------------------------\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'GET',\n            headers: authHeader()\n        };\n\n        //--------------------------------------------------------------\n\n        fetch(`${getTrailers}?licenseeId=${licenseeId}`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            const trailersList = res.trailersList;\n            \n            setTrailers({\n                ...trailers,\n                ...trailersList\n            });\n        })\n        .catch( err => {\n            console.log(\"Error occurred while fetching Trailers data\", err);\n        });\n\n        //--------------------------------------------------------------\n    \n        fetch(`${getUpsellItems}?licenseeId=${licenseeId}`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            const upsellItemsList = res.upsellItemsList;\n            \n            setUpsellItems({\n                ...upsellItems,\n                ...upsellItemsList\n            });\n        })\n        .catch( err => {\n            console.log(\"Error occurred while fetching Upsell Items data\", err);\n        });\n\n        //--------------------------------------------------------------\n    }, [loadOnce]);\n\n    //--------------------------------------------------------------\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Blocking Schedule List\"\n                tableRef={tableRef}\n                search={false}\n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'blockingRef', \n                        render: rowData => {\n                            return rowData.blockingRef\n                        } \n                    },\n                    { \n                        title: 'Start Date', \n                        field: 'startDate', \n                        render: rowData => {\n                            return rowData.startDate\n                        }\n                    },\n                    { \n                        title: 'End Date', \n                        field: 'endDate', \n                        render: rowData => {\n                            return rowData.endDate\n                        }\n                    },\n                    { \n                        title: 'isDeleted', \n                        field: 'isDeleted', \n                        render: rowData => {\n                            return rowData.isDeleted ? \"Yes\" : \"No\"\n                        }\n                    },\n                    { \n                        title: 'Items', \n                        field: 'items', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    {\n                                        rowData.items.map((item, itemIndex) => {\n                                            return (\n                                                <div key={`${rowData._id}_${itemIndex}`}>\n                                                    <div>Type : {item.itemType}</div>\n                                                    <div>Details : <RentalItemDetails item={item} trailers={trailers} upsellItems={upsellItems} /></div>\n                                                    <div>Quantity : {item.quantity}</div>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            );\n                        }\n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        return new Promise((resolve, reject) => {\n                            fetch(`${getBlockTrailer}?licenseeId=${licenseeId}&count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${getBlockTrailer} Response`, res);\n                                const blockingList = res.blockingList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof blockingList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...blockingList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: blockingList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${getBlockTrailer} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Blocking Schedule\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/rentalitem/block/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add Blocking Schedule\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Add onClick\", event, rowData);\n                                history.push(`/adminpanel/licensee/${licenseeId}/rentalitem/block/add`);\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1,\n                        rowStyle: {\n                            height: \"100px\",\n                            maxHeight: \"100px\",\n                            overflow: \"scroll\"\n                        }\n                    }\n                }\n            />\n        </div>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport moment from 'moment';\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel, \n    Select,\n    MenuItem, \n    FormHelperText,\n    FormControl\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nconst apiUrl = common.apiUrl;\nconst getTrailers = `${apiUrl}/admin/licensee/trailers`;\nconst getUpsellItems = `${apiUrl}/admin/licensee/upsellitems`;\nconst saveBlockTrailer = `${apiUrl}/admin/licensee/trailer/block`;\nconst getBlockTrailer = `${apiUrl}/admin/licensee/trailer/block`;\n\nexport default function BlockTrailerEdit(props) {\n    console.log(\"BlockTrailerEdit\");\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { licenseeId, blockingId } = useParams();\n    console.log(\"licenseeId\", licenseeId, \"blockingId\", blockingId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.BLOCK.includes(\"ADD\") || !userData.acl.BLOCK.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    const blockingStart = {\n        startDate: moment().add(1, \"day\").format(\"YYYY-MM-DD\"),\n        startTime: moment().add(1, \"day\").format(\"HH:mm\"),\n        endDate: moment().add(2, \"day\").format(\"YYYY-MM-DD\"),\n        endTime: moment().add(2, \"day\").format(\"HH:mm\"),\n        isDeleted: false,\n\n        items: []\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [trailers, setTrailers] = useState([]);\n    const [upsellItems, setUpsellItems] = useState([]);\n    const [blockingData, setBlockingData] = useState(blockingStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'GET',\n            headers: authHeader()\n        };\n\n        //--------------------------------------------------------------\n\n        if(blockingId) {\n            fetch(`${getBlockTrailer}?id=${blockingId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                const blockingObj = res.blockingObj;\n                \n                setBlockingData({\n                    ...blockingData,\n                    ...blockingObj\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Trailer Blocking data\", err);\n            });\n        }\n\n        //--------------------------------------------------------------\n\n        fetch(`${getTrailers}?licenseeId=${licenseeId}`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            const trailersList = res.trailersList;\n            \n            setTrailers({\n                ...trailers,\n                ...trailersList\n            });\n        })\n        .catch( err => {\n            console.log(\"Error occurred while fetching Trailers data\", err);\n        });\n\n        //--------------------------------------------------------------\n    \n        fetch(`${getUpsellItems}?licenseeId=${licenseeId}`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            const upsellItemsList = res.upsellItemsList;\n            \n            setUpsellItems({\n                ...upsellItems,\n                ...upsellItemsList\n            });\n        })\n        .catch( err => {\n            console.log(\"Error occurred while fetching Upsell Items data\", err);\n        });\n\n        //--------------------------------------------------------------\n    }, [loadOnce]);\n\n    const [formValidError, setFormValidError] = useState({\n        startDate: false,\n        startTime: false,\n        endDate: false,\n        endTime: false,\n        isDeleted: false,\n        items: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        startDate: \"\",\n        starTime: \"\",\n        endDate: \"\",\n        endTime: \"\",\n        isDeleted: \"\",\n        items: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.startDate ||\n            formValidError.startTime ||\n            formValidError.endDate ||\n            formValidError.endTime ||\n            formValidError.isDeleted ||\n            formValidError.items\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        let requestOptions = {\n            method: 'POST'\n        };\n\n        console.log(\"blockingData.startDate\", blockingData.startDate);\n        console.log(\"blockingData.endDate\", blockingData.endDate);\n\n        const reqObj = {\n            startDate: moment(`${blockingData.startDate} ${blockingData.startTime}`).format(\"YYYY-MM-DD HH:mm\"),\n            endDate: moment(`${blockingData.endDate} ${blockingData.endTime}`).format(\"YYYY-MM-DD HH:mm\"),\n            isDeleted: blockingData.isDeleted,\n\n            items: blockingData.items\n        };\n\n        if(blockingId) {\n            reqObj._id = blockingId;\n        }\n\n        requestOptions.headers = { \n            ...authHeader(),\n            'Content-Type': 'application/json'\n        };\n        requestOptions.body = JSON.stringify(reqObj);\n        \n\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveBlockTrailer, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveBlockTrailer} Response`, res);\n\n            const blockingObj = res.blockingObj;\n\n            blockingId = blockingObj._id;\n                \n            setBlockingData({\n                ...blockingData,\n\n                startDate: moment(blockingObj.startDate).format(\"YYYY-MM-DD\"),\n                startTime: moment(blockingObj.startDate).format(\"HH:mm\"),\n                endDate: moment(blockingObj.endDate).format(\"YYYY-MM-DD\"),\n                endTime: moment(blockingObj.endDate).format(\"HH:mm\"),\n                isDeleted: blockingObj.isDeleted,\n\n                items: blockingObj.items\n            });\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Trailer Blocking data\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveBlockTrailer} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Trailer Blocking data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    { blockingId ? \"Edit Block Trailer Data\" : \"Add Block Trailer Data\" }\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} encType=\"multipart/form-data\" noValidate>\n\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        aria-label=\"Start Date\" \n                        required\n                        fullWidth\n                        type=\"date\"\n                        id=\"startDate\"\n                        label=\"Start Date\"\n                        name=\"startDate\"\n                        autoComplete=\"startDate\"\n                        autoFocus\n                        error={(formValidErrorMessage.startDate !== \"\")}\n                        helperText={formValidErrorMessage.startDate}\n                        value={blockingData.startDate}\n                        onChange={ (e) => { \n                            setBlockingData({\n                                ...blockingData,\n                                startDate: e.target.value\n                            });\n                        } } \n                    />\n\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        aria-label=\"Start Time\" \n                        required\n                        fullWidth\n                        type=\"time\"\n                        id=\"startTime\"\n                        label=\"Start Time\"\n                        name=\"startTime\"\n                        autoComplete=\"startTime\"\n                        autoFocus\n                        error={(formValidErrorMessage.startTime !== \"\")}\n                        helperText={formValidErrorMessage.startTime}\n                        value={blockingData.startTime}\n                        onChange={ (e) => { \n                            setBlockingData({\n                                ...blockingData,\n                                startTime: e.target.value\n                            });\n                        } } \n                    />\n\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        aria-label=\"End Date\" \n                        required\n                        fullWidth\n                        type=\"date\"\n                        id=\"endDate\"\n                        label=\"End Date\"\n                        name=\"endDate\"\n                        autoComplete=\"endDate\"\n                        autoFocus\n                        error={(formValidErrorMessage.endDate !== \"\")}\n                        helperText={formValidErrorMessage.endDate}\n                        value={blockingData.endDate}\n                        onChange={ (e) => { \n                            setBlockingData({\n                                ...blockingData,\n                                endDate: e.target.value\n                            });\n                        } } \n                    />\n\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        aria-label=\"End Time\" \n                        required\n                        fullWidth\n                        type=\"time\"\n                        id=\"endTime\"\n                        label=\"End Time\"\n                        name=\"endTime\"\n                        autoComplete=\"endTime\"\n                        autoFocus\n                        error={(formValidErrorMessage.endTime !== \"\")}\n                        helperText={formValidErrorMessage.endTime}\n                        value={blockingData.endTime}\n                        onChange={ (e) => { \n                            setBlockingData({\n                                ...blockingData,\n                                endTime: e.target.value\n                            });\n                        } } \n                    />\n                    \n                    <FormGroup className=\"SectionContainer\">\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={blockingData.isDeleted} \n                                    name=\"isDeleted\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isDeleted\", e);\n                                        setBlockingData({\n                                            ...blockingData,\n                                            isDeleted: !blockingData.isDeleted\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Deleted?\"\n                        />\n\n                    </FormGroup>\n\n                    {\n                        <FormGroup className=\"SectionContainer\">\n\n                            <Grid container spacing={0}>\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle1\">\n                                        Rental Items\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={6} className=\"TextAlignRight\">\n                                    <Button\n                                        type=\"button\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                        onClick={ (e) => {\n                                            const newItems = [...blockingData.items];\n                                            newItems.push({\n                                                itemType: \"trailer\",\n                                                itemId: ((trailers && trailers.length > 0) ? trailers[0]._id : \"\"),\n                                                quantity: 1\n                                            });\n                                            setBlockingData({\n                                                ...blockingData,\n                                                items: newItems\n                                            });\n                                        } }\n                                    >\n                                        Add\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                            {\n                                blockingData.items.map((item, itemIndex) => {\n                                    return (\n                                        <React.Fragment key={`rentalitem-${itemIndex}`}>\n\n                                            { \n                                                <FormControl required>\n                                                    <InputLabel id=\"itemType-label\">Item Type</InputLabel>\n                                                    <Select\n                                                        labelId=\"itemType-label\"\n                                                        id=\"itemType-Select\"\n                                                        value={item.itemType}\n                                                        onChange={ (e) => {\n                                                            const newItems = [...blockingData.items];\n                                                            newItems[itemIndex].itemType = e.target.value; \n                                                            setBlockingData({\n                                                                ...blockingData,\n                                                                items: newItems\n                                                            });\n                                                        } }\n                                                        className={classes.selectEmpty}\n                                                    >\n                                                        <MenuItem value=\"trailer\">Trailer</MenuItem>\n                                                        <MenuItem value=\"upsellitem\">Upsell Item</MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            }\n\n                                            { \n                                                (item.type === \"trailer\") && trailers && \n                                                <Box className=\"SectionContainer\">\n                                                    <FormControl required>\n                                                        <InputLabel id=\"itemId-trailer-label\">Select Trailer</InputLabel>\n                                                        <Select\n                                                            labelId=\"itemId-trailer-label\"\n                                                            id=\"itemId-trailer-Select\"\n                                                            value={item.itemId}\n                                                            onChange={ (e) => { \n                                                                const newItems = [...blockingData.items];\n                                                                newItems[itemIndex].itemId = e.target.value; \n                                                                setBlockingData({\n                                                                    ...blockingData,\n                                                                    items: newItems\n                                                                });\n                                                            } }\n                                                            className={classes.selectEmpty}\n                                                        >\n                                                            {\n                                                                trailers.map((trailer, trailerIndex) => {\n                                                                    return (<MenuItem key={`type-${trailer._id}`} value={trailer._id}>{trailer.name} ({trailer.vin})</MenuItem>)\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </Box>\n                                            }\n\n                                            { \n                                                (item.type === \"upsellitem\") && upsellItems && \n                                                <Box className=\"SectionContainer\">\n                                                    <FormControl required>\n                                                        <InputLabel id=\"itemId-upsellitem-label\">Select Upsell Item</InputLabel>\n                                                        <Select\n                                                            labelId=\"itemId-upsellitem-label\"\n                                                            id=\"itemId-upsellitem-Select\"\n                                                            value={item.itemId}\n                                                            onChange={ (e) => { \n                                                                const newItems = [...blockingData.items];\n                                                                newItems[itemIndex].itemId = e.target.value; \n                                                                setBlockingData({\n                                                                    ...blockingData,\n                                                                    items: newItems\n                                                                });\n                                                            } }\n                                                            className={classes.selectEmpty}\n                                                        >\n                                                            {\n                                                                upsellItems.map((upsellItem, upsellItemIndex) => {\n                                                                    return (<MenuItem key={`type-${upsellItem._id}`} value={upsellItem._id}>{upsellItem.name} ({upsellItem.vin})</MenuItem>)\n                                                                })\n                                                            }\n                                                        </Select>\n                                                    </FormControl>\n                                                </Box>\n                                            }\n\n                                            <TextField\n                                                key={`quantity-${itemIndex}`}\n                                                variant=\"outlined\"\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                label=\"Quantity\"\n                                                name=\"quantity\"\n                                                autoComplete=\"quantity\"\n                                                autoFocus\n                                                error={formValidError.quantity}\n                                                helperText={formValidErrorMessage.quantity}\n                                                value={item.quantity}\n                                                onChange={ (e) => { \n                                                    const newItems = [...blockingData.items];\n                                                    newItems[itemIndex] = e.target.value; \n                                                    setBlockingData({\n                                                        ...blockingData,\n                                                        items: newItems\n                                                    });\n                                                } }\n                                            />\n                                        </React.Fragment>\n                                    );\n                                })\n                            }\n                        </FormGroup>\n                    }\n\n                </form>\n\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={handleSubmit}\n                >\n                    { blockingId ? \"Save\" : \"Update\" }\n                </Button>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport FileViewer from 'react-file-viewer';\nimport { CustomErrorComponent } from 'custom-error';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchInsuranceAPI = `${apiUrl}/admin/licensee/insurance`;\nconst saveInsuranceApproval = `${apiUrl}/admin/licensee/verify/insurance`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction documentViewerError(e) {\n    console.log(\"error in file-viewer\", e);\n}\n\nfunction TrailerInsurance(props) {\n    const classes = useStyles();\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Trailer Insurance\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'Licensee Name', \n                        field: 'licenseeName', \n                        render: rowData => {\n                            console.log(\"rowData\", rowData);\n                            return rowData.licenseeName\n                        } \n                    },\n                    { \n                        title: 'Trailer Name', \n                        field: 'itemName', \n                        render: rowData => {\n                            return rowData.itemName\n                        } \n                    },\n                    { \n                        title: 'Insurance Document', \n                        field: 'insuranceDocument', \n                        render: rowData => {\n                            // return <Link target=\"_blank\" to={rowData.document}>Download</Link>\n                            return (\n                                <div>\n                                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={rowData.document}>Download</a>\n                                    {/* <FileViewer\n                                        fileType={rowData.documentType}\n                                        filePath={rowData.document}\n                                        errorComponent={CustomErrorComponent}\n                                        onError={documentViewerError}/> */}\n                                </div>\n                            );\n                        } \n                    },\n                    { \n                        title: 'Insurance Document Verified', \n                        field: 'insuranceDocumentVerified', \n                        type: 'boolean',\n                        render: rowData => {\n                            return rowData.verified ? \"Yes\" : \"No\";\n                        } \n                    },\n                    { \n                        title: 'Insurance Document Accepted', \n                        field: 'insuranceDocumentAccepted', \n                        render: rowData => {\n                            return rowData.accepted ? \"Yes\" : \"No\";\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchInsuranceAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchInsuranceAPI}`, requestOptions)\n                            fetch(`${fetchInsuranceAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchInsuranceAPI} Response`, res);\n                                const insuranceList = res.insuranceList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof insuranceList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...insuranceList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: insuranceList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchInsuranceAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        {\n                            icon: \"check_circle\",\n                            tooltip: \"Approve\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Approve onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ insuranceId: rowData._id, isAccepted: true })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveInsuranceApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveInsuranceApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveInsuranceApproval} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: \"cancel\",\n                            tooltip: \"Reject\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Reject onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ insuranceId: rowData._id, isAccepted: false })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveInsuranceApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveInsuranceApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = false;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveInsuranceApproval} Error`, error);\n                                });\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\nexport default TrailerInsurance;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport {\n    Link\n} from 'react-router-dom';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchServicingAPI = `${apiUrl}/admin/licensee/servicing`;\nconst saveServicingApproval = `${apiUrl}/admin/licensee/verify/servicing`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction TrailerServicing(props) {\n    const classes = useStyles();\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Trailer Servicing\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'Licensee Name', \n                        field: 'licenseeName', \n                        render: rowData => {\n                            console.log(\"rowData\", rowData);\n                            return rowData.licenseeName\n                        } \n                    },\n                    { \n                        title: 'Trailer Name', \n                        field: 'itemName', \n                        render: rowData => {\n                            return rowData.itemName\n                        } \n                    },\n                    { \n                        title: 'Servicing Document', \n                        field: 'servicingDocument', \n                        render: rowData => {\n                            // return <Link target=\"_blank\" to={rowData.document}>Download</Link>\n                            return (<a target=\"_blank\" rel=\"noopener noreferrer\" href={rowData.document}>Download</a>);\n                        } \n                    },\n                    { \n                        title: 'Servicing Document Verified', \n                        field: 'servicingDocumentVerified', \n                        type: 'boolean',\n                        render: rowData => {\n                            return rowData.verified ? \"Yes\" : \"No\";\n                        } \n                    },\n                    { \n                        title: 'Servicing Document Accepted', \n                        field: 'servicingDocumentAccepted', \n                        render: rowData => {\n                            return rowData.accepted ? \"Yes\" : \"No\";\n                        } \n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchServicingAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchServicingAPI}`, requestOptions)\n                            fetch(`${fetchServicingAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchServicingAPI} Response`, res);\n                                const servicingList = res.servicingList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof servicingList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...servicingList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: servicingList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchServicingAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        {\n                            icon: \"check_circle\",\n                            tooltip: \"Approve\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Approve onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ servicingId: rowData._id, isAccepted: true })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveServicingApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveServicingApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = true;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveServicingApproval} Error`, error);\n                                });\n                            }\n                        },\n                        {\n                            icon: \"cancel\",\n                            tooltip: \"Reject\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Reject onClick\", event, rowData);\n                                const requestOptions = {\n                                    method: 'PUT',\n                                    headers: { \n                                        ...authHeader(),\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({ servicingId: rowData._id, isAccepted: false })\n                                };\n                                console.log(\"requestOptions\", requestOptions);\n                            \n                                fetch(saveServicingApproval, requestOptions)\n                                .then( res => res.json() )\n                                .then( res => {\n                                    console.log(`${saveServicingApproval} Response`, res);\n                                    // rowData.driverLicense.verified = true;\n                                    // rowData.driverLicense.accepted = false;\n                                    if(tableRef.current) {\n                                        tableRef.current.onQueryChange();\n                                    }\n                                })\n                                .catch( error => {\n                                    console.log(`${saveServicingApproval} Error`, error);\n                                });\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\nexport default TrailerServicing;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchCustomerPaymentsAPI = `${apiUrl}/admin/customer/payments`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction CustomerPayment(props) {\n    const classes = useStyles();\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Payments - Inward (From Customers to T2Y)\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'Customer Name', \n                        field: 'customerName', \n                        render: rowData => {\n                            return rowData.customerName\n                        } \n                    },\n                    { \n                        title: 'Licensee Name', \n                        field: 'licenseeName', \n                        render: rowData => {\n                            return rowData.licenseeName\n                        } \n                    },\n                    { \n                        title: 'Total Paid', \n                        field: 'totalPaid', \n                        render: rowData => {\n                            return rowData.totalPaid ? rowData.totalPaid : 0\n                        } \n                    },\n                    { \n                        title: 'Authorization Transaction ID', \n                        field: 'transactionIdAuth', \n                        render: rowData => {\n                            return rowData.transactionIdAuth ? rowData.transactionIdAuth : \"\"\n                        } \n                    },\n                    { \n                        title: 'Authorization Transaction Date', \n                        field: 'transactionAuthDate', \n                        render: rowData => {\n                            return rowData.transactionAuthDate ? rowData.transactionAuthDate : \"\"\n                        } \n                    },\n                    { \n                        title: 'Transaction Auth Action', \n                        field: 'authTransactionAction', \n                        render: rowData => {\n                            return rowData.authTransactionAction ? rowData.authTransactionAction : \"\"\n                        } \n                    },\n                    { \n                        title: 'Action Transaction ID', \n                        field: 'transactionIdAction', \n                        render: rowData => {\n                            return rowData.transactionIdAction ? rowData.transactionIdAction : \"\"\n                        } \n                    },\n                    { \n                        title: 'Action Transaction Date', \n                        field: 'transactionActionDate', \n                        render: rowData => {\n                            return rowData.transactionActionDate ? rowData.transactionActionDate : \"\"\n                        } \n                    },\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchCustomerPaymentsAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchCustomerPaymentsAPI}`, requestOptions)\n                            fetch(`${fetchCustomerPaymentsAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchCustomerPaymentsAPI} Response`, res);\n                                const customerPaymentsList = res.customerPaymentsList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof customerPaymentsList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...customerPaymentsList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: customerPaymentsList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchCustomerPaymentsAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\nexport default CustomerPayment;","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchLicenseePayoutsAPI = `${apiUrl}/admin/licensee/payouts`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction LicenseePayout(props) {\n    const classes = useStyles();\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Payments - Outward (From T2Y to Licensee)\"\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'Licensee Name', \n                        field: 'licenseeName', \n                        render: rowData => {\n                            return rowData.licenseeName\n                        } \n                    },\n                    { \n                        title: 'Total Paid', \n                        field: 'totalAmount', \n                        render: rowData => {\n                            return rowData.totalAmount ? rowData.totalAmount : 0\n                        } \n                    },\n                    { \n                        title: 'Stripe Account ID', \n                        field: 'stripeAccountId', \n                        render: rowData => {\n                            return rowData.stripeAccountId ? rowData.stripeAccountId : \"\"\n                        } \n                    },\n                    { \n                        title: 'Stripe Payout Status', \n                        field: 'stripePayoutStatus', \n                        render: rowData => {\n                            return rowData.stripePayoutStatus ? rowData.stripePayoutStatus : \"\"\n                        } \n                    },\n                    { \n                        title: 'Transaction Auth Action', \n                        field: 'authTransactionAction', \n                        render: rowData => {\n                            return rowData.authTransactionAction ? rowData.authTransactionAction : \"\"\n                        } \n                    },\n                    { \n                        title: 'Payment At', \n                        field: 'createdAt', \n                        render: rowData => {\n                            return rowData.createdAt ? rowData.createdAt : \"\"\n                        } \n                    },\n                    { \n                        title: 'Updated At', \n                        field: 'updatedAt', \n                        render: rowData => {\n                            return rowData.updatedAt ? rowData.updatedAt : \"\"\n                        } \n                    },\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchLicenseePayoutsAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchLicenseePayoutsAPI}`, requestOptions)\n                            fetch(`${fetchLicenseePayoutsAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchLicenseePayoutsAPI} Response`, res);\n                                const licenseePayoutsList = res.licenseePayoutsList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof licenseePayoutsList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...licenseePayoutsList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: licenseePayoutsList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchLicenseePayoutsAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\nexport default LicenseePayout;","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n\n    FormControl,\n    InputLabel,\n    Select, \n    MenuItem,\n    FormHelperText\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nconst apiUrl = common.apiUrl;\nconst getRentalItemType = `${apiUrl}/admin/rentalitemtype`;\nconst saveRentalItemType = `${apiUrl}/admin/rentalitemtype`;\n\n\nexport default function RentalItemTypeEdit(props) {\n    console.log(\"rentalItemTypeEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { rentalItemId } = useParams();\n    console.log(\"rentalItemId\", rentalItemId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!rentalItemId && !userData.acl.TRAILER.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    if(rentalItemId && !userData.acl.TRAILER.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    const rentalItemTypeStart = {\n        name: \"\",\n        code: \"\",\n        itemType: \"\"\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [rentalItemType, setRentalItemType] = useState(rentalItemTypeStart);\n   \n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    let rentalItemTypesList = localStorage.getItem('rentalitemtypes');\n    rentalItemTypesList = JSON.parse(rentalItemTypesList);\n    console.log(\"rentalItemTypesList\", rentalItemTypesList);\n\n    if(rentalItemId) {\n        rentalItemTypesList.forEach((rentalItemTypeObj) => {\n            if(rentalItemTypeObj._id === rentalItemId) {\n                setRentalItemType({\n                    ...rentalItemType,\n                    name: rentalItemTypeObj.name,\n                    code: rentalItemTypeObj.code,\n                    itemType: rentalItemTypeObj.itemtype\n                });\n            }\n        });\n    }\n\n    /* useEffect(() => {\n        // if(rentalItemId) {\n                const requestOptions = {\n                    method: 'GET',\n                    headers: authHeader(),\n\n                };\n                fetch(`${getRentalItemType}?id=${rentalItemId}`, requestOptions)\n                .then( res => res.json() )\n                .then( res => {\n                    const rentalItemTypeObj = res.rentalItemType;\n\n                    console.log(\"rentalItemTypeObj\", rentalItemTypeObj);\n                    console.log(rentalItemTypeObj.name, rentalItemTypeObj.code, rentalItemTypeObj.itemtype);\n                    \n                    setRentalItemType({\n                        ...rentalItemType,\n                        name: rentalItemTypeObj.name,\n                        code: rentalItemTypeObj.code,\n                        itemType: rentalItemTypeObj.itemtype\n                    });\n                })\n                .catch( err => {\n                    console.log(\"Error occurred while fetching rentalItemType data\", err);\n                })\n            // }\n    }, [loadOnce]); */\n \n    const [formValidError, setFormValidError] = useState({\n        name: false,\n        code: false,\n        itemType: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        name: \"\",\n        code: \"\",\n        itemType: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.name ||\n            formValidError.code ||\n            formValidError.itemType\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        let requestOptions = {\n            method: 'POST'\n        };\n\n        const reqObj = {\n            name: rentalItemType.name,\n            code: rentalItemType.code,\n            itemtype: rentalItemType.itemType\n        };\n\n        if(rentalItemId) {\n            reqObj._id = rentalItemId;\n        }\n\n        requestOptions.headers = { \n            ...authHeader(),\n            'Content-Type': 'application/json'\n        };\n        requestOptions.body = JSON.stringify(reqObj);\n        \n\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveRentalItemType, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveRentalItemType} Response`, res);\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved rentalItemType data\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveRentalItemType} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Rental Item Type data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    { rentalItemId ? \"Edit Rental Item Type\" : \"Add Rental Item Type\" }\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} encType=\"multipart/form-data\" noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={rentalItemType.name}\n                        onChange={ (e) => { \n                            setRentalItemType({\n                                ...rentalItemType,\n                                name: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"code\"\n                        label=\"Code\"\n                        name=\"code\"\n                        autoComplete=\"code\"\n                        autoFocus\n                        disabled\n                        error={formValidError.code}\n                        helperText={formValidErrorMessage.code}\n                        value={rentalItemType.code}\n                        onChange={ (e) => { \n                            setRentalItemType({\n                                ...rentalItemType,\n                                code: e.target.value\n                            });\n                        } }\n                    />\n\n                    { rentalItemId && \n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"itemType\"\n                            label=\"Item Type\"\n                            name=\"itemType\"\n                            autoComplete=\"itemType\"\n                            autoFocus\n                            disabled\n                            error={formValidError.itemType}\n                            helperText={formValidErrorMessage.itemType}\n                            value={rentalItemType.itemType}\n                            onChange={ (e) => { \n                                setRentalItemType({\n                                    ...rentalItemType,\n                                    itemType: e.target.value\n                                });\n                            } }\n                        />\n                    }\n                    \n                    { !rentalItemId &&  \n                        <FormControl required>\n                            <InputLabel id=\"itemType-label\">Item Type</InputLabel>\n                            <Select\n                                labelId=\"itemType-label\"\n                                id=\"itemTypeSelect\"\n                                value={rentalItemType.itemType}\n                                onChange={ (e) => { \n                                    setRentalItemType({\n                                        ...rentalItemType,\n                                        itemType: e.target.value\n                                    });\n                                } }\n                                className={classes.selectEmpty}\n                            >\n                                <MenuItem value=\"trailer\">Trailer</MenuItem>\n                                <MenuItem value=\"upsellitem\">Uspell Item</MenuItem>\n                            </Select>\n                            <FormHelperText>Required</FormHelperText>\n                        </FormControl>\n                    }\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Update\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst apiUrl = common.apiUrl;\nconst fetchRentalItemTypesAPI = `${apiUrl}/admin/rentalitemtypes`;\n\nexport default function RentalItemTypesList(props) {\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.TRAILER.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = useState([]);\n    const [totalCount, setTotalCount] = useState(0);\n\n    useEffect(() => {\n        const requestOptions = {\n            method: 'GET',\n            headers: authHeader()\n        };\n        \n        fetch(`${fetchRentalItemTypesAPI}`, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${fetchRentalItemTypesAPI} Response`, res);\n            const rentalItemTypesList = res.rentalItemTypes || [];\n            const totalCount = rentalItemTypesList.length;\n            \n            let newRows = [];\n            setRows(rentalItemTypesList);\n            setTotalCount(totalCount);\n            localStorage.setItem('rentalitemtypes', JSON.stringify(rentalItemTypesList));\n        })\n        .catch( error => {\n            console.log(`${fetchRentalItemTypesAPI} Error`, error);\n        });\n    }, 0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Rental Item Types List\"\n                tableRef={tableRef}\n                search={false} \n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'rentalItemTypeRef', \n                        render: rowData => {\n                            return rowData.rentalItemTypeRef\n                        }\n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return rowData.name\n                        } \n                    },\n                    { \n                        title: 'Code', \n                        field: 'code', \n                        render: rowData => {\n                            return rowData.code\n                        } \n                    },\n                    { \n                        title: 'Item Type', \n                        field: 'itemtype', \n                        render: rowData => {\n                            return rowData.itemtype\n                        } \n                    }\n                ]}\n                data={ rows }\n                actions={\n                    [\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Rental Item\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/rentalitemtype/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add  Rental Item\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Add onClick\", event, rowData);\n                                history.push(\"/adminpanel/rentalitemtype/add\");\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}\n","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel, \n    Select,\n    MenuItem, \n    FormHelperText,\n    FormControl\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst getTrailer = `${apiUrl}/admin/trailer`;\nconst saveTrailer = `${apiUrl}/admin/trailer`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nfunction getReadableDuration(durationIn) {\n    if(durationIn === 1) {\n        return \"Additional Day\";\n    } \n    const msHours = 60 * 60 * 1000;\n    const durationHours = Math.floor(durationIn / msHours);\n    if(durationHours < 24) {\n        return `${durationHours} Hours`;\n    }\n    const durationDays = Math.floor(durationHours/24);\n    return `${durationDays} Days`;\n}\n\nexport default function TrailerEdit(props) {\n    console.log(\"TrailerEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { trailerId } = useParams();\n    console.log(\"trailerId\", trailerId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!trailerId && !userData.acl.TRAILER.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    if(trailerId && !userData.acl.TRAILER.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    let rentalItemTypesList = localStorage.getItem('rentalitemtypes');\n    rentalItemTypesList = JSON.parse(rentalItemTypesList);\n    console.log(\"rentalItemTypesList\", rentalItemTypesList);\n\n    const rentalItemTypesTrailersList = rentalItemTypesList.filter(rentalItemType => {\n        return (rentalItemType.itemtype === \"trailer\");\n    });\n\n    const trailerStart = {\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        size: \"\",\n        capacity: \"\",\n        tare: \"\",\n        features: [],\n        rentalCharges: [],\n        dlrCharges: 0,\n        file: null,\n        isFeatured: false,\n        availability: false,\n        photosLinks: [],\n        photos: null\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [trailer, setTrailer] = useState(trailerStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n            const requestOptions = {\n                method: 'GET',\n                headers: authHeader(),\n\n            };\n            fetch(`${getTrailer}?id=${trailerId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                const trailerObj = res.trailerObj;\n                \n                setTrailer({\n                    ...trailer,\n                    name: trailerObj.name,\n                    type: trailerObj.type,\n                    description: trailerObj.description,\n                    size: trailerObj.size,\n                    capacity: trailerObj.capacity,\n                    tare: trailerObj.tare,\n                    features: trailerObj.features,\n                    rentalCharges: trailerObj.rentalCharges,\n                    dlrCharges: trailerObj.dlrCharges,\n                    isFeatured: trailerObj.isFeatured ? trailerObj.isFeatured : false,\n                    availability: trailerObj.availability ? trailerObj.availability : false,\n                    photosLinks: trailerObj.photos,\n                    photos: null,\n                    rates: null\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Trailer data\", err);\n            })\n    }, [loadOnce]);\n \n    const [formValidError, setFormValidError] = useState({\n        name: false,\n        type: false,\n        description: false,\n        size: false,\n        capacity: false,\n        tare: false,\n        features: false,\n        rentalCharges: false,\n        dlrCharges: false,\n        isFeatured: false,\n        availability: false,\n        photos: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        size: \"\",\n        capacity: \"\",\n        tare: \"\",\n        features: \"\",\n        rentalCharges: \"\",\n        dlrCharges: \"\",\n        isFeatured: \"\",\n        availability: \"\",\n        photos: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.name ||\n            formValidError.type ||\n            formValidError.description ||\n            formValidError.size ||\n            formValidError.capacity ||\n            formValidError.tare ||\n            formValidError.features ||\n            formValidError.rentalCharges ||\n            formValidError.dlrCharges ||\n            formValidError.isFeatured ||\n            formValidError.availability ||\n            formValidError.photos\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        let requestOptions = {\n            method: 'POST'\n        };\n\n        if(trailer.rates || trailer.photos) {\n            const formData = new FormData();\n\n            formData.append('name', trailer.name);\n            formData.append('type', trailer.type);\n            formData.append('description', trailer.description);\n            formData.append('size', trailer.size);\n            formData.append('capacity', trailer.capacity);\n            formData.append('tare', trailer.capacity);\n            formData.append('features', trailer.features);\n            formData.append('dlrCharges', trailer.dlrCharges);\n            formData.append('availability', trailer.availability);\n            formData.append('isFeatured', trailer.isFeatured);\n\n            if(trailer.rates) {\n                formData.append('rates', trailer.rates, trailer.rates.name);\n            } else if(trailer.rentalCharges) {\n                formData.append('rentalCharges', trailer.rentalCharges)\n            }\n            if(trailer.photos && trailer.photos.length > 0) {\n                for(let i = 0; i < trailer.photos.length; i++) {\n                    formData.append('photos', trailer.photos[i], trailer.photos[i].name);\n                }\n            }\n\n            if(trailerId) {\n                formData.append('_id', trailerId);\n            }\n\n            console.log(\"formData\", formData);\n\n            requestOptions.headers = { \n                ...authHeader()\n            };\n            requestOptions.body = formData;\n        } else {\n            const reqObj = {\n                name: trailer.name,\n                type: trailer.type,\n                description: trailer.description,\n                size: trailer.size,\n                capacity: trailer.capacity,\n                tare: trailer.tare,\n                features: trailer.features,\n                rentalCharges: trailer.rentalCharges,\n                dlrCharges: trailer.dlrCharges,\n                availability: trailer.availability,\n                isFeatured: trailer.isFeatured\n            };\n\n            if(trailerId) {\n                reqObj._id = trailerId;\n            }\n\n            requestOptions.headers = { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            };\n            requestOptions.body = JSON.stringify(reqObj);\n        }\n\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveTrailer, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveTrailer} Response`, res);\n\n            const trailerObj = res.trailerObj;\n                \n            setTrailer({\n                ...trailer,\n                name: trailerObj.name,\n                type: trailerObj.type,\n                description: trailerObj.description,\n                size: trailerObj.size,\n                capacity: trailerObj.capacity,\n                tare: trailerObj.tare,\n                features: trailerObj.features,\n                rentalCharges: trailerObj.rentalCharges,\n                dlrCharges: trailerObj.dlrCharges,\n                isFeatured: trailerObj.isFeatured ? trailerObj.isFeatured : false,\n                availability: trailerObj.availability ? trailerObj.availability : false,\n                photosLinks: trailerObj.photos\n            });\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Trailer data\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveTrailer} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Trailer data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    { trailerId ? \"Edit Trailer\" : \"Add Trailer\" }\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} encType=\"multipart/form-data\" noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={trailer.name}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                name: e.target.value\n                            });\n                        } }\n                    />\n\n                    {  \n                        rentalItemTypesTrailersList && trailer.type && \n                        <Box className=\"SectionContainer\">\n                            <FormControl required  className=\"SectionContainer\">\n                                <InputLabel id=\"itemType-label\">Type</InputLabel>\n                                <Select\n                                    labelId=\"itemType-label\"\n                                    id=\"itemTypeSelect\"\n                                    value={trailer.type}\n                                    onChange={ (e) => { \n                                        setTrailer({\n                                            ...trailer,\n                                            type: e.target.value\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        rentalItemTypesTrailersList.map((itemType, itemTypeIndex) => {\n                                            console.log(\"itemType\", itemType);\n                                            return (<MenuItem key={`type-${itemType.code}`} value={itemType.code}>{itemType.name}</MenuItem>)\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n                   \n\n                    <TextField \n                        aria-label=\"description\" \n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"Description\"\n                        name=\"description\"\n                        autoComplete=\"description\"\n                        autoFocus\n                        multiline={true}\n                        error={formValidError.description}\n                        helperText={formValidErrorMessage.description}\n                        value={trailer.description}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                description: e.target.value\n                            });\n                        } } />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"size\"\n                        label=\"Size\"\n                        name=\"size\"\n                        autoComplete=\"size\"\n                        autoFocus\n                        error={formValidError.size}\n                        helperText={formValidErrorMessage.size}\n                        value={trailer.size}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                size: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"capacity\"\n                        label=\"Capacity\"\n                        name=\"capacity\"\n                        autoComplete=\"capacity\"\n                        autoFocus\n                        error={formValidError.capacity}\n                        helperText={formValidErrorMessage.capacity}\n                        value={trailer.capacity}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                capacity: e.target.value\n                            });\n                        } }\n                    />\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"tare\"\n                        label=\"Tare\"\n                        name=\"tare\"\n                        autoComplete=\"tare\"\n                        autoFocus\n                        error={formValidError.tare}\n                        helperText={formValidErrorMessage.tare}\n                        value={trailer.tare}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                tare: e.target.value\n                            });\n                        } }\n                    />\n\n                    {\n                        <FormGroup className=\"SectionContainer\">\n\n                            <Grid container spacing={0}>\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle1\">\n                                        Features\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={6} className=\"TextAlignRight\">\n                                    <Button\n                                        type=\"button\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.submit}\n                                        onClick={ (e) => {\n                                            const newFeatures = [...trailer.features];\n                                            newFeatures.push(\"\");\n                                            setTrailer({\n                                                ...trailer,\n                                                features: newFeatures\n                                            });\n                                        } }\n                                    >\n                                        Add\n                                    </Button>\n                                </Grid>\n                            </Grid>\n\n                            {\n                                trailer.features.map((feature, featureIndex) => {\n                                    return (\n                                        <TextField\n                                            key={featureIndex}\n                                            variant=\"outlined\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            label=\"Feature\"\n                                            name=\"feature\"\n                                            autoComplete=\"feature\"\n                                            autoFocus\n                                            error={formValidError.features}\n                                            helperText={formValidErrorMessage.features}\n                                            value={feature}\n                                            onChange={ (e) => { \n                                                const newFeatures = [...trailer.features];\n                                                newFeatures[featureIndex] = e.target.value; \n                                                setTrailer({\n                                                    ...trailer,\n                                                    features: newFeatures\n                                                });\n                                            } }\n                                        />\n                                    );\n                                })\n                            }\n                        </FormGroup>\n                    }\n\n                    {\n                        trailer.rentalCharges && \n                        (\n                            <Grid container spacing={0} className=\"SectionContainer\">\n                                \n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\">\n                                        Rental Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Pickup Charges\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Door2Door Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { trailer.rentalCharges.pickUp && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {trailer.rentalCharges.pickUp.map((charge, chargeIndex) => (\n                                                    <TableRow key={`pickup-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { trailer.rentalCharges && trailer.rentalCharges.door2Door && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {trailer.rentalCharges.door2Door.map((charge, chargeIndex) => (\n                                                    <TableRow key={`door2door-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n                            \n                            </Grid>\n                        )\n                    }\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Upload Rental Charges\n                        </Typography>\n\n                        <input\n                            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            name=\"rates\"\n                            onChange={ (e) => {\n                                console.log(e.target.files);\n                                setTrailer({\n                                    ...trailer,\n                                    rates: e.target.files[0]\n                                });\n                            }}\n                            />\n\n                        {/* <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload\n                            </Button>\n                        </label>  */}\n                    </Box>\n\n\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"dlrCharges\"\n                        label=\"Damage Liability Reduction Charges\"\n                        name=\"dlrCharges\"\n                        autoComplete=\"dlrCharges\"\n                        autoFocus\n                        error={formValidError.dlrCharges}\n                        helperText={formValidErrorMessage.dlrCharges}\n                        value={trailer.dlrCharges}\n                        onChange={ (e) => { \n                            setTrailer({\n                                ...trailer,\n                                dlrCharges: e.target.value\n                            });\n                        } }\n                    />\n\n                    <FormGroup className=\"SectionContainer\">\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={trailer.isFeatured} \n                                    name=\"isFeatured\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isFeatured\", e);\n                                        setTrailer({\n                                            ...trailer,\n                                            isFeatured: !trailer.isFeatured\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Featured Trailer Type?\"\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={trailer.availability}\n                                    name=\"availability\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange availability\", (typeof e.target.value), e.target.value);\n                                        console.log(\"trailer.availability\", (typeof trailer.availability));\n                                        setTrailer({\n                                            ...trailer,\n                                            availability: !trailer.availability\n                                        });\n                                    }}  />\n                            }\n                            label=\"Set as availability to be Rented?\"\n                        />\n\n                    </FormGroup>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Photos\n                        </Typography>\n\n                        {\n                            !trailer.photos && \n                            (\n                                <Box className=\"SectionContainer\">\n                                {\n                                    trailer.photosLinks.map((photo, photoIndex) => {\n                                        return (\n                                            <div key={trailer._id+\"_photo\"+photoIndex}>\n                                                <a href={photo}>Photo {(photoIndex + 1)}</a>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                </Box>\n                            )\n                        }\n\n                        <input\n                            accept=\"image/jpeg, image/jpg, image/png\"\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            name=\"photos\"\n                            onChange={ (e) => {\n                                console.log(e.target.files);\n                                setTrailer({\n                                    ...trailer,\n                                    photos: e.target.files\n                                });\n                            }}\n                            />\n\n                        {/* <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload\n                            </Button>\n                        </label>  */}\n                    </Box>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Update\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchTrailerTypesAPI = `${apiUrl}/admin/trailers`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nfunction TrailerList(props) {\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.TRAILER.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Trailer List\"\n                tableRef={tableRef}\n                search={false}\n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'trailerTypeRef', \n                        render: rowData => {\n                            return rowData.trailerTypeRef\n                        }\n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return rowData.name\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'Type', \n                        field: 'type', \n                        render: rowData => {\n                            return rowData.type\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'Description', \n                        field: 'description', \n                        render: rowData => {\n                            return (\n                                <div style={{\n                                    /* height: \"100px\", \n                                    whiteSpace: \"nowrap\",\n                                    overflow: \"hidden\",\n                                    textOverflow: \"ellipsis\"  */\n                                }}>{rowData.description}</div>\n                            )\n                        },\n                        cellStyle: { \n                            verticalAlign: 'top', \n                            \n                        }\n                    },\n                    { \n                        title: 'Size', \n                        field: 'size', \n                        render: rowData => {\n                            return rowData.size\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'Capacity', \n                        field: 'capacity', \n                        render: rowData => {\n                            return rowData.capacity\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'Tare', \n                        field: 'tare', \n                        render: rowData => {\n                            return rowData.tare\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'Features', \n                        field: 'features', \n                        render: rowData => {\n                            return rowData.features\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'Photos', \n                        field: 'photos', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    {\n                                        rowData.photos.map((photo, photoIndex) => {\n                                            return (\n                                                <div>\n                                                    <a key={rowData._id+\"_photo\"+photoIndex} href={photo}>Photo {(photoIndex + 1)}</a>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            );\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'Is Available?', \n                        field: 'availability', \n                        render: rowData => {\n                            return rowData.availability ? \"Yes\" : \"No\"\n                        },\n                        cellStyle: { verticalAlign: 'top' }\n                    },\n                    { \n                        title: 'is Featured?', \n                        field: 'isFeatured', \n                        render: rowData => {\n                            return rowData.isFeatured ? \"Yes\" : \"No\"\n                        },\n                        cellStyle: { verticalAlign: 'top', height: \"auto\" }\n                    }\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchTrailerTypesAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchTrailerTypesAPI}`, requestOptions)\n                            fetch(`${fetchTrailerTypesAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchTrailerTypesAPI} Response`, res);\n                                const trailersList = res.trailersList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof trailersList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...trailersList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: trailersList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchTrailerTypesAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Trailer\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/trailertype/edit/${rowData._id}`);\n                            },\n                            cellStyle: { verticalAlign: 'top' }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add Trailer\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Add onClick\", event, rowData);\n                                history.push(\"/adminpanel/trailertype/add\");\n                            },\n                            cellStyle: { verticalAlign: 'top' }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1,\n                        rowStyle: {\n                            height: \"100px\",\n                            maxHeight: \"100px\",\n                            overflow: \"scroll\"\n                        }\n                    }\n                }\n            />\n        </div>\n    )\n}\n\n// cancel, check-circle\n\nexport default TrailerList;","import React, { useState, useEffect, Fragment } from 'react';\nimport {\n    useLocation,\n    useHistory,\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Avatar,\n    Button,\n    CssBaseline,\n    TextField,\n    FormGroup,\n    FormControlLabel,\n    Checkbox,\n    Link,\n    Grid,\n    Box,\n    LockOutlinedIcon,\n    Typography,\n    Container,\n    TextareaAutosize,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    InputLabel, \n    Select,\n    MenuItem, \n    FormHelperText,\n    FormControl\n} from '@material-ui/core';\n\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst getUpsellItem = `${apiUrl}/admin/upsellitem`;\nconst saveUpsellItem = `${apiUrl}/admin/upsellitem`;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 200,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    }\n}));\n\nfunction getReadableDuration(durationIn) {\n    if(durationIn === 1) {\n        return \"Additional Day\";\n    } \n    const msHours = 60 * 60 * 1000;\n    const durationHours = Math.floor(durationIn / msHours);\n    if(durationHours < 24) {\n        return `${durationHours} Hours`;\n    }\n    const durationDays = Math.floor(durationHours/24);\n    return `${durationDays} Days`;\n}\n\nexport default function UpsellEdit(props) {\n    console.log(\"UpsellEdit\", props);\n\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    const { upsellItemId } = useParams();\n    console.log(\"upsellItemId\", upsellItemId);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!upsellItemId && !userData.acl.UPSELL.includes(\"ADD\")) {\n        history.replace(from);\n    }\n    if(upsellItemId && !userData.acl.UPSELL.includes(\"UPDATE\")) {\n        history.replace(from);\n    }\n\n    let rentalItemTypesList = localStorage.getItem('rentalitemtypes');\n    rentalItemTypesList = JSON.parse(rentalItemTypesList);\n    console.log(\"rentalItemTypesList\", rentalItemTypesList);\n\n    const rentalItemTypesUpsellList = rentalItemTypesList.filter(rentalItemType => {\n        return (rentalItemType.itemtype === \"upsellitem\");\n    });\n\n    const upsellItemStart = {\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        rentalCharges: {},\n        dlrCharges: 0,\n        isFeatured: false,\n        availability: false,\n        photosLinks: [],\n        photos: null,\n        rates: null\n    };\n\n    const [loadOnce, setLoadOnce] = useState(0);\n    const [upsellItem, setUpsellItem] = useState(upsellItemStart);\n\n    const [successMessage, setSuccessMessage] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n            const requestOptions = {\n                method: 'GET',\n                headers: authHeader(),\n\n            };\n            fetch(`${getUpsellItem}?id=${upsellItemId}`, requestOptions)\n            .then( res => res.json() )\n            .then( res => {\n                const upsellItemObj = res.upsellItemObj;\n                \n                setUpsellItem({\n                    ...upsellItem,\n                    name: upsellItemObj.name,\n                    type: upsellItemObj.type,\n                    description: upsellItemObj.description,\n                    rentalCharges: upsellItemObj.rentalCharges,\n                    dlrCharges: upsellItemObj.dlrCharges,\n                    isFeatured: upsellItemObj.isFeatured ? upsellItemObj.isFeatured : false,\n                    availability: upsellItemObj.availability ? upsellItemObj.availability : false,\n                    photosLinks: upsellItemObj.photos\n                });\n            })\n            .catch( err => {\n                console.log(\"Error occurred while fetching Upsell Item data\", err);\n            })\n    }, [loadOnce]);\n \n    const [formValidError, setFormValidError] = useState({\n        name: false,\n        type: false,\n        description: false,\n        rentalCharges: false,\n        dlrCharges: false,\n        isFeatured: false,\n        availability: false,\n        photos: false\n    });\n\n    const [formValidErrorMessage, setFormValidErrorMessage] = useState({\n        name: \"\",\n        type: \"\",\n        description: \"\",\n        rentalCharges: \"\",\n        dlrCharges: \"\",\n        isFeatured: \"\",\n        availability: \"\",\n        photos: \"\"\n    });\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        const isError = (\n            formValidError.name ||\n            formValidError.type ||\n            formValidError.description ||\n            formValidError.rentalCharges ||\n            formValidError.dlrCharges ||\n            formValidError.isFeatured ||\n            formValidError.availability ||\n            formValidError.photos\n        );\n\n        if(isError) {\n            return false;\n        }\n\n        let requestOptions = {\n            method: 'POST'\n        };\n\n        if(upsellItem.rates || upsellItem.photos) {\n            const formData = new FormData();\n\n            formData.append('name', upsellItem.name);\n            formData.append('type', upsellItem.type);\n            formData.append('description', upsellItem.description);\n            formData.append('dlrCharges', upsellItem.dlrCharges);\n            formData.append('availability', upsellItem.availability);\n            formData.append('isFeatured', upsellItem.isFeatured);\n\n            if(upsellItem.rates) {\n                formData.append('rates', upsellItem.rates, upsellItem.rates.name);\n            } else if(upsellItem.rentalCharges) {\n                formData.append('rentalCharges', upsellItem.rentalCharges)\n            }\n            if(upsellItem.photos && upsellItem.photos.length > 0) {\n                for(let i = 0; i < upsellItem.photos.length; i++) {\n                    formData.append('photos', upsellItem.photos[i], upsellItem.photos[i].name);\n                }\n            }\n\n            if(upsellItemId) {\n                formData.append('_id', upsellItemId);\n            }\n\n            console.log(\"formData\", formData);\n\n            requestOptions.headers = { \n                ...authHeader()\n            };\n            requestOptions.body = formData;\n        } else {\n            const reqObj = {\n                name: upsellItem.name,\n                type: upsellItem.type,\n                description: upsellItem.description,\n                rentalCharges: upsellItem.rentalCharges,\n                dlrCharges: upsellItem.dlrCharges,\n                availability: upsellItem.availability,\n                isFeatured: upsellItem.isFeatured\n            };\n\n            if(upsellItemId) {\n                reqObj._id = upsellItemId;\n            }\n\n            requestOptions.headers = { \n                ...authHeader(),\n                'Content-Type': 'application/json'\n            };\n            requestOptions.body = JSON.stringify(reqObj);\n        }\n\n        console.log(\"requestOptions\", requestOptions);\n    \n        fetch(saveUpsellItem, requestOptions)\n        .then( res => res.json() )\n        .then( res => {\n            console.log(`${saveUpsellItem} Response`, res);\n\n            const upsellItemObj = res.upsellItemObj;\n                \n            setUpsellItem({\n                ...upsellItem,\n                name: upsellItemObj.name,\n                type: upsellItemObj.type,\n                description: upsellItemObj.description,\n                rentalCharges: upsellItemObj.rentalCharges,\n                dlrCharges: upsellItemObj.dlrCharges,\n                isFeatured: upsellItemObj.isFeatured ? upsellItemObj.isFeatured : false,\n                availability: upsellItemObj.availability ? upsellItemObj.availability : false,\n                photosLinks: upsellItemObj.photos,\n                photos: null,\n                rates: null\n            });\n            \n            setErrorMessage(\"\");\n            setSuccessMessage(\"Successfully saved Upsell Item data\");\n\n            setTimeout(() => {\n                setSuccessMessage(\"\");\n            }, 5000);\n        })\n        .catch( error => {\n            console.log(`${saveUpsellItem} Error`, error);\n\n            setErrorMessage(\"Error occurred while saving Upsell Item data\");\n        });\n    }\n\n    \n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n\n            <CssBaseline />\n\n            <div className={classes.paper}>\n\n                <Typography component=\"h1\" variant=\"h5\">\n                    { upsellItemId ? \"Edit Upsell Item\" : \"Add Upsell Item\" }\n                </Typography>\n\n                { \n                    (successMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {successMessage}\n                    </Typography>\n                }\n\n                { \n                    (errorMessage !== \"\") &&\n                    <Typography component=\"h6\" variant=\"h5\">\n                        {errorMessage}\n                    </Typography>\n                }\n                    \n\n                <form className={classes.form} encType=\"multipart/form-data\" noValidate>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        autoComplete=\"name\"\n                        autoFocus\n                        error={formValidError.name}\n                        helperText={formValidErrorMessage.name}\n                        value={upsellItem.name}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                name: e.target.value\n                            });\n                        } }\n                    />\n                    \n                    { \n                        rentalItemTypesUpsellList && upsellItem.type && \n                        <Box className=\"SectionContainer\">\n                            <FormControl required>\n                                <InputLabel id=\"itemType-label\">Type</InputLabel>\n                                <Select\n                                    labelId=\"itemType-label\"\n                                    id=\"itemTypeSelect\"\n                                    value={upsellItem.type}\n                                    onChange={ (e) => { \n                                        setUpsellItem({\n                                            ...upsellItem,\n                                            type: e.target.value\n                                        });\n                                    } }\n                                    className={classes.selectEmpty}\n                                >\n                                    {\n                                        rentalItemTypesUpsellList.map((itemType, itemTypeIndex) => {\n                                            return (<MenuItem key={`type-${itemType.code}`} value={itemType.code}>{itemType.name}</MenuItem>)\n                                        })\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Box>\n                    }\n\n                    <TextField \n                        aria-label=\"description\" \n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"Description\"\n                        name=\"description\"\n                        autoComplete=\"description\"\n                        autoFocus\n                        multiline={true}\n                        error={formValidError.description}\n                        helperText={formValidErrorMessage.description}\n                        value={upsellItem.description}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                description: e.target.value\n                            });\n                        } } />\n\n\n                    {\n                        upsellItem.rentalCharges && \n                        (\n                            <Grid container spacing={0} className=\"SectionContainer\">\n                                \n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\">\n                                        Rental Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Pickup Charges\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={6}>\n                                    <Typography variant=\"subtitle2\">\n                                        Door2Door Charges\n                                    </Typography>\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { upsellItem.rentalCharges.pickUp && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {upsellItem.rentalCharges.pickUp.map((charge, chargeIndex) => (\n                                                    <TableRow key={`pickup-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n\n                                <Grid item sm={6}>\n                                    { upsellItem.rentalCharges && upsellItem.rentalCharges.door2Door && \n                                        (<TableContainer component={Paper}>\n                                            <Table className={classes.table} aria-label=\"simple table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <TableCell>Hire Period</TableCell>\n                                                        <TableCell>Hire Rate</TableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                {upsellItem.rentalCharges.door2Door.map((charge, chargeIndex) => (\n                                                    <TableRow key={`door2door-${chargeIndex}`}>\n                                                        <TableCell>{getReadableDuration(charge.duration)}</TableCell>\n                                                        <TableCell>{charge.charges}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>)\n                                    }\n                                </Grid>\n                            \n                            </Grid>\n                        )\n                    }\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Upload Rental Charges\n                        </Typography>\n\n                        <input\n                            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            name=\"rates\"\n                            onChange={ (e) => {\n                                console.log(e.target.files);\n                                setUpsellItem({\n                                    ...upsellItem,\n                                    rates: e.target.files[0]\n                                });\n                            }}\n                            />\n\n                        {/* <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload\n                            </Button>\n                        </label>  */}\n                    </Box>\n\n\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"dlrCharges\"\n                        label=\"Damage Liability Reduction Charges\"\n                        name=\"dlrCharges\"\n                        autoComplete=\"dlrCharges\"\n                        autoFocus\n                        error={formValidError.dlrCharges}\n                        helperText={formValidErrorMessage.dlrCharges}\n                        value={upsellItem.dlrCharges}\n                        onChange={ (e) => { \n                            setUpsellItem({\n                                ...upsellItem,\n                                dlrCharges: e.target.value\n                            });\n                        } }\n                    />\n\n                    <FormGroup className=\"SectionContainer\">\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={upsellItem.isFeatured} \n                                    name=\"isFeatured\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange isFeatured\", e);\n                                        setUpsellItem({\n                                            ...upsellItem,\n                                            isFeatured: !upsellItem.isFeatured\n                                        });\n                                    }}  />\n                            }\n                            label=\"Is Featured Upsell Item Type?\"\n                        />\n\n                        <FormControlLabel\n                            control={\n                                <Checkbox \n                                    checked={upsellItem.availability}\n                                    name=\"availability\"\n                                    onChange={(e) => { \n                                        console.log(\"onChange availability\", (typeof e.target.value), e.target.value);\n                                        console.log(\"upsellItem.availability\", (typeof upsellItem.availability));\n                                        setUpsellItem({\n                                            ...upsellItem,\n                                            availability: !upsellItem.availability\n                                        });\n                                    }}  />\n                            }\n                            label=\"Set as availability to be Rented?\"\n                        />\n\n                    </FormGroup>\n\n                    <Box className=\"SectionContainer\">\n\n                        <Typography variant=\"subtitle1\">\n                            Photos\n                        </Typography>\n\n                        {\n                            !upsellItem.photos && \n                            (\n                                <Box className=\"SectionContainer\">\n                                {\n                                    upsellItem.photosLinks.map((photo, photoIndex) => {\n                                        return (\n                                            <div key={upsellItem._id+\"_photo\"+photoIndex}>\n                                                <a href={photo}>Photo {(photoIndex + 1)}</a>\n                                            </div>\n                                        )\n                                    })\n                                }\n                                </Box>\n                            )\n                        }\n\n                        <input\n                            accept=\"image/jpeg, image/jpg, image/png, application/pdf\"\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            name=\"photos\"\n                            onChange={ (e) => {\n                                console.log(e.target.files);\n                                setUpsellItem({\n                                    ...upsellItem,\n                                    photos: e.target.files\n                                });\n                            }}\n                            />\n\n                        {/* <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload\n                            </Button>\n                        </label>  */}\n                    </Box>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Update\n                    </Button>\n\n                </form>\n\n            </div>\n\n        </Container>\n    )\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from \"react-router-dom\";\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n\t},\n}));\n\nconst apiUrl = common.apiUrl;\nconst fetchUpsellItemTypesAPI = `${apiUrl}/admin/upsellitems`;\n\nexport default function UpsellItemsList(props) {\n    const classes = useStyles();\n\n    let userData = localStorage.getItem('user');\n    userData = JSON.parse(userData);\n    console.log(\"userData\", userData);\n\n    let history = useHistory();\n    console.log(\"history\", history);\n\n    let location = useLocation();\n    console.log(\"location\", location);\n\n    let { from } = location.state || { from: { pathname: \"/adminpanel/\" } };\n    if(!userData.acl.UPSELL.includes(\"VIEW\")) {\n        history.replace(from);\n    }\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n            <MaterialTable \n                title=\"Upsell Items List\"\n                tableRef={tableRef}\n                search={false} \n                columns={[\n                    { \n                        title: 'ID', \n                        field: 'upsellItemTypeRef', \n                        render: rowData => {\n                            return rowData.upsellItemTypeRef\n                        }\n                    },\n                    { \n                        title: 'Name', \n                        field: 'name', \n                        render: rowData => {\n                            return rowData.name\n                        } \n                    },\n                    { \n                        title: 'Type', \n                        field: 'type', \n                        render: rowData => {\n                            return rowData.type\n                        } \n                    },\n                    { \n                        title: 'Description', \n                        field: 'description', \n                        render: rowData => {\n                            return rowData.description\n                        } \n                    },\n                    { \n                        title: 'Photos', \n                        field: 'photos', \n                        render: rowData => {\n                            return (\n                                <div>\n                                    {\n                                        rowData.photos.map((photo, photoIndex) => {\n                                            return (\n                                                <div>\n                                                    <a key={rowData._id+\"_photo\"+photoIndex} href={photo}>Photo {(photoIndex + 1)}</a>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                </div>\n                            );\n                        } \n                    },\n                    { \n                        title: 'Is Available?', \n                        field: 'availability', \n                        render: rowData => {\n                            return rowData.availability ? \"true\" : \"false\"\n                        } \n                    },\n                    { \n                        title: 'is Featured?', \n                        field: 'isFeatured', \n                        render: rowData => {\n                            return rowData.isFeatured ? \"true\" : \"false\"\n                        } \n                    }\n                ]} \n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchUpsellItemTypesAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchUpsellItemTypesAPI}`, requestOptions)\n                            fetch(`${fetchUpsellItemTypesAPI}?count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchUpsellItemTypesAPI} Response`, res);\n                                const upsellItemsList = res.upsellItemsList || [];\n                                const totalCount = res.totalCount ? res.totalCount : 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof upsellItemsList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...upsellItemsList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: upsellItemsList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(`${fetchUpsellItemTypesAPI} Error`, error);\n                                reject(error);\n                            });\n                        });\n                    }\n                } \n                actions={\n                    [\n                        {\n                            icon: \"create\",\n                            tooltip: \"Edit Upsell Item\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Edit onClick\", event, rowData);\n                                history.push(`/adminpanel/upsellitemtype/edit/${rowData._id}`);\n                            }\n                        },\n                        {\n                            icon: \"add_circle\",\n                            tooltip: \"Add Upsell Item\",\n                            isFreeAction: true,\n                            onClick: (event, rowData) => {\n                                console.log(\"Add onClick\", event, rowData);\n                                history.push(\"/adminpanel/upsellitemtype/add\");\n                            }\n                        }\n                    ]\n                } \n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        </div>\n    )\n}","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport MaterialTable from 'material-table';\n\nimport {\n    ButtonGroup,\n    Button\n} from '@material-ui/core';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { authHeader } from '../../_helpers';\nimport { common } from '../../_constants/common';\n\nimport '../../App.css';\n\nconst apiUrl = common.apiUrl;\nconst fetchRentalsAPI = `${apiUrl}/admin/rentals`;\nconst saveRentalApproval = `${apiUrl}/admin/rental/approval`;\n\nconst approvalStatusEnum = {\n    0: \"Pending\",\n    1: \"Approved\",\n    2: \"Rejected\"\n}\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t},\n\tpaper: {\n\t\twidth: '100%',\n\t\tmarginBottom: theme.spacing(2),\n    },\n    paperCenter: {\n        width: '100%',\n        textAlign: 'center',\n\t\tmarginBottom: theme.spacing(2),\n\t},\n\ttable: {\n\t\tminWidth: 750,\n\t},\n\tvisuallyHidden: {\n\t\tborder: 0,\n\t\tclip: 'rect(0 0 0 0)',\n\t\theight: 1,\n\t\tmargin: -1,\n\t\toverflow: 'hidden',\n\t\tpadding: 0,\n\t\tposition: 'absolute',\n\t\ttop: 20,\n\t\twidth: 1,\n    }\n}));\n\nfunction Rentals(props) {\n    const classes = useStyles();\n\n    const [rows, setRows] = React.useState([]);\n    const [totalCount, setTotalCount] = React.useState(0);\n    const [requestType, setRequestType] = React.useState(\"rental\");\n    // const [requestType, setRequestType] = React.useState(\"extension\");\n    // const [requestType, setRequestType] = React.useState(\"reschedule\");\n    \n    const tableRef = React.createRef();\n\n    return (\n        <div className={classes.root}>\n\n            <div className={classes.paperCenter}>\n\n                <ButtonGroup size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\n                    <Button \n                        variant={ (requestType === \"rental\") ? \"contained\" : \"outlined\" } \n                        onClick={ () => {\n                            console.log(\"Rental Button Clicked\");\n                            setRequestType(\"rental\");\n                            if(tableRef.current) {\n                                tableRef.current.onQueryChange();\n                            }\n                        }\n                    }>\n                        Rental\n                    </Button>\n                    <Button \n                        variant={ (requestType === \"extension\") ? \"contained\" : \"outlined\" } \n                        onClick={ () => {\n                            console.log(\"Extension Button Clicked\");\n                            setRequestType(\"extension\");\n                            if(tableRef.current) {\n                                tableRef.current.onQueryChange();\n                            }\n                        }\n                    }>\n                        Extension\n                    </Button>\n                    <Button \n                        variant={ (requestType === \"reschedule\") ? \"contained\" : \"outlined\" } \n                        onClick={ () => {\n                            console.log(\"Reschedule Button Clicked\");\n                            setRequestType(\"reschedule\");\n                            if(tableRef.current) {\n                                tableRef.current.onQueryChange();\n                            }\n                        }\n                    }>\n                        Reschedule\n                    </Button>\n                </ButtonGroup>\n\n            </div>\n            \n            <MaterialTable \n                title={ `${ requestType === \"rental\" ? \"Rentals List\" : ( requestType === \"extension\" ? \"Extensions List\" : \"Reschedule List\" ) }` }\n                tableRef={tableRef}\n                columns={[\n                    { \n                        title: 'Rented Item Type', \n                        field: 'rentedItemType', \n                        render: rowData => {\n                            return `${rowData.rentedItem}`\n                        } \n                    },\n                    { \n                        title: 'Rented Item', \n                        field: 'rentedItemName', \n                        render: rowData => {\n                            return `${rowData.rentedItemName}`\n                        } \n                    },\n                    { \n                        title: 'Licensee Name', \n                        field: 'licenseeName', \n                        render: rowData => {\n                            return `${rowData.licenseeName}`\n                        } \n                    },\n                    { \n                        title: 'Customer Name', \n                        field: 'customerName', \n                        render: rowData => {\n                            return `${rowData.customerName}`\n                        }\n                    },\n                    { \n                        title: 'Request Type', \n                        field: 'requestType', \n                        render: rowData => {\n                            return `${rowData.requestType}`\n                        } \n                    },\n                    { \n                        title: 'Rental Period Start Date', \n                        field: 'rentalPeriodStart', \n                        render: rowData => {\n                            return rowData.rentalPeriodStart ? rowData.rentalPeriodStart : \"NA\"\n                        } \n                    },\n                    { \n                        title: 'Rental Period End Date', \n                        field: 'rentalPeriodEnd', \n                        render: rowData => {\n                            return rowData.rentalPeriodEnd ? rowData.rentalPeriodEnd : \"NA\"\n                        } \n                    },\n                    { \n                        title: 'Rental Request Status', \n                        field: 'isApproved',\n                        render: rowData => {\n                            return approvalStatusEnum[rowData.isApproved];\n                        } \n                    },\n                ]}\n                data={ \n                    query => {\n                        console.log(\"MaterialTable data\", query);\n                        const rowsPerPage = query.pageSize;\n                        const page = query.page;\n\n                        const requestOptions = {\n                            method: 'GET',\n                            headers: authHeader()\n                        };\n                        // return fetch(`${fetchRentalsAPI}?count=${rowsPerPage}&skip${(page * rowsPerPage)}`, requestOptions)\n                        return new Promise((resolve, reject) => {\n                            // fetch(`${fetchRentalsAPI}`, requestOptions)\n                            fetch(`${fetchRentalsAPI}?type=${requestType}&count=${rowsPerPage}&skip=${(page * rowsPerPage)}`, requestOptions)\n                            .then( res => res.json() )\n                            .then( res => {\n                                console.log(`${fetchRentalsAPI} Response`, res);\n                                const requestList = res.requestList || [];\n                                const totalCount = res.totalCount || 0;\n                                \n                                let newRows = [];\n                                setRows((currentRows) => {\n                                    console.log((typeof currentRows), (typeof requestList));\n                                    newRows = [\n                                        ...currentRows,\n                                        ...requestList\n                                    ];\n                                    console.log(\"newRows\", newRows);\n                                    return newRows;\n                                });\n\n                                setTotalCount(totalCount);\n\n                                resolve({\n                                    data: requestList,\n                                    page: page,\n                                    totalCount: totalCount\n                                })\n                            })\n                            .catch( error => {\n                                console.log(\"getCustomer Error\", error);\n                                reject(error);\n                            });\n                        });\n                    }\n                }\n                actions={\n                    [\n                        {\n                            icon: \"check_circle\",\n                            tooltip: \"Approve\",\n                            // disabled: (rowData.isApproved !== 0),\n                            onClick: (event, rowData) => {\n                                console.log(\"Approve onClick\", event, rowData);\n                                // if((rowData.isApproved !== 0)) {\n\n                                    let requestBody = { \n                                        rentalId: rowData.rentalId, \n                                        requestType: rowData.requestType,\n                                        approvalStatus: \"approved\"\n                                    };\n\n                                    if(rowData.requestType === \"extension\") {\n                                        requestBody.extensionId = rowData.extensionId;\n                                    }\n                                    if(rowData.requestType === \"reschedule\") {\n                                        requestBody.scheduleId = rowData.scheduleId;\n                                    }\n\n                                    const requestOptions = {\n                                        method: 'PUT',\n                                        headers: { \n                                            ...authHeader(),\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify(requestBody)\n                                    };\n                                    console.log(\"requestOptions\", requestOptions);\n                                \n                                    fetch(saveRentalApproval, requestOptions)\n                                    .then( res => res.json() )\n                                    .then( res => {\n                                        console.log(`${saveRentalApproval} Response`, res);\n                                        // rowData.driverLicense.verified = true;\n                                        // rowData.driverLicense.accepted = true;\n                                        if(tableRef.current) {\n                                            tableRef.current.onQueryChange();\n                                        }\n                                    })\n                                    .catch( error => {\n                                        console.log(`${saveRentalApproval} Error`, error);\n                                    });\n                                // }\n                            }\n                        },\n                        {\n                            icon: \"cancel\",\n                            tooltip: \"Reject\",\n                            onClick: (event, rowData) => {\n                                console.log(\"Reject onClick\", event, rowData);\n                                // if((rowData.isApproved !== 0)) {\n                                    let requestBody = { \n                                        rentalId: rowData.rentalId, \n                                        requestType: rowData.requestType,\n                                        approvalStatus: \"rejected\"\n                                    };\n\n                                    if(rowData.requestType === \"extension\") {\n                                        requestBody.extensionId = rowData.extensionId;\n                                    }\n                                    if(rowData.requestType === \"reschedule\") {\n                                        requestBody.scheduleId = rowData.scheduleId;\n                                    }\n\n                                    const requestOptions = {\n                                        method: 'PUT',\n                                        headers: { \n                                            ...authHeader(),\n                                            'Content-Type': 'application/json'\n                                        },\n                                        body: JSON.stringify(requestBody)\n                                    };\n                                    console.log(\"requestOptions\", requestOptions);\n                                \n                                    fetch(saveRentalApproval, requestOptions)\n                                    .then( res => res.json() )\n                                    .then( res => {\n                                        console.log(`${saveRentalApproval} Response`, res);\n                                        // rowData.driverLicense.verified = true;\n                                        // rowData.driverLicense.accepted = false;\n                                        if(tableRef.current) {\n                                            tableRef.current.onQueryChange();\n                                        }\n                                    })\n                                    .catch( error => {\n                                        console.log(`${saveRentalApproval} Error`, error);\n                                    });\n                                // }\n                            }\n                        }\n                    ]\n                }\n                options={\n                    {\n                        actionsColumnIndex: -1\n                    }\n                }\n            />\n        \n        </div>\n    )\n}\n\n// cancel, check-circle\n\nexport default Rentals;","import React from 'react';\nimport { \n    Router, \n    Route, \n    Switch, \n\tRedirect,\n\tuseHistory\n} from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { history } from './_helpers';\nimport { PrivateRoute } from './_components';\n\nimport { Container } from '@material-ui/core';\n\nimport AppHeader from './_components/common/AppHeader';\nimport AppFooter from './_components/common/AppFooter';\nimport Home from './_components/common/Home';\n\nimport CustomerList from './_components/customer/CustomerList';\nimport CustomerEdit from './_components/customer/CustomerEdit';\nimport CustomerResetPassword from './_components/customer/CustomerResetPassword'\n\nimport EmployeeSignIn from './_components/employee/EmployeeSignIn';\nimport EmployeeInvite from './_components/employee/EmployeeInvite';\nimport EmployeeInviteAccept from './_components/employee/EmployeeInviteAccept';\nimport EmployeeEdit from './_components/employee/EmployeeEdit';\nimport EmployeeList from './_components/employee/EmployeeList';\nimport EmployeeResetPassword from './_components/employee/EmployeeResetPassword';\n\nimport FinancialLicensee from './_components/financial/FinancialLicensee';\nimport FinancialTrailer from './_components/financial/FinancialTrailer';\n\nimport LicenseeList from './_components/licensee/LicenseeList';\nimport LicenseeSignup from './_components/licensee/LicenseeSignup';\nimport LicenseeEdit from './_components/licensee/LicenseeEdit';\nimport LicenseeEmployeeEdit from './_components/licensee/LicenseeEmployeeEdit';\nimport LicenseeEmployeeInvite from './_components/licensee/LicenseeEmployeeInvite';\nimport LicenseeEmployeeInviteAccept from './_components/licensee/LicenseeEmployeeInviteAccept';\nimport LicenseeEmployeeList from './_components/licensee/LicenseeEmployeeList';\nimport LicenseeEmployeeResetPassword from './_components/licensee/LicenseeEmployeeResetPassword';\n\n\nimport LicenseeTrailerEdit from './_components/licensee_rentalitems/TrailerEdit';\nimport LicenseeTrailerList from './_components/licensee_rentalitems/TrailerList';\nimport LicenseeUpsellItemEdit from './_components/licensee_rentalitems/UpsellItemEdit';\nimport LicenseeUpsellItemList from './_components/licensee_rentalitems/UpsellItemList';\n\nimport BlockTrailerList from './_components/licensee_rentalitems/BlockTrailerList';\nimport BlockTrailerEdit from './_components/licensee_rentalitems/BlockTrailerEdit';\n\nimport LicenseeTrailerInsurance from './_components/licensee_rentalitems/TrailerInsurance';\nimport LicenseeTrailerServicing from './_components/licensee_rentalitems/TrailerServicing';\n\nimport PaymentInward from './_components/payments/PaymentInward';\nimport PaymentOutward from './_components/payments/PaymentOutward';\n\nimport RentalItemTypeEdit from './_components/adminrentalitem/RentalItemTypeEdit';\nimport RentalItemTypeList from './_components/adminrentalitem/RentalItemTypeList';\n\nimport TrailerTypeEdit from './_components/adminrentalitem/TrailerTypeEdit';\nimport TrailerTypeList from './_components/adminrentalitem/TrailerTypeList';\n\nimport UpsellItemTypeEdit from './_components/adminrentalitem/UpsellItemTypeEdit';\nimport UpsellItemTypeList from './_components/adminrentalitem/UpsellItemTypeList';\n\nimport RentalList from './_components/rental/RentalList';\n\n\nimport './index.css'; \nimport './App.css';\nimport { func } from 'prop-types';\n\n\nconst mainContainerStyle = {\n\tpaddingTop: '40px',\n\tpaddingBottom: '40px',\n\tflexGrow: 1\n};\n\nexport default function App() {\n\n\treturn (\n\t\t<Router history={history}>\n\n\t\t\t<AppHeader />\n\n\t\t\t<Container style={mainContainerStyle}>\n\n\t\t\t\t<Switch>\n\t\t\t\t\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/\" component={Home} />\n\t\t\t\t\t\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/customers\" component={CustomerList} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/customer/edit/:customerId\" component={CustomerEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/customer/add\" component={CustomerEdit} />\n\t\t\t\t\t<Route exact path=\"/adminpanel/admin/customer/password/reset\" component={CustomerResetPassword} />\n\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/employee/invite\" component={EmployeeInvite} />\n\t\t\t\t\t<Route exact path=\"/adminpanel/employee/invite/accept\" component={EmployeeInviteAccept} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/employee/list\" component={EmployeeList} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/employee/edit/:employeeId?\" component={EmployeeEdit} />\n\t\t\t\t\t<Route exact path=\"/adminpanel/employee/password/reset\" component={EmployeeResetPassword} />\n\t\t\t\t\t\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensees\" component={LicenseeList} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/signup\" component={LicenseeSignup} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/edit/:licenseeId\" component={LicenseeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/employee/edit/:employeeId\" component={LicenseeEmployeeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/employee/invite\" component={LicenseeEmployeeInvite} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/employee/invite/accept\" component={LicenseeEmployeeInviteAccept} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/employee/list\" component={LicenseeEmployeeList} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/admin/licensee/password/reset\" component={LicenseeEmployeeResetPassword} />\n\t\t\t\t\t\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/trailers\" component={LicenseeTrailerList} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/trailer/add\" component={LicenseeTrailerEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/trailer/edit/:trailerId?\" component={LicenseeTrailerEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/upsellitems\" component={LicenseeUpsellItemList} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/upsellitem/add\" component={LicenseeUpsellItemEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/upsellitem/edit/:upsellItemId?\" component={LicenseeUpsellItemEdit} />\n\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/rentalitem/block/list\" component={BlockTrailerList} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/rentalitem/block/add\" component={BlockTrailerEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/rentalitem/block/edit/:blockingId?\" component={BlockTrailerEdit} />\n\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/insurance\" component={LicenseeTrailerInsurance} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/licensee/:licenseeId/servicing\" component={LicenseeTrailerServicing} />\n\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/payments/inward\" component={PaymentInward} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/payments/outward\" component={PaymentOutward} />\n\t\t\t\t\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/financial/licensee\" component={FinancialLicensee} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/financial/renteditem\" component={FinancialTrailer} />\n\t\t\t\t\t\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/rentals\" component={RentalList} />\n\t\t\t\t\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/rentalitemtype/edit/:rentalItemId\" component={RentalItemTypeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/rentalitemtype/add\" component={RentalItemTypeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/rentalitemtypes\" component={RentalItemTypeList} />\n\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/trailertype/edit/:trailerId\" component={TrailerTypeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/trailertype/add\" component={TrailerTypeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/trailertypes\" component={TrailerTypeList} />\n\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/upsellitemtype/edit/:upsellItemId\" component={UpsellItemTypeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/upsellitemtype/add\" component={UpsellItemTypeEdit} />\n\t\t\t\t\t<PrivateRoute exact path=\"/adminpanel/upsellitemtypes\" component={UpsellItemTypeList} />\n\n\t\t\t\t\t<Route path=\"/adminpanel/signin\" component={EmployeeSignIn} />\n\n\t\t\t\t\t<Redirect from=\"*\" to=\"/adminpanel/\" />\n\n\t\t\t\t</Switch>\n\n\t\t\t</Container>\n\n\t\t\t<AppFooter />\n\n\t\t</Router>\n\t);\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './_helpers';\nimport  App  from './App';\n\n// setup fake backend\n// import { configureFakeBackend } from './_helpers';\n// configureFakeBackend();\n\nconsole.log(\"App\", App);\n\nrender(\n    // <Provider store={store}>\n        <App />,\n    // </Provider>,\n    document.getElementById('t2y-app')\n);"],"sourceRoot":""}